(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    625601,      12360]
NotebookOptionsPosition[    619322,      12260]
NotebookOutlinePosition[    619727,      12277]
CellTagsIndexPosition[    619684,      12274]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
In this notebook, I test a single configuration with the revised version of \
getSigmaXY(). I have also output the derivatives for the each individual \
cells. The neighbor list is also recorded for the original CPU version \
(without any offset in the indexing). You can see that the first derivatives \
are now inconsistent with the Mathematica calculation, while the second \
derivatives are still consistent (for second derivatives, \
I\[CloseCurlyQuote]m using the original neighbor lists). The original \
neighbor list is also consistent with Mathematica.\
\>", "Text",
 CellChangeTimes->{{3.915808536004024*^9, 3.91580854050817*^9}, {
  3.915808596637679*^9, 3.915808612237488*^9}, {3.915808657647499*^9, 
  3.9158086859836283`*^9}, {3.915808825514185*^9, 3.9158089746532393`*^9}, {
  3.915809010013693*^9, 3.9158091283533707`*^9}, {3.915809278379929*^9, 
  3.915809281387868*^9}},ExpressionUUID->"8d0fc270-cc72-4f23-9ef9-\
6642b4198300"],

Cell[CellGroupData[{

Cell["Analytical functions", "Section",
 CellChangeTimes->{{3.906130030072163*^9, 
  3.906130041829665*^9}},ExpressionUUID->"55216139-4dd1-47d1-b3e7-\
3efeeb28d2c0"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.906130176580935*^9, 3.90613017877917*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"60971f4b-0750-4d2f-9e72-24ba65137fb2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Cross", " ", "product", " ", "for", " ", "2", "d", " ", "vectors"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Cross2d", "[", 
     RowBox[{"r1_", ",", "r2_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"r1", "[", 
       RowBox[{"[", "1", "]"}], "]"}], 
      RowBox[{"r2", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "-", 
     RowBox[{
      RowBox[{"r1", "[", 
       RowBox[{"[", "2", "]"}], "]"}], 
      RowBox[{"r2", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "The", " ", "vertex", " ", "position", " ", "given", " ", "the", " ", 
     "three", " ", "adjecent", " ", "cell", " ", "positions"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"voro", "[", 
      RowBox[{"ri_", ",", "rj_", ",", "rk_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "rij", ",", "rjk", ",", "rik", ",", "cross", ",", "d", ",", 
         "\[Alpha]", ",", "\[Beta]", ",", "\[Gamma]"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"rij", "=", 
         RowBox[{"ri", "-", "rj"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"rjk", "=", 
         RowBox[{"rj", "-", "rk"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"rik", "=", 
         RowBox[{"ri", "-", "rk"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"cross", "=", 
         RowBox[{"Cross2d", "[", 
          RowBox[{"rij", ",", "rjk"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"d", "=", 
         RowBox[{"2", "*", "cross", "*", "cross"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"\[Alpha]", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"rjk", ".", "rjk"}], ")"}], "*", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"rij", ".", "rik"}], ")"}], "/", "d"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Beta]", "=", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"rik", ".", "rik"}], ")"}]}], "*", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"rij", ".", "rjk"}], ")"}], "/", "d"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Gamma]", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"rij", ".", "rij"}], ")"}], "*", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"rik", ".", "rjk"}], ")"}], "/", "d"}]}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[Alpha]", "*", "ri"}], "+", 
         RowBox[{"\[Beta]", "*", "rj"}], "+", 
         RowBox[{"\[Gamma]", "*", "rk"}]}]}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7021149776264772`*^9, 3.702115029400317*^9}, {
  3.702115105977425*^9, 3.702115106740584*^9}, {3.702115641476828*^9, 
  3.7021156740891857`*^9}, {3.702115937679511*^9, 3.702115970430769*^9}, {
  3.7021160716576014`*^9, 3.702116093688979*^9}, {3.702116333940885*^9, 
  3.702116367283513*^9}, {3.702116697174008*^9, 3.702116716983386*^9}, {
  3.702117069252245*^9, 3.702117092274171*^9}, {3.702117181705346*^9, 
  3.7021171837511787`*^9}, {3.702117722524921*^9, 3.702117731376658*^9}, {
  3.702117777086854*^9, 3.7021177930464067`*^9}, {3.702117832077812*^9, 
  3.702117850958396*^9}, {3.702118822968773*^9, 3.702118832692359*^9}, {
  3.906130184098963*^9, 3.906130249675869*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"4df5e789-61f6-4abc-b9ca-476070b47347"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "calculate", " ", "perimetes", " ", "and", " ", "areas", " ", "given", " ",
     "the", " ", "positions", " ", "of", " ", "all", " ", "the", " ", 
    "vertices"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"peri", "[", "hv_List", "]"}], ":=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"hv", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "-", 
           RowBox[{"hv", "[", 
            RowBox[{"[", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"1", "+", "i"}], "==", 
                RowBox[{"Length", "[", "hv", "]"}]}], ",", 
               RowBox[{"Length", "[", "hv", "]"}], ",", 
               RowBox[{"Mod", "[", 
                RowBox[{
                 RowBox[{"1", "+", "i"}], ",", 
                 RowBox[{"Length", "[", "hv", "]"}]}], "]"}]}], "]"}], "]"}], 
            "]"}]}], ")"}], ".", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"hv", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "-", 
           RowBox[{"hv", "[", 
            RowBox[{"[", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"1", "+", "i"}], "==", 
                RowBox[{"Length", "[", "hv", "]"}]}], ",", 
               RowBox[{"Length", "[", "hv", "]"}], ",", 
               RowBox[{"Mod", "[", 
                RowBox[{
                 RowBox[{"1", "+", "i"}], ",", 
                 RowBox[{"Length", "[", "hv", "]"}]}], "]"}]}], "]"}], "]"}], 
            "]"}]}], ")"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "hv", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"area", "[", "hv_List", "]"}], ":=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"0.5", "*", 
        RowBox[{"Cross2d", "[", 
         RowBox[{
          RowBox[{"hv", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"hv", "[", 
           RowBox[{"[", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"1", "+", "i"}], "==", 
               RowBox[{"Length", "[", "hv", "]"}]}], ",", 
              RowBox[{"Length", "[", "hv", "]"}], ",", 
              RowBox[{"Mod", "[", 
               RowBox[{
                RowBox[{"1", "+", "i"}], ",", 
                RowBox[{"Length", "[", "hv", "]"}]}], "]"}]}], "]"}], "]"}], 
           "]"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "hv", "]"}]}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.906130090477276*^9, 3.906130134870748*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"97592e27-686d-40d1-af7f-e41f521bb520"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "is", " ", "the", " ", "1", "st", " ", "derivative", " ", 
    "of", " ", "e", " ", 
    RowBox[{"w", ".", "r", ".", "t", ".", " ", "h"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"dedhGeneral", "[", 
    RowBox[{"hv_List", ",", "KA_", ",", "KP_", ",", "PA_", ",", "PP_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "dedhx", ",", "dedhy", ",", "hix", ",", "hiy", ",", "hiLastx", ",", 
       "hiLasty", ",", "hiNextx", ",", "hiNexty", ",", "hjx", ",", "hjy", ",",
        "hjLastx", ",", "hjLasty", ",", "hjNextx", ",", "hjNexty", ",", "p", 
       ",", "a"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"p", "=", 
       RowBox[{"peri", "[", "hv", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"a", "=", 
       RowBox[{"area", "[", "hv", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"hix", "=", 
       RowBox[{
        RowBox[{"hv", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", 
      RowBox[{"hiy", "=", 
       RowBox[{
        RowBox[{"hv", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", 
      RowBox[{"hiLastx", "=", 
       RowBox[{
        RowBox[{"hv", "[", 
         RowBox[{"[", 
          RowBox[{"Length", "[", "hv", "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", 
      RowBox[{"hiLasty", "=", 
       RowBox[{
        RowBox[{"hv", "[", 
         RowBox[{"[", 
          RowBox[{"Length", "[", "hv", "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", 
      RowBox[{"hiNextx", "=", 
       RowBox[{
        RowBox[{"hv", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", 
      RowBox[{"hiNexty", "=", 
       RowBox[{
        RowBox[{"hv", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"dedhx", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "1.`"}], " ", "hiLasty"}], "+", 
           RowBox[{"1.`", " ", "hiNexty"}]}], ")"}], " ", "KA", " ", 
         RowBox[{"(", 
          RowBox[{"a", "-", "PA"}], ")"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{
             RowBox[{"-", "hiLastx"}], "+", "hix"}], 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "hiLastx"}], "+", "hix"}], ")"}], "2"], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "hiLasty"}], "+", "hiy"}], ")"}], "2"]}]]], "+", 
           FractionBox[
            RowBox[{
             RowBox[{"-", "hiNextx"}], "+", "hix"}], 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "hiNextx"}], "+", "hix"}], ")"}], "2"], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "hiNexty"}], "+", "hiy"}], ")"}], "2"]}]]]}], 
          ")"}], " ", "KP", " ", 
         RowBox[{"(", 
          RowBox[{"p", "-", "PP"}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"dedhy", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "1.`"}], " ", "hiLastx"}], "+", 
           RowBox[{"1.`", " ", "hiNextx"}]}], ")"}], " ", "KA", " ", 
         RowBox[{"(", 
          RowBox[{"PA", "-", "a"}], ")"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{
             RowBox[{"-", "hiLasty"}], "+", "hiy"}], 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "hiLastx"}], "+", "hix"}], ")"}], "2"], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "hiLasty"}], "+", "hiy"}], ")"}], "2"]}]]], "+", 
           FractionBox[
            RowBox[{
             RowBox[{"-", "hiNexty"}], "+", "hiy"}], 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "hiNextx"}], "+", "hix"}], ")"}], "2"], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "hiNexty"}], "+", "hiy"}], ")"}], "2"]}]]]}], 
          ")"}], " ", "KP", " ", 
         RowBox[{"(", 
          RowBox[{"p", "-", "PP"}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"dedhx", ",", "dedhy"}], "}"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9045833741432323`*^9, 3.904583548806188*^9}, {
  3.9045836066291523`*^9, 3.9045836070636253`*^9}, {3.904583682480673*^9, 
  3.904583686629364*^9}, {3.9045849899093447`*^9, 3.904584999523973*^9}, {
  3.90613032621171*^9, 3.9061303271513033`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"3ff30ab7-2c15-4798-8fd6-e2fed1e9b966"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "is", " ", "the", " ", "generalized", " ", "function", " ", 
    "for", " ", "de2dhidhj"}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"de2dhihjxx", "[", 
      RowBox[{
      "hv_List", ",", "j_", ",", "KA_", ",", "KP_", ",", "PA_", ",", "PP_"}], 
      "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "de2xx", ",", "hix", ",", "hiy", ",", "hiLastx", ",", "hiLasty", ",", 
         "hiNextx", ",", "hiNexty", ",", "hjx", ",", "hjy", ",", "hjLastx", 
         ",", "hjLasty", ",", "hjNextx", ",", "hjNexty", ",", "p", ",", "a"}],
         "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"p", "=", 
         RowBox[{"peri", "[", "hv", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"a", "=", 
         RowBox[{"area", "[", "hv", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"hix", "=", 
         RowBox[{
          RowBox[{"hv", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", 
        RowBox[{"hiy", "=", 
         RowBox[{
          RowBox[{"hv", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", 
        RowBox[{"hiLastx", "=", 
         RowBox[{
          RowBox[{"hv", "[", 
           RowBox[{"[", 
            RowBox[{"Length", "[", "hv", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", 
        RowBox[{"hiLasty", "=", 
         RowBox[{
          RowBox[{"hv", "[", 
           RowBox[{"[", 
            RowBox[{"Length", "[", "hv", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", 
        RowBox[{"hiNextx", "=", 
         RowBox[{
          RowBox[{"hv", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", 
        RowBox[{"hiNexty", "=", 
         RowBox[{
          RowBox[{"hv", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"hjx", "=", 
         RowBox[{
          RowBox[{"hv", "[", 
           RowBox[{"[", "j", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", 
        RowBox[{"hjy", "=", 
         RowBox[{
          RowBox[{"hv", "[", 
           RowBox[{"[", "j", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", 
        RowBox[{"hjLastx", "=", 
         RowBox[{
          RowBox[{"hv", "[", 
           RowBox[{"[", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"j", "-", "1"}], "==", "0"}], ",", 
              RowBox[{"Length", "[", "hv", "]"}], ",", 
              RowBox[{"j", "-", "1"}]}], "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", 
        RowBox[{"hjLasty", "=", 
         RowBox[{
          RowBox[{"hv", "[", 
           RowBox[{"[", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"j", "-", "1"}], "==", "0"}], ",", 
              RowBox[{"Length", "[", "hv", "]"}], ",", 
              RowBox[{"j", "-", "1"}]}], "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", 
        RowBox[{"hjNextx", "=", 
         RowBox[{
          RowBox[{"hv", "[", 
           RowBox[{"[", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"j", "+", "1"}], "==", 
               RowBox[{"Length", "[", "hv", "]"}]}], ",", 
              RowBox[{"Length", "[", "hv", "]"}], ",", 
              RowBox[{"Mod", "[", 
               RowBox[{
                RowBox[{"j", "+", "1"}], ",", 
                RowBox[{"Length", "[", "hv", "]"}]}], "]"}]}], "]"}], "]"}], 
           "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", 
        RowBox[{"hjNexty", "=", 
         RowBox[{
          RowBox[{"hv", "[", 
           RowBox[{"[", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"j", "+", "1"}], "==", 
               RowBox[{"Length", "[", "hv", "]"}]}], ",", 
              RowBox[{"Length", "[", "hv", "]"}], ",", 
              RowBox[{"Mod", "[", 
               RowBox[{
                RowBox[{"j", "+", "1"}], ",", 
                RowBox[{"Length", "[", "hv", "]"}]}], "]"}]}], "]"}], "]"}], 
           "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "if", " ", "we", " ", "are", " ", "doing", " ", "de2dhidhi"}], 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"j", "==", "1"}], ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"de2xx", "=", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "0.5`"}], " ", "hiLasty"}], "+", 
                  RowBox[{"0.5`", " ", "hiNexty"}]}], ")"}], "2"], " ", 
               "KA"}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{
                    RowBox[{"-", "hiLastx"}], "+", "hix"}], 
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiLastx"}], "+", "hix"}], ")"}], "2"], "+", 
                    
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiLasty"}], "+", "hiy"}], ")"}], "2"]}]]], 
                  "+", 
                  FractionBox[
                   RowBox[{
                    RowBox[{"-", "hiNextx"}], "+", "hix"}], 
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiNextx"}], "+", "hix"}], ")"}], "2"], "+", 
                    
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiNexty"}], "+", "hiy"}], ")"}], "2"]}]]]}],
                  ")"}], "2"], " ", "KP"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  FractionBox[
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiLastx"}], "+", "hix"}], ")"}], "2"], 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiLastx"}], "+", "hix"}], ")"}], "2"], "+", 
                    
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiLasty"}], "+", "hiy"}], ")"}], "2"]}], 
                    ")"}], 
                    RowBox[{"3", "/", "2"}]]]}], "+", 
                 FractionBox["1", 
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiLastx"}], "+", "hix"}], ")"}], "2"], "+", 
                    
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiLasty"}], "+", "hiy"}], ")"}], "2"]}]]], 
                 "-", 
                 FractionBox[
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiNextx"}], "+", "hix"}], ")"}], "2"], 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiNextx"}], "+", "hix"}], ")"}], "2"], "+", 
                    
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiNexty"}], "+", "hiy"}], ")"}], "2"]}], 
                    ")"}], 
                   RowBox[{"3", "/", "2"}]]], "+", 
                 FractionBox["1", 
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiNextx"}], "+", "hix"}], ")"}], "2"], "+", 
                    
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiNexty"}], "+", "hiy"}], ")"}], "2"]}]]]}],
                 ")"}], " ", "KP", " ", 
               RowBox[{"(", 
                RowBox[{"p", "-", "PP"}], ")"}]}]}], ")"}]}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"j", "==", "2"}], ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"de2xx", "=", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "0.5`"}], " ", "hiy"}], "+", 
                 RowBox[{"0.5`", " ", "hjNexty"}]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "0.5`"}], " ", "hiLasty"}], "+", 
                 RowBox[{"0.5`", " ", "hjy"}]}], ")"}], " ", "KA"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{
                   RowBox[{"-", "hiLastx"}], "+", "hix"}], 
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiLastx"}], "+", "hix"}], ")"}], "2"], "+", 
                    
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiLasty"}], "+", "hiy"}], ")"}], "2"]}]]], 
                 "+", 
                 FractionBox[
                  RowBox[{"hix", "-", "hjx"}], 
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"hix", "-", "hjx"}], ")"}], "2"], "+", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"hiy", "-", "hjy"}], ")"}], "2"]}]]]}], ")"}], 
               " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{
                   RowBox[{"-", "hix"}], "+", "hjx"}], 
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"hix", "-", "hjx"}], ")"}], "2"], "+", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"hiy", "-", "hjy"}], ")"}], "2"]}]]], "+", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"-", "hjNextx"}], "+", "hjx"}], 
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hjNextx"}], "+", "hjx"}], ")"}], "2"], "+", 
                    
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hjNexty"}], "+", "hjy"}], ")"}], "2"]}]]]}],
                 ")"}], " ", "KP"}], "-", 
              RowBox[{
               FractionBox["1", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"hix", "-", "hjx"}], ")"}], "2"], "+", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"hiy", "-", "hjy"}], ")"}], "2"]}], ")"}], 
                 RowBox[{"3", "/", "2"}]]], 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"hiy", "-", "hjy"}], ")"}], "2"], " ", "KP", " ", 
               RowBox[{"(", 
                RowBox[{"p", "-", "PP"}], ")"}]}]}], ")"}]}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"j", "==", 
           RowBox[{"Length", "[", "hv", "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"de2xx", "=", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"0.5`", " ", "hiy"}], "-", 
                 RowBox[{"0.5`", " ", "hjLasty"}]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"0.5`", " ", "hiNexty"}], "-", 
                 RowBox[{"0.5`", " ", "hjy"}]}], ")"}], " ", "KA"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{
                   RowBox[{"-", "hiNextx"}], "+", "hix"}], 
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiNextx"}], "+", "hix"}], ")"}], "2"], "+", 
                    
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiNexty"}], "+", "hiy"}], ")"}], "2"]}]]], 
                 "+", 
                 FractionBox[
                  RowBox[{"hix", "-", "hjx"}], 
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"hix", "-", "hjx"}], ")"}], "2"], "+", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"hiy", "-", "hjy"}], ")"}], "2"]}]]]}], ")"}], 
               " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{
                   RowBox[{"-", "hix"}], "+", "hjx"}], 
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"hix", "-", "hjx"}], ")"}], "2"], "+", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"hiy", "-", "hjy"}], ")"}], "2"]}]]], "+", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"-", "hjLastx"}], "+", "hjx"}], 
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"hjLastx", "-", "hjx"}], ")"}], "2"], "+", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"hjLasty", "-", "hjy"}], ")"}], "2"]}]]]}], ")"}],
                " ", "KP"}], "-", 
              RowBox[{
               FractionBox["1", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"hix", "-", "hjx"}], ")"}], "2"], "+", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"hiy", "-", "hjy"}], ")"}], "2"]}], ")"}], 
                 RowBox[{"3", "/", "2"}]]], 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"hiy", "-", "hjy"}], ")"}], "2"], " ", "KP", " ", 
               RowBox[{"(", 
                RowBox[{"p", "-", "PP"}], ")"}]}]}], ")"}]}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"j", "==", "1"}], "||", 
             RowBox[{"j", "==", "2"}], "||", 
             RowBox[{"j", "==", 
              RowBox[{"Length", "[", "hv", "]"}]}]}], ")"}]}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"de2xx", "=", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "0.5`"}], " ", "hiLasty"}], "+", 
               RowBox[{"0.5`", " ", "hiNexty"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "0.5`"}], " ", "hjLasty"}], "+", 
               RowBox[{"0.5`", " ", "hjNexty"}]}], ")"}], " ", "KA"}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{
                 RowBox[{"-", "hiLastx"}], "+", "hix"}], 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiLastx"}], "+", "hix"}], ")"}], "2"], "+", 
                  
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiLasty"}], "+", "hiy"}], ")"}], "2"]}]]], 
               "+", 
               FractionBox[
                RowBox[{
                 RowBox[{"-", "hiNextx"}], "+", "hix"}], 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiNextx"}], "+", "hix"}], ")"}], "2"], "+", 
                  
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiNexty"}], "+", "hiy"}], ")"}], "2"]}]]]}],
               ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{
                 RowBox[{"-", "hjLastx"}], "+", "hjx"}], 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"hjLastx", "-", "hjx"}], ")"}], "2"], "+", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"hjLasty", "-", "hjy"}], ")"}], "2"]}]]], "+", 
               FractionBox[
                RowBox[{
                 RowBox[{"-", "hjNextx"}], "+", "hjx"}], 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hjNextx"}], "+", "hjx"}], ")"}], "2"], "+", 
                  
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hjNexty"}], "+", "hjy"}], ")"}], "2"]}]]]}],
               ")"}], " ", "KP"}]}]}]}], "]"}], ";", "\[IndentingNewLine]", 
        "de2xx"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"de2dhihjxy", "[", 
      RowBox[{
      "hv_List", ",", "j_", ",", "KA_", ",", "KP_", ",", "PA_", ",", "PP_"}], 
      "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "de2xy", ",", "hix", ",", "hiy", ",", "hiLastx", ",", "hiLasty", ",", 
         "hiNextx", ",", "hiNexty", ",", "hjx", ",", "hjy", ",", "hjLastx", 
         ",", "hjLasty", ",", "hjNextx", ",", "hjNexty", ",", "p", ",", "a"}],
         "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"p", "=", 
         RowBox[{"peri", "[", "hv", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"a", "=", 
         RowBox[{"area", "[", "hv", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"hix", "=", 
         RowBox[{
          RowBox[{"hv", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", 
        RowBox[{"hiy", "=", 
         RowBox[{
          RowBox[{"hv", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", 
        RowBox[{"hiLastx", "=", 
         RowBox[{
          RowBox[{"hv", "[", 
           RowBox[{"[", 
            RowBox[{"Length", "[", "hv", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", 
        RowBox[{"hiLasty", "=", 
         RowBox[{
          RowBox[{"hv", "[", 
           RowBox[{"[", 
            RowBox[{"Length", "[", "hv", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", 
        RowBox[{"hiNextx", "=", 
         RowBox[{
          RowBox[{"hv", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", 
        RowBox[{"hiNexty", "=", 
         RowBox[{
          RowBox[{"hv", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"hjx", "=", 
         RowBox[{
          RowBox[{"hv", "[", 
           RowBox[{"[", "j", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", 
        RowBox[{"hjy", "=", 
         RowBox[{
          RowBox[{"hv", "[", 
           RowBox[{"[", "j", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", 
        RowBox[{"hjLastx", "=", 
         RowBox[{
          RowBox[{"hv", "[", 
           RowBox[{"[", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"j", "-", "1"}], "==", "0"}], ",", 
              RowBox[{"Length", "[", "hv", "]"}], ",", 
              RowBox[{"j", "-", "1"}]}], "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", 
        RowBox[{"hjLasty", "=", 
         RowBox[{
          RowBox[{"hv", "[", 
           RowBox[{"[", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"j", "-", "1"}], "==", "0"}], ",", 
              RowBox[{"Length", "[", "hv", "]"}], ",", 
              RowBox[{"j", "-", "1"}]}], "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", 
        RowBox[{"hjNextx", "=", 
         RowBox[{
          RowBox[{"hv", "[", 
           RowBox[{"[", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"j", "+", "1"}], "==", 
               RowBox[{"Length", "[", "hv", "]"}]}], ",", 
              RowBox[{"Length", "[", "hv", "]"}], ",", 
              RowBox[{"Mod", "[", 
               RowBox[{
                RowBox[{"j", "+", "1"}], ",", 
                RowBox[{"Length", "[", "hv", "]"}]}], "]"}]}], "]"}], "]"}], 
           "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", 
        RowBox[{"hjNexty", "=", 
         RowBox[{
          RowBox[{"hv", "[", 
           RowBox[{"[", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"j", "+", "1"}], "==", 
               RowBox[{"Length", "[", "hv", "]"}]}], ",", 
              RowBox[{"Length", "[", "hv", "]"}], ",", 
              RowBox[{"Mod", "[", 
               RowBox[{
                RowBox[{"j", "+", "1"}], ",", 
                RowBox[{"Length", "[", "hv", "]"}]}], "]"}]}], "]"}], "]"}], 
           "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "if", " ", "we", " ", "are", " ", "doing", " ", "de2dhidhi"}], 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"j", "==", "1"}], ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"de2xy", "=", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"0.5`", " ", "hiLastx"}], "-", 
                 RowBox[{"0.5`", " ", "hiNextx"}]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "0.5`"}], " ", "hiLasty"}], "+", 
                 RowBox[{"0.5`", " ", "hiNexty"}]}], ")"}], " ", "KA"}], "+", 
              
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{
                   RowBox[{"-", "hiLastx"}], "+", "hix"}], 
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiLastx"}], "+", "hix"}], ")"}], "2"], "+", 
                    
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiLasty"}], "+", "hiy"}], ")"}], "2"]}]]], 
                 "+", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"-", "hiNextx"}], "+", "hix"}], 
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiNextx"}], "+", "hix"}], ")"}], "2"], "+", 
                    
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiNexty"}], "+", "hiy"}], ")"}], "2"]}]]]}],
                 ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{
                   RowBox[{"-", "hiLasty"}], "+", "hiy"}], 
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiLastx"}], "+", "hix"}], ")"}], "2"], "+", 
                    
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiLasty"}], "+", "hiy"}], ")"}], "2"]}]]], 
                 "+", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"-", "hiNexty"}], "+", "hiy"}], 
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiNextx"}], "+", "hix"}], ")"}], "2"], "+", 
                    
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiNexty"}], "+", "hiy"}], ")"}], "2"]}]]]}],
                 ")"}], " ", "KP"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  FractionBox[
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiLastx"}], "+", "hix"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiLasty"}], "+", "hiy"}], ")"}]}], 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiLastx"}], "+", "hix"}], ")"}], "2"], "+", 
                    
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiLasty"}], "+", "hiy"}], ")"}], "2"]}], 
                    ")"}], 
                    RowBox[{"3", "/", "2"}]]]}], "-", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiNextx"}], "+", "hix"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiNexty"}], "+", "hiy"}], ")"}]}], 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiNextx"}], "+", "hix"}], ")"}], "2"], "+", 
                    
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiNexty"}], "+", "hiy"}], ")"}], "2"]}], 
                    ")"}], 
                   RowBox[{"3", "/", "2"}]]]}], ")"}], " ", "KP", " ", 
               RowBox[{"(", 
                RowBox[{"p", "-", "PP"}], ")"}]}]}], ")"}]}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"j", "==", "2"}], ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"de2xy", "=", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"0.5`", " ", "hix"}], "-", 
               RowBox[{"0.5`", " ", "hjNextx"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "0.5`"}], " ", "hiLasty"}], "+", 
               RowBox[{"0.5`", " ", "hjy"}]}], ")"}], " ", "KA"}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{
                 RowBox[{"-", "hiLastx"}], "+", "hix"}], 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiLastx"}], "+", "hix"}], ")"}], "2"], "+", 
                  
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiLasty"}], "+", "hiy"}], ")"}], "2"]}]]], 
               "+", 
               FractionBox[
                RowBox[{"hix", "-", "hjx"}], 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"hix", "-", "hjx"}], ")"}], "2"], "+", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"hiy", "-", "hjy"}], ")"}], "2"]}]]]}], ")"}], 
             " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{
                 RowBox[{"-", "hiy"}], "+", "hjy"}], 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"hix", "-", "hjx"}], ")"}], "2"], "+", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"hiy", "-", "hjy"}], ")"}], "2"]}]]], "+", 
               FractionBox[
                RowBox[{
                 RowBox[{"-", "hjNexty"}], "+", "hjy"}], 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hjNextx"}], "+", "hjx"}], ")"}], "2"], "+", 
                  
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hjNexty"}], "+", "hjy"}], ")"}], "2"]}]]]}],
               ")"}], " ", "KP"}], "-", " ", 
            RowBox[{"KA", " ", 
             RowBox[{"(", 
              RowBox[{"PA", "-", "a"}], ")"}]}], "+", 
            RowBox[{
             FractionBox["1", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"hix", "-", "hjx"}], ")"}], "2"], "+", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"hiy", "-", "hjy"}], ")"}], "2"]}], ")"}], 
               RowBox[{"3", "/", "2"}]]], "2", " ", 
             RowBox[{"(", 
              RowBox[{"hix", "-", "hjx"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"hiy", "-", "hjy"}], ")"}], " ", "KP", " ", 
             RowBox[{"(", 
              RowBox[{"p", "-", "PP"}], ")"}]}]}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"j", "==", 
           RowBox[{"Length", "[", "hv", "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"de2xy", "=", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "0.5`"}], " ", "hix"}], "+", 
               RowBox[{"0.5`", " ", "hjLastx"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"0.5`", " ", "hiNexty"}], "-", 
               RowBox[{"0.5`", " ", "hjy"}]}], ")"}], " ", "KA"}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{
                 RowBox[{"-", "hiNextx"}], "+", "hix"}], 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiNextx"}], "+", "hix"}], ")"}], "2"], "+", 
                  
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiNexty"}], "+", "hiy"}], ")"}], "2"]}]]], 
               "+", 
               FractionBox[
                RowBox[{"hix", "-", "hjx"}], 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"hix", "-", "hjx"}], ")"}], "2"], "+", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"hiy", "-", "hjy"}], ")"}], "2"]}]]]}], ")"}], 
             " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{
                 RowBox[{"-", "hiy"}], "+", "hjy"}], 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"hix", "-", "hjx"}], ")"}], "2"], "+", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"hiy", "-", "hjy"}], ")"}], "2"]}]]], "+", 
               FractionBox[
                RowBox[{
                 RowBox[{"-", "hjLasty"}], "+", "hjy"}], 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"hjLastx", "-", "hjx"}], ")"}], "2"], "+", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"hjLasty", "-", "hjy"}], ")"}], "2"]}]]]}], ")"}],
              " ", "KP"}], "+", 
            RowBox[{"KA", " ", 
             RowBox[{"(", 
              RowBox[{"PA", "-", "a"}], ")"}]}], "+", 
            RowBox[{
             FractionBox["1", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"hix", "-", "hjx"}], ")"}], "2"], "+", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"hiy", "-", "hjy"}], ")"}], "2"]}], ")"}], 
               RowBox[{"3", "/", "2"}]]], "2", " ", 
             RowBox[{"(", 
              RowBox[{"hix", "-", "hjx"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"hiy", "-", "hjy"}], ")"}], " ", "KP", " ", 
             RowBox[{"(", 
              RowBox[{"p", "-", "PP"}], ")"}]}]}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"j", "==", "1"}], "||", 
             RowBox[{"j", "==", "2"}], "||", 
             RowBox[{"j", "==", 
              RowBox[{"Length", "[", "hv", "]"}]}]}], ")"}]}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"de2xy", "=", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "0.5`"}], " ", "hiLasty"}], "+", 
               RowBox[{"0.5`", " ", "hiNexty"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"0.5`", " ", "hjLastx"}], "-", 
               RowBox[{"0.5`", " ", "hjNextx"}]}], ")"}], " ", "KA"}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{
                 RowBox[{"-", "hiLastx"}], "+", "hix"}], 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiLastx"}], "+", "hix"}], ")"}], "2"], "+", 
                  
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiLasty"}], "+", "hiy"}], ")"}], "2"]}]]], 
               "+", 
               FractionBox[
                RowBox[{
                 RowBox[{"-", "hiNextx"}], "+", "hix"}], 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiNextx"}], "+", "hix"}], ")"}], "2"], "+", 
                  
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiNexty"}], "+", "hiy"}], ")"}], "2"]}]]]}],
               ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{
                 RowBox[{"-", "hjLasty"}], "+", "hjy"}], 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"hjLastx", "-", "hjx"}], ")"}], "2"], "+", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"hjLasty", "-", "hjy"}], ")"}], "2"]}]]], "+", 
               FractionBox[
                RowBox[{
                 RowBox[{"-", "hjNexty"}], "+", "hjy"}], 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hjNextx"}], "+", "hjx"}], ")"}], "2"], "+", 
                  
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hjNexty"}], "+", "hjy"}], ")"}], "2"]}]]]}],
               ")"}], " ", "KP"}]}]}]}], "]"}], ";", "\[IndentingNewLine]", 
        "de2xy"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"de2dhihjyx", "[", 
      RowBox[{
      "hv_List", ",", "j_", ",", "KA_", ",", "KP_", ",", "PA_", ",", "PP_"}], 
      "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "de2yx", ",", "hix", ",", "hiy", ",", "hiLastx", ",", "hiLasty", ",", 
         "hiNextx", ",", "hiNexty", ",", "hjx", ",", "hjy", ",", "hjLastx", 
         ",", "hjLasty", ",", "hjNextx", ",", "hjNexty", ",", "p", ",", "a"}],
         "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"p", "=", 
         RowBox[{"peri", "[", "hv", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"a", "=", 
         RowBox[{"area", "[", "hv", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"hix", "=", 
         RowBox[{
          RowBox[{"hv", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", 
        RowBox[{"hiy", "=", 
         RowBox[{
          RowBox[{"hv", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", 
        RowBox[{"hiLastx", "=", 
         RowBox[{
          RowBox[{"hv", "[", 
           RowBox[{"[", 
            RowBox[{"Length", "[", "hv", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", 
        RowBox[{"hiLasty", "=", 
         RowBox[{
          RowBox[{"hv", "[", 
           RowBox[{"[", 
            RowBox[{"Length", "[", "hv", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", 
        RowBox[{"hiNextx", "=", 
         RowBox[{
          RowBox[{"hv", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", 
        RowBox[{"hiNexty", "=", 
         RowBox[{
          RowBox[{"hv", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"hjx", "=", 
         RowBox[{
          RowBox[{"hv", "[", 
           RowBox[{"[", "j", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", 
        RowBox[{"hjy", "=", 
         RowBox[{
          RowBox[{"hv", "[", 
           RowBox[{"[", "j", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", 
        RowBox[{"hjLastx", "=", 
         RowBox[{
          RowBox[{"hv", "[", 
           RowBox[{"[", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"j", "-", "1"}], "==", "0"}], ",", 
              RowBox[{"Length", "[", "hv", "]"}], ",", 
              RowBox[{"j", "-", "1"}]}], "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", 
        RowBox[{"hjLasty", "=", 
         RowBox[{
          RowBox[{"hv", "[", 
           RowBox[{"[", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"j", "-", "1"}], "==", "0"}], ",", 
              RowBox[{"Length", "[", "hv", "]"}], ",", 
              RowBox[{"j", "-", "1"}]}], "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", 
        RowBox[{"hjNextx", "=", 
         RowBox[{
          RowBox[{"hv", "[", 
           RowBox[{"[", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"j", "+", "1"}], "==", 
               RowBox[{"Length", "[", "hv", "]"}]}], ",", 
              RowBox[{"Length", "[", "hv", "]"}], ",", 
              RowBox[{"Mod", "[", 
               RowBox[{
                RowBox[{"j", "+", "1"}], ",", 
                RowBox[{"Length", "[", "hv", "]"}]}], "]"}]}], "]"}], "]"}], 
           "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", 
        RowBox[{"hjNexty", "=", 
         RowBox[{
          RowBox[{"hv", "[", 
           RowBox[{"[", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"j", "+", "1"}], "==", 
               RowBox[{"Length", "[", "hv", "]"}]}], ",", 
              RowBox[{"Length", "[", "hv", "]"}], ",", 
              RowBox[{"Mod", "[", 
               RowBox[{
                RowBox[{"j", "+", "1"}], ",", 
                RowBox[{"Length", "[", "hv", "]"}]}], "]"}]}], "]"}], "]"}], 
           "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "if", " ", "we", " ", "are", " ", "doing", " ", "de2dhidhi"}], 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"j", "==", "1"}], ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"de2yx", "=", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"0.5`", " ", "hiLastx"}], "-", 
                 RowBox[{"0.5`", " ", "hiNextx"}]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "0.5`"}], " ", "hiLasty"}], "+", 
                 RowBox[{"0.5`", " ", "hiNexty"}]}], ")"}], " ", "KA"}], "+", 
              
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{
                   RowBox[{"-", "hiLastx"}], "+", "hix"}], 
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiLastx"}], "+", "hix"}], ")"}], "2"], "+", 
                    
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiLasty"}], "+", "hiy"}], ")"}], "2"]}]]], 
                 "+", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"-", "hiNextx"}], "+", "hix"}], 
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiNextx"}], "+", "hix"}], ")"}], "2"], "+", 
                    
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiNexty"}], "+", "hiy"}], ")"}], "2"]}]]]}],
                 ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{
                   RowBox[{"-", "hiLasty"}], "+", "hiy"}], 
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiLastx"}], "+", "hix"}], ")"}], "2"], "+", 
                    
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiLasty"}], "+", "hiy"}], ")"}], "2"]}]]], 
                 "+", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"-", "hiNexty"}], "+", "hiy"}], 
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiNextx"}], "+", "hix"}], ")"}], "2"], "+", 
                    
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiNexty"}], "+", "hiy"}], ")"}], "2"]}]]]}],
                 ")"}], " ", "KP"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  FractionBox[
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiLastx"}], "+", "hix"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiLasty"}], "+", "hiy"}], ")"}]}], 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiLastx"}], "+", "hix"}], ")"}], "2"], "+", 
                    
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiLasty"}], "+", "hiy"}], ")"}], "2"]}], 
                    ")"}], 
                    RowBox[{"3", "/", "2"}]]]}], "-", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiNextx"}], "+", "hix"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiNexty"}], "+", "hiy"}], ")"}]}], 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiNextx"}], "+", "hix"}], ")"}], "2"], "+", 
                    
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiNexty"}], "+", "hiy"}], ")"}], "2"]}], 
                    ")"}], 
                   RowBox[{"3", "/", "2"}]]]}], ")"}], " ", "KP", " ", 
               RowBox[{"(", 
                RowBox[{"p", "-", "PP"}], ")"}]}]}], ")"}]}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"j", "==", "2"}], ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"de2yx", "=", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "0.5`"}], " ", "hiy"}], "+", 
               RowBox[{"0.5`", " ", "hjNexty"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"0.5`", " ", "hiLastx"}], "-", 
               RowBox[{"0.5`", " ", "hjx"}]}], ")"}], " ", "KA"}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{
                 RowBox[{"-", "hiLasty"}], "+", "hiy"}], 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiLastx"}], "+", "hix"}], ")"}], "2"], "+", 
                  
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiLasty"}], "+", "hiy"}], ")"}], "2"]}]]], 
               "+", 
               FractionBox[
                RowBox[{"hiy", "-", "hjy"}], 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"hix", "-", "hjx"}], ")"}], "2"], "+", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"hiy", "-", "hjy"}], ")"}], "2"]}]]]}], ")"}], 
             " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{
                 RowBox[{"-", "hix"}], "+", "hjx"}], 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"hix", "-", "hjx"}], ")"}], "2"], "+", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"hiy", "-", "hjy"}], ")"}], "2"]}]]], "+", 
               FractionBox[
                RowBox[{
                 RowBox[{"-", "hjNextx"}], "+", "hjx"}], 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hjNextx"}], "+", "hjx"}], ")"}], "2"], "+", 
                  
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hjNexty"}], "+", "hjy"}], ")"}], "2"]}]]]}],
               ")"}], " ", "KP"}], "+", " ", 
            RowBox[{"KA", " ", 
             RowBox[{"(", 
              RowBox[{"PA", "-", "a"}], ")"}]}], "+", 
            RowBox[{
             FractionBox["1", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"hix", "-", "hjx"}], ")"}], "2"], "+", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"hiy", "-", "hjy"}], ")"}], "2"]}], ")"}], 
               RowBox[{"3", "/", "2"}]]], "2", " ", 
             RowBox[{"(", 
              RowBox[{"hix", "-", "hjx"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"hiy", "-", "hjy"}], ")"}], " ", "KP", " ", 
             RowBox[{"(", 
              RowBox[{"p", "-", "PP"}], ")"}]}]}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"j", "==", 
           RowBox[{"Length", "[", "hv", "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"de2yx", "=", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"0.5`", " ", "hiy"}], "-", 
               RowBox[{"0.5`", " ", "hjLasty"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "0.5`"}], " ", "hiNextx"}], "+", 
               RowBox[{"0.5`", " ", "hjx"}]}], ")"}], " ", "KA"}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{
                 RowBox[{"-", "hix"}], "+", "hjx"}], 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"hix", "-", "hjx"}], ")"}], "2"], "+", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"hiy", "-", "hjy"}], ")"}], "2"]}]]], "+", 
               FractionBox[
                RowBox[{
                 RowBox[{"-", "hjLastx"}], "+", "hjx"}], 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"hjLastx", "-", "hjx"}], ")"}], "2"], "+", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"hjLasty", "-", "hjy"}], ")"}], "2"]}]]]}], ")"}],
              " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{
                 RowBox[{"-", "hiNexty"}], "+", "hiy"}], 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiNextx"}], "+", "hix"}], ")"}], "2"], "+", 
                  
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiNexty"}], "+", "hiy"}], ")"}], "2"]}]]], 
               "+", 
               FractionBox[
                RowBox[{"hiy", "-", "hjy"}], 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"hix", "-", "hjx"}], ")"}], "2"], "+", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"hiy", "-", "hjy"}], ")"}], "2"]}]]]}], ")"}], 
             " ", "KP"}], "-", 
            RowBox[{"KA", " ", 
             RowBox[{"(", 
              RowBox[{"PA", "-", "a"}], ")"}]}], "+", 
            RowBox[{
             FractionBox["1", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"hix", "-", "hjx"}], ")"}], "2"], "+", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"hiy", "-", "hjy"}], ")"}], "2"]}], ")"}], 
               RowBox[{"3", "/", "2"}]]], "2", " ", 
             RowBox[{"(", 
              RowBox[{"hix", "-", "hjx"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"hiy", "-", "hjy"}], ")"}], " ", "KP", " ", 
             RowBox[{"(", 
              RowBox[{"p", "-", "PP"}], ")"}]}]}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"j", "==", "1"}], "||", 
             RowBox[{"j", "==", "2"}], "||", 
             RowBox[{"j", "==", 
              RowBox[{"Length", "[", "hv", "]"}]}]}], ")"}]}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"de2yx", "=", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"0.5`", " ", "hiLastx"}], "-", 
               RowBox[{"0.5`", " ", "hiNextx"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "0.5`"}], " ", "hjLasty"}], "+", 
               RowBox[{"0.5`", " ", "hjNexty"}]}], ")"}], " ", "KA"}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{
                 RowBox[{"-", "hiLasty"}], "+", "hiy"}], 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiLastx"}], "+", "hix"}], ")"}], "2"], "+", 
                  
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiLasty"}], "+", "hiy"}], ")"}], "2"]}]]], 
               "+", 
               FractionBox[
                RowBox[{
                 RowBox[{"-", "hiNexty"}], "+", "hiy"}], 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiNextx"}], "+", "hix"}], ")"}], "2"], "+", 
                  
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiNexty"}], "+", "hiy"}], ")"}], "2"]}]]]}],
               ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{
                 RowBox[{"-", "hjLastx"}], "+", "hjx"}], 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"hjLastx", "-", "hjx"}], ")"}], "2"], "+", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"hjLasty", "-", "hjy"}], ")"}], "2"]}]]], "+", 
               FractionBox[
                RowBox[{
                 RowBox[{"-", "hjNextx"}], "+", "hjx"}], 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hjNextx"}], "+", "hjx"}], ")"}], "2"], "+", 
                  
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hjNexty"}], "+", "hjy"}], ")"}], "2"]}]]]}],
               ")"}], " ", "KP"}]}]}]}], "]"}], ";", "\[IndentingNewLine]", 
        "de2yx"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"de2dhihjyy", "[", 
      RowBox[{
      "hv_List", ",", "j_", ",", "KA_", ",", "KP_", ",", "PA_", ",", "PP_"}], 
      "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "de2yy", ",", "hix", ",", "hiy", ",", "hiLastx", ",", "hiLasty", ",", 
         "hiNextx", ",", "hiNexty", ",", "hjx", ",", "hjy", ",", "hjLastx", 
         ",", "hjLasty", ",", "hjNextx", ",", "hjNexty", ",", "p", ",", "a"}],
         "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"p", "=", 
         RowBox[{"peri", "[", "hv", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"a", "=", 
         RowBox[{"area", "[", "hv", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"hix", "=", 
         RowBox[{
          RowBox[{"hv", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", 
        RowBox[{"hiy", "=", 
         RowBox[{
          RowBox[{"hv", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", 
        RowBox[{"hiLastx", "=", 
         RowBox[{
          RowBox[{"hv", "[", 
           RowBox[{"[", 
            RowBox[{"Length", "[", "hv", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", 
        RowBox[{"hiLasty", "=", 
         RowBox[{
          RowBox[{"hv", "[", 
           RowBox[{"[", 
            RowBox[{"Length", "[", "hv", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", 
        RowBox[{"hiNextx", "=", 
         RowBox[{
          RowBox[{"hv", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", 
        RowBox[{"hiNexty", "=", 
         RowBox[{
          RowBox[{"hv", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"hjx", "=", 
         RowBox[{
          RowBox[{"hv", "[", 
           RowBox[{"[", "j", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", 
        RowBox[{"hjy", "=", 
         RowBox[{
          RowBox[{"hv", "[", 
           RowBox[{"[", "j", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", 
        RowBox[{"hjLastx", "=", 
         RowBox[{
          RowBox[{"hv", "[", 
           RowBox[{"[", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"j", "-", "1"}], "==", "0"}], ",", 
              RowBox[{"Length", "[", "hv", "]"}], ",", 
              RowBox[{"j", "-", "1"}]}], "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", 
        RowBox[{"hjLasty", "=", 
         RowBox[{
          RowBox[{"hv", "[", 
           RowBox[{"[", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"j", "-", "1"}], "==", "0"}], ",", 
              RowBox[{"Length", "[", "hv", "]"}], ",", 
              RowBox[{"j", "-", "1"}]}], "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", 
        RowBox[{"hjNextx", "=", 
         RowBox[{
          RowBox[{"hv", "[", 
           RowBox[{"[", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"j", "+", "1"}], "==", 
               RowBox[{"Length", "[", "hv", "]"}]}], ",", 
              RowBox[{"Length", "[", "hv", "]"}], ",", 
              RowBox[{"Mod", "[", 
               RowBox[{
                RowBox[{"j", "+", "1"}], ",", 
                RowBox[{"Length", "[", "hv", "]"}]}], "]"}]}], "]"}], "]"}], 
           "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", 
        RowBox[{"hjNexty", "=", 
         RowBox[{
          RowBox[{"hv", "[", 
           RowBox[{"[", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"j", "+", "1"}], "==", 
               RowBox[{"Length", "[", "hv", "]"}]}], ",", 
              RowBox[{"Length", "[", "hv", "]"}], ",", 
              RowBox[{"Mod", "[", 
               RowBox[{
                RowBox[{"j", "+", "1"}], ",", 
                RowBox[{"Length", "[", "hv", "]"}]}], "]"}]}], "]"}], "]"}], 
           "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "if", " ", "we", " ", "are", " ", "doing", " ", "de2dhidhi"}], 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"j", "==", "1"}], ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"de2yy", "=", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "0.5`"}], " ", "hiLastx"}], "+", 
                  RowBox[{"0.5`", " ", "hiNextx"}]}], ")"}], "2"], " ", 
               "KA"}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{
                    RowBox[{"-", "hiLasty"}], "+", "hiy"}], 
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiLastx"}], "+", "hix"}], ")"}], "2"], "+", 
                    
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiLasty"}], "+", "hiy"}], ")"}], "2"]}]]], 
                  "+", 
                  FractionBox[
                   RowBox[{
                    RowBox[{"-", "hiNexty"}], "+", "hiy"}], 
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiNextx"}], "+", "hix"}], ")"}], "2"], "+", 
                    
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiNexty"}], "+", "hiy"}], ")"}], "2"]}]]]}],
                  ")"}], "2"], " ", "KP"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  FractionBox[
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiLasty"}], "+", "hiy"}], ")"}], "2"], 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiLastx"}], "+", "hix"}], ")"}], "2"], "+", 
                    
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiLasty"}], "+", "hiy"}], ")"}], "2"]}], 
                    ")"}], 
                    RowBox[{"3", "/", "2"}]]]}], "+", 
                 FractionBox["1", 
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiLastx"}], "+", "hix"}], ")"}], "2"], "+", 
                    
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiLasty"}], "+", "hiy"}], ")"}], "2"]}]]], 
                 "-", 
                 FractionBox[
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiNexty"}], "+", "hiy"}], ")"}], "2"], 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiNextx"}], "+", "hix"}], ")"}], "2"], "+", 
                    
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiNexty"}], "+", "hiy"}], ")"}], "2"]}], 
                    ")"}], 
                   RowBox[{"3", "/", "2"}]]], "+", 
                 FractionBox["1", 
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiNextx"}], "+", "hix"}], ")"}], "2"], "+", 
                    
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiNexty"}], "+", "hiy"}], ")"}], "2"]}]]]}],
                 ")"}], " ", "KP", " ", 
               RowBox[{"(", 
                RowBox[{"p", "-", "PP"}], ")"}]}]}], ")"}]}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"j", "==", "2"}], ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"de2yy", "=", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"0.5`", " ", "hix"}], "-", 
                 RowBox[{"0.5`", " ", "hjNextx"}]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"0.5`", " ", "hiLastx"}], "-", 
                 RowBox[{"0.5`", " ", "hjx"}]}], ")"}], " ", "KA"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{
                   RowBox[{"-", "hiLasty"}], "+", "hiy"}], 
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiLastx"}], "+", "hix"}], ")"}], "2"], "+", 
                    
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiLasty"}], "+", "hiy"}], ")"}], "2"]}]]], 
                 "+", 
                 FractionBox[
                  RowBox[{"hiy", "-", "hjy"}], 
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"hix", "-", "hjx"}], ")"}], "2"], "+", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"hiy", "-", "hjy"}], ")"}], "2"]}]]]}], ")"}], 
               " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{
                   RowBox[{"-", "hiy"}], "+", "hjy"}], 
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"hix", "-", "hjx"}], ")"}], "2"], "+", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"hiy", "-", "hjy"}], ")"}], "2"]}]]], "+", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"-", "hjNexty"}], "+", "hjy"}], 
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hjNextx"}], "+", "hjx"}], ")"}], "2"], "+", 
                    
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hjNexty"}], "+", "hjy"}], ")"}], "2"]}]]]}],
                 ")"}], " ", "KP"}], "-", 
              RowBox[{
               FractionBox["1", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"hix", "-", "hjx"}], ")"}], "2"], "+", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"hiy", "-", "hjy"}], ")"}], "2"]}], ")"}], 
                 RowBox[{"3", "/", "2"}]]], 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"hix", "-", "hjx"}], ")"}], "2"], " ", "KP", " ", 
               RowBox[{"(", 
                RowBox[{"p", "-", "PP"}], ")"}]}]}], ")"}]}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"j", "==", 
           RowBox[{"Length", "[", "hv", "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"de2yy", "=", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "0.5`"}], " ", "hix"}], "+", 
                 RowBox[{"0.5`", " ", "hjLastx"}]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "0.5`"}], " ", "hiNextx"}], "+", 
                 RowBox[{"0.5`", " ", "hjx"}]}], ")"}], " ", "KA"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{
                   RowBox[{"-", "hiNexty"}], "+", "hiy"}], 
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiNextx"}], "+", "hix"}], ")"}], "2"], "+", 
                    
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiNexty"}], "+", "hiy"}], ")"}], "2"]}]]], 
                 "+", 
                 FractionBox[
                  RowBox[{"hiy", "-", "hjy"}], 
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"hix", "-", "hjx"}], ")"}], "2"], "+", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"hiy", "-", "hjy"}], ")"}], "2"]}]]]}], ")"}], 
               " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{
                   RowBox[{"-", "hiy"}], "+", "hjy"}], 
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"hix", "-", "hjx"}], ")"}], "2"], "+", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"hiy", "-", "hjy"}], ")"}], "2"]}]]], "+", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"-", "hjLasty"}], "+", "hjy"}], 
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"hjLastx", "-", "hjx"}], ")"}], "2"], "+", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"hjLasty", "-", "hjy"}], ")"}], "2"]}]]]}], ")"}],
                " ", "KP"}], "-", 
              RowBox[{
               FractionBox["1", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"hix", "-", "hjx"}], ")"}], "2"], "+", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"hiy", "-", "hjy"}], ")"}], "2"]}], ")"}], 
                 RowBox[{"3", "/", "2"}]]], 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"hix", "-", "hjx"}], ")"}], "2"], " ", "KP", " ", 
               RowBox[{"(", 
                RowBox[{"p", "-", "PP"}], ")"}]}]}], ")"}]}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"j", "==", "1"}], "||", 
             RowBox[{"j", "==", "2"}], "||", 
             RowBox[{"j", "==", 
              RowBox[{"Length", "[", "hv", "]"}]}]}], ")"}]}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"de2yy", "=", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"0.5`", " ", "hiLastx"}], "-", 
               RowBox[{"0.5`", " ", "hiNextx"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"0.5`", " ", "hjLastx"}], "-", 
               RowBox[{"0.5`", " ", "hjNextx"}]}], ")"}], " ", "KA"}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{
                 RowBox[{"-", "hiLasty"}], "+", "hiy"}], 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiLastx"}], "+", "hix"}], ")"}], "2"], "+", 
                  
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiLasty"}], "+", "hiy"}], ")"}], "2"]}]]], 
               "+", 
               FractionBox[
                RowBox[{
                 RowBox[{"-", "hiNexty"}], "+", "hiy"}], 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiNextx"}], "+", "hix"}], ")"}], "2"], "+", 
                  
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hiNexty"}], "+", "hiy"}], ")"}], "2"]}]]]}],
               ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{
                 RowBox[{"-", "hjLasty"}], "+", "hjy"}], 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"hjLastx", "-", "hjx"}], ")"}], "2"], "+", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"hjLasty", "-", "hjy"}], ")"}], "2"]}]]], "+", 
               FractionBox[
                RowBox[{
                 RowBox[{"-", "hjNexty"}], "+", "hjy"}], 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hjNextx"}], "+", "hjx"}], ")"}], "2"], "+", 
                  
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "hjNexty"}], "+", "hjy"}], ")"}], "2"]}]]]}],
               ")"}], " ", "KP"}]}]}]}], "]"}], ";", "\[IndentingNewLine]", 
        "de2yy"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"de2dhdhGeneral", "[", 
     RowBox[{
     "hv_List", ",", "j_", ",", "KA_", ",", "KP_", ",", "PA_", ",", "PP_"}], 
     "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"de2dhihjxx", "[", 
           RowBox[{
           "hv", ",", "j", ",", "KA", ",", "KP", ",", "PA", ",", "PP"}], 
           "]"}], ",", 
          RowBox[{"de2dhihjxy", "[", 
           RowBox[{
           "hv", ",", "j", ",", "KA", ",", "KP", ",", "PA", ",", "PP"}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"de2dhihjyx", "[", 
           RowBox[{
           "hv", ",", "j", ",", "KA", ",", "KP", ",", "PA", ",", "PP"}], 
           "]"}], ",", 
          RowBox[{"de2dhihjyy", "[", 
           RowBox[{
           "hv", ",", "j", ",", "KA", ",", "KP", ",", "PA", ",", "PP"}], 
           "]"}]}], "}"}]}], "}"}]}], "\[IndentingNewLine]", 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.904314259355904*^9, 3.9043143013526907`*^9}, {
   3.9043143488790083`*^9, 3.904314354014255*^9}, {3.904314415027624*^9, 
   3.904314423363253*^9}, {3.904314555148417*^9, 3.9043145991016417`*^9}, {
   3.904318762868161*^9, 3.9043188176425133`*^9}, {3.90431885241038*^9, 
   3.904318873326839*^9}, 3.904319021039928*^9, {3.904392556249627*^9, 
   3.904392556401775*^9}, {3.904392810921649*^9, 3.9043929592934637`*^9}, {
   3.904394000984392*^9, 3.904394001412709*^9}, {3.9043940324469557`*^9, 
   3.904394048533761*^9}, {3.904394098399927*^9, 3.904394174732284*^9}, {
   3.9043942389510593`*^9, 3.904394320233054*^9}, {3.904394353552403*^9, 
   3.904394461711257*^9}, {3.904394493168469*^9, 3.904394583446862*^9}, {
   3.90439462560255*^9, 3.904394702784791*^9}, {3.904394771091137*^9, 
   3.904394790284346*^9}, {3.9043948518335752`*^9, 3.9043948724480667`*^9}, {
   3.904394910666058*^9, 3.904394959684085*^9}, 3.9043950345912848`*^9, {
   3.904395570557641*^9, 3.904395606225356*^9}, {3.904395759800148*^9, 
   3.904395828380295*^9}, {3.904396020172752*^9, 3.90439605649513*^9}, {
   3.904396092602581*^9, 3.904396095458459*^9}, 3.9044012109332657`*^9, {
   3.904401864022257*^9, 3.904401889614188*^9}, {3.904402268602522*^9, 
   3.904402273229042*^9}, {3.904403439743452*^9, 3.904403444015863*^9}, {
   3.9044034866216917`*^9, 3.904403614145093*^9}, 3.904404080036344*^9, {
   3.9044748992823067`*^9, 3.904474940737397*^9}, {3.904474997295217*^9, 
   3.9044750614039793`*^9}, {3.9044756769934483`*^9, 
   3.9044757109442053`*^9}, {3.906130378818466*^9, 3.9061304112686157`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"b317a457-21a4-44d5-b47a-f4da402f9fd1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "These", " ", "are", " ", "the", " ", "analytical", " ", "forms", " ", 
    "for", " ", "dhdgamma", " ", "and", " ", "d2hdgamma2"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"dhdgGeneral", "[", 
      RowBox[{"r1_List", ",", "r2_List", ",", "r3_List"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "r1x", ",", "r1y", ",", "r2x", ",", "r2y", ",", "r3x", ",", "r3y"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"r1x", "=", 
         RowBox[{"r1", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", 
        RowBox[{"r1y", "=", 
         RowBox[{"r1", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", 
        RowBox[{"r2x", "=", 
         RowBox[{"r2", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", 
        RowBox[{"r2y", "=", 
         RowBox[{"r2", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", 
        RowBox[{"r3x", "=", 
         RowBox[{"r3", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", 
        RowBox[{"r3y", "=", 
         RowBox[{"r3", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{"r1x", " ", "r1y", " ", 
             RowBox[{"(", 
              RowBox[{"r2y", "-", "r3y"}], ")"}]}], "+", 
            RowBox[{"r2y", " ", 
             RowBox[{"(", 
              RowBox[{"r2x", "-", "r3x"}], ")"}], " ", "r3y"}], "+", 
            RowBox[{"r1y", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "r2x"}], " ", "r2y"}], "+", 
               RowBox[{"r3x", " ", "r3y"}]}], ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"-", "r2y"}], " ", "r3x"}], "+", 
            RowBox[{"r1y", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "r2x"}], "+", "r3x"}], ")"}]}], "+", 
            RowBox[{"r1x", " ", 
             RowBox[{"(", 
              RowBox[{"r2y", "-", "r3y"}], ")"}]}], "+", 
            RowBox[{"r2x", " ", "r3y"}]}]], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "r2x", " ", "r2y", " ", "r3x"}], "+", 
             RowBox[{"r2y", " ", 
              SuperscriptBox["r3x", "2"]}], "-", 
             RowBox[{
              SuperscriptBox["r2x", "2"], " ", "r3y"}], "-", 
             RowBox[{
              SuperscriptBox["r2y", "2"], " ", "r3y"}], "+", 
             RowBox[{"2", " ", "r2x", " ", "r3x", " ", "r3y"}], "+", 
             RowBox[{"r2y", " ", 
              SuperscriptBox["r3y", "2"]}], "+", 
             RowBox[{
              SuperscriptBox["r1x", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "r2y"}], "+", "r3y"}], ")"}]}], "+", 
             RowBox[{
              SuperscriptBox["r1y", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "r2y"}], "+", "r3y"}], ")"}]}], "+", 
             RowBox[{"2", " ", "r1x", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"r2x", " ", "r2y"}], "+", 
                RowBox[{"r1y", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "r2x"}], "+", "r3x"}], ")"}]}], "-", 
                RowBox[{"r3x", " ", "r3y"}]}], ")"}]}], "+", 
             RowBox[{"r1y", " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["r2x", "2"], "+", 
                SuperscriptBox["r2y", "2"], "-", 
                SuperscriptBox["r3x", "2"], "-", 
                SuperscriptBox["r3y", "2"]}], ")"}]}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "r2y"}], " ", "r3x"}], "+", 
               RowBox[{"r1y", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "r2x"}], "+", "r3x"}], ")"}]}], "+", 
               RowBox[{"r1x", " ", 
                RowBox[{"(", 
                 RowBox[{"r2y", "-", "r3y"}], ")"}]}], "+", 
               RowBox[{"r2x", " ", "r3y"}]}], ")"}]}], ")"}]}]}], "}"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"d2hdgdgGeneral", "[", 
      RowBox[{"r1_List", ",", "r2_List", ",", "r3_List"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "r1x", ",", "r1y", ",", "r2x", ",", "r2y", ",", "r3x", ",", "r3y"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"r1x", "=", 
         RowBox[{"r1", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", 
        RowBox[{"r1y", "=", 
         RowBox[{"r1", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", 
        RowBox[{"r2x", "=", 
         RowBox[{"r2", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", 
        RowBox[{"r2y", "=", 
         RowBox[{"r2", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", 
        RowBox[{"r3x", "=", 
         RowBox[{"r3", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", 
        RowBox[{"r3y", "=", 
         RowBox[{"r3", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"r1y", "-", "r2y"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"r1y", "-", "r3y"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"r2y", "-", "r3y"}], ")"}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"-", "r2y"}], " ", "r3x"}], "+", 
            RowBox[{"r1y", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "r2x"}], "+", "r3x"}], ")"}]}], "+", 
            RowBox[{"r1x", " ", 
             RowBox[{"(", 
              RowBox[{"r2y", "-", "r3y"}], ")"}]}], "+", 
            RowBox[{"r2x", " ", "r3y"}]}]], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["r2y", "2"]}], " ", "r3x"}], "+", 
             RowBox[{
              SuperscriptBox["r1y", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "r2x"}], "+", "r3x"}], ")"}]}], "-", 
             RowBox[{"2", " ", "r2x", " ", "r2y", " ", "r3y"}], "+", 
             RowBox[{"2", " ", "r2y", " ", "r3x", " ", "r3y"}], "+", 
             RowBox[{"r2x", " ", 
              SuperscriptBox["r3y", "2"]}], "+", 
             RowBox[{"r1x", " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["r2y", "2"], "-", 
                SuperscriptBox["r3y", "2"]}], ")"}]}], "+", 
             RowBox[{"2", " ", "r1y", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"r2x", " ", "r2y"}], "-", 
                RowBox[{"r3x", " ", "r3y"}], "+", 
                RowBox[{"r1x", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "r2y"}], "+", "r3y"}], ")"}]}]}], ")"}]}]}], 
            ")"}], "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "r2y"}], " ", "r3x"}], "+", 
             RowBox[{"r1y", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "r2x"}], "+", "r3x"}], ")"}]}], "+", 
             RowBox[{"r1x", " ", 
              RowBox[{"(", 
               RowBox[{"r2y", "-", "r3y"}], ")"}]}], "+", 
             RowBox[{"r2x", " ", "r3y"}]}], ")"}]}]}], "}"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.9045841279265203`*^9, 3.904584142283367*^9}, {
  3.904584625055174*^9, 3.904584639323862*^9}, {3.906130438548835*^9, 
  3.906130451769902*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"8fb65a32-ade6-47fc-90e0-ec83862c1d3d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Now", " ", "this", " ", "is", " ", "to", " ", "calculate", " ", 
    "de2dgammadgamma", " ", "for", " ", "cell", " ", "i"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"d2eidgdgGeneral", "[", 
    RowBox[{
    "allPoints_List", ",", "vList_List", ",", "ri_", ",", "neilist_List", ",",
      "KA_", ",", "KP_", ",", "PA_", ",", "PP_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"de2dhdhGeneral", "[", 
            RowBox[{
             RowBox[{"RotateLeft", "[", 
              RowBox[{"vList", ",", "i"}], "]"}], ",", "j", ",", "KA", ",", 
             "KP", ",", "PA", ",", "PP"}], "]"}], ".", 
           RowBox[{"dhdgGeneral", "[", 
            RowBox[{"ri", ",", 
             RowBox[{"allPoints", "[", 
              RowBox[{"[", 
               RowBox[{"neilist", "[", 
                RowBox[{"[", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"j", "+", "i"}], "==", 
                    RowBox[{"Length", "[", "vList", "]"}]}], ",", 
                   RowBox[{"Length", "[", "vList", "]"}], ",", 
                   RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{"j", "+", "i"}], ",", 
                    RowBox[{"Length", "[", "vList", "]"}]}], "]"}]}], "]"}], 
                 "]"}], "]"}], "]"}], "]"}], ",", 
             RowBox[{"allPoints", "[", 
              RowBox[{"[", 
               RowBox[{"neilist", "[", 
                RowBox[{"[", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"j", "+", "1", "+", "i"}], "==", 
                    RowBox[{"Length", "[", "vList", "]"}]}], "||", 
                    RowBox[{
                    RowBox[{"j", "+", "1", "+", "i"}], "==", 
                    RowBox[{"2", "*", 
                    RowBox[{"Length", "[", "vList", "]"}]}]}]}], ",", 
                   RowBox[{"Length", "[", "vList", "]"}], ",", 
                   RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{"j", "+", "1", "+", "i"}], ",", 
                    RowBox[{"Length", "[", "vList", "]"}]}], "]"}]}], "]"}], 
                 "]"}], "]"}], "]"}], "]"}]}], "]"}], ".", 
           RowBox[{"dhdgGeneral", "[", 
            RowBox[{"ri", ",", 
             RowBox[{"allPoints", "[", 
              RowBox[{"[", 
               RowBox[{"neilist", "[", 
                RowBox[{"[", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"1", "+", "i"}], "==", 
                    RowBox[{"Length", "[", "vList", "]"}]}], ",", 
                   RowBox[{"Length", "[", "vList", "]"}], ",", 
                   RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{"1", "+", "i"}], ",", 
                    RowBox[{"Length", "[", "vList", "]"}]}], "]"}]}], "]"}], 
                 "]"}], "]"}], "]"}], "]"}], ",", 
             RowBox[{"allPoints", "[", 
              RowBox[{"[", 
               RowBox[{"neilist", "[", 
                RowBox[{"[", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"2", "+", "i"}], "==", 
                    RowBox[{"Length", "[", "vList", "]"}]}], ",", 
                   RowBox[{"Length", "[", "vList", "]"}], ",", 
                   RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{"2", "+", "i"}], ",", 
                    RowBox[{"Length", "[", "vList", "]"}]}], "]"}]}], "]"}], 
                 "]"}], "]"}], "]"}], "]"}]}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", 
            RowBox[{"Length", "[", "vList", "]"}]}], "}"}]}], "]"}], "+", 
        RowBox[{
         RowBox[{"dedhGeneral", "[", 
          RowBox[{
           RowBox[{"RotateLeft", "[", 
            RowBox[{"vList", ",", "i"}], "]"}], ",", "KA", ",", "KP", ",", 
           "PA", ",", "PP"}], "]"}], ".", 
         RowBox[{"d2hdgdgGeneral", "[", 
          RowBox[{"ri", ",", 
           RowBox[{"allPoints", "[", 
            RowBox[{"[", 
             RowBox[{"neilist", "[", 
              RowBox[{"[", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"1", "+", "i"}], "==", 
                  RowBox[{"Length", "[", "vList", "]"}]}], ",", 
                 RowBox[{"Length", "[", "vList", "]"}], ",", 
                 RowBox[{"Mod", "[", 
                  RowBox[{
                   RowBox[{"1", "+", "i"}], ",", 
                   RowBox[{"Length", "[", "vList", "]"}]}], "]"}]}], "]"}], 
               "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"allPoints", "[", 
            RowBox[{"[", 
             RowBox[{"neilist", "[", 
              RowBox[{"[", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"2", "+", "i"}], "==", 
                  RowBox[{"Length", "[", "vList", "]"}]}], ",", 
                 RowBox[{"Length", "[", "vList", "]"}], ",", 
                 RowBox[{"Mod", "[", 
                  RowBox[{
                   RowBox[{"2", "+", "i"}], ",", 
                   RowBox[{"Length", "[", "vList", "]"}]}], "]"}]}], "]"}], 
               "]"}], "]"}], "]"}], "]"}]}], "]"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", 
         RowBox[{
          RowBox[{"Length", "[", "vList", "]"}], "-", "1"}]}], "}"}]}], 
      "]"}]}], "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.904588774883918*^9, 3.904588884153892*^9}, {
  3.904588916453887*^9, 3.90458896383661*^9}, {3.904589002328372*^9, 
  3.904589083617495*^9}, {3.904589212787785*^9, 3.904589218872802*^9}, {
  3.904589279843504*^9, 3.904589283398299*^9}, {3.904589394633286*^9, 
  3.904589429824355*^9}, {3.90458948833243*^9, 3.904589507708624*^9}, {
  3.904589579432266*^9, 3.904589605469116*^9}, {3.904589662919032*^9, 
  3.90458970306603*^9}, {3.904589924188938*^9, 3.904589924310618*^9}, {
  3.9045900036701*^9, 3.904590007945014*^9}, {3.904590687997143*^9, 
  3.9045907041614733`*^9}, {3.904591200828555*^9, 3.904591253354176*^9}, {
  3.904591591505011*^9, 3.9045916028670387`*^9}, {3.904605382965023*^9, 
  3.904605515344393*^9}, {3.906130493495236*^9, 3.906130552771426*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"084a8052-a8ea-415c-ba1f-e49291980e5e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Now", " ", "this", " ", "is", " ", "to", " ", "calculate", " ", 
    "dedgamma", " ", "for", " ", "cell", " ", "i"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"deidgGeneral", "[", 
    RowBox[{
    "allPoints_List", ",", "vList_List", ",", "ri_", ",", "neilist_List", ",",
      "KA_", ",", "KP_", ",", "PA_", ",", "PP_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"dedhGeneral", "[", 
         RowBox[{
          RowBox[{"RotateLeft", "[", 
           RowBox[{"vList", ",", "i"}], "]"}], ",", "KA", ",", "KP", ",", 
          "PA", ",", "PP"}], "]"}], ".", 
        RowBox[{"dhdgGeneral", "[", 
         RowBox[{"ri", ",", 
          RowBox[{"allPoints", "[", 
           RowBox[{"[", 
            RowBox[{"neilist", "[", 
             RowBox[{"[", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"i", "+", "1"}], "==", 
                 RowBox[{"Length", "[", "vList", "]"}]}], ",", 
                RowBox[{"Length", "[", "vList", "]"}], ",", 
                RowBox[{"Mod", "[", 
                 RowBox[{
                  RowBox[{"i", "+", "1"}], ",", 
                  RowBox[{"Length", "[", "vList", "]"}]}], "]"}]}], "]"}], 
              "]"}], "]"}], "]"}], "]"}], ",", 
          RowBox[{"allPoints", "[", 
           RowBox[{"[", 
            RowBox[{"neilist", "[", 
             RowBox[{"[", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"2", "+", "i"}], "==", 
                  RowBox[{"Length", "[", "vList", "]"}]}], "||", 
                 RowBox[{
                  RowBox[{"2", "+", "i"}], "==", 
                  RowBox[{"2", "*", 
                   RowBox[{"Length", "[", "vList", "]"}]}]}]}], ",", 
                RowBox[{"Length", "[", "vList", "]"}], ",", 
                RowBox[{"Mod", "[", 
                 RowBox[{
                  RowBox[{"2", "+", "i"}], ",", 
                  RowBox[{"Length", "[", "vList", "]"}]}], "]"}]}], "]"}], 
              "]"}], "]"}], "]"}], "]"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", 
         RowBox[{
          RowBox[{"Length", "[", "vList", "]"}], "-", "1"}]}], "}"}]}], 
      "]"}]}], "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.906132827205215*^9, 3.9061328533171377`*^9}, 
   3.906132884082106*^9, {3.906132923021924*^9, 3.906132956481184*^9}, {
   3.906133662693007*^9, 3.906133662922853*^9}, {3.906133712658743*^9, 
   3.906133715944762*^9}, {3.906218817065702*^9, 3.906218818843371*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"1075be55-173e-4441-a5ff-043fd0bf882f"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "This", " ", "gives", " ", "the", " ", "neighbor", " ", "list", " ", "of", 
    " ", "cell", " ", "i", " ", "in", " ", "a", " ", "counterclock"}], "-", 
   RowBox[{
   "wise", " ", "order", " ", "and", " ", "this", " ", "neighbor", " ", 
    "list", " ", "aligns", " ", "with", " ", "the", " ", "vertex", " ", "id", 
    " ", "list"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.906130586835259*^9, 3.906130590643478*^9}, {
  3.906130701731743*^9, 3.9061307771468363`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"f198c114-d3d9-456f-92dd-4f1160169939"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"reorderCCWIndices", "[", 
    RowBox[{"centerIndex_", ",", "neighborIndices_List", ",", "allPoints_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "center", ",", "neighbors", ",", "angles", ",", "sortedIndices"}], 
      "}"}], ",", 
     RowBox[{
      RowBox[{"center", "=", 
       RowBox[{"allPoints", "[", 
        RowBox[{"[", "centerIndex", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"neighbors", "=", 
       RowBox[{"allPoints", "[", 
        RowBox[{"[", "neighborIndices", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"angles", "=", 
       RowBox[{"ArcTan", "@@@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "-", "center"}], "&"}], "/@", "neighbors"}], 
         ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sortedIndices", "=", 
       RowBox[{"Ordering", "[", "angles", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"neighborIndices", "[", 
       RowBox[{"[", "sortedIndices", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
    
    RowBox[{"(*", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"neighborIndices", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"FirstPosition", "[", 
           RowBox[{"sortedIndices", ",", "i"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "neighborIndices", "]"}]}], "}"}]}], "]"}], 
     "*)"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"neighborListRightOrder", "[", 
    RowBox[{
    "i_", ",", "voronoiPolygons_List", ",", "cellIndex_", ",", "allPoints_"}],
     "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "trianglesWithCenteri", ",", "neighborListRandomOrder", ",", 
       "neighborListCCWOrder", ",", "delaunay", ",", "vetices", ",", 
       "firstVerticeID"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"delaunay", "=", 
       RowBox[{"DelaunayMesh", "[", "allPoints", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"trianglesWithCenteri", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"First", "/@", 
          RowBox[{"MeshCells", "[", 
           RowBox[{"delaunay", ",", "2"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{"#", ",", "i"}], "]"}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"neighborListRandomOrder", "=", 
       RowBox[{"DeleteCases", "[", 
        RowBox[{
         RowBox[{"Union", "[", 
          RowBox[{"Flatten", "[", "trianglesWithCenteri", "]"}], "]"}], ",", 
         "i"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"neighborListCCWOrder", "=", 
       RowBox[{"reorderCCWIndices", "[", 
        RowBox[{"i", ",", "neighborListRandomOrder", ",", "allPoints"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"vetices", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"voro", "[", 
          RowBox[{
           RowBox[{"allPoints", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"allPoints", "[", 
            RowBox[{"[", 
             RowBox[{"neighborListCCWOrder", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"allPoints", "[", 
            RowBox[{"[", 
             RowBox[{"neighborListCCWOrder", "[", 
              RowBox[{"[", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"j", "+", "1"}], "==", 
                  RowBox[{"Length", "[", "neighborListCCWOrder", "]"}]}], ",", 
                 RowBox[{"Length", "[", "neighborListCCWOrder", "]"}], ",", 
                 RowBox[{"Mod", "[", 
                  RowBox[{
                   RowBox[{"j", "+", "1"}], ",", 
                   RowBox[{"Length", "[", "neighborListCCWOrder", "]"}]}], 
                  "]"}]}], "]"}], "]"}], "]"}], "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           RowBox[{"Length", "[", "neighborListCCWOrder", "]"}]}], "}"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"firstVerticeID", "=", 
       RowBox[{
        RowBox[{"Nearest", "[", 
         RowBox[{
          RowBox[{"vetices", "->", "Automatic"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"voronoiPolygons", "[", 
             RowBox[{"[", 
              RowBox[{"cellIndex", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"RotateLeft", "[", 
       RowBox[{"neighborListCCWOrder", ",", 
        RowBox[{"firstVerticeID", "-", "1"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.90468534869175*^9, 3.904685348696452*^9}, {
   3.90468560748496*^9, 3.904685619254031*^9}, {3.904687047825791*^9, 
   3.90468714544456*^9}, {3.90468790441046*^9, 3.90468794568607*^9}, 
   3.904688618553898*^9, {3.904690094631613*^9, 3.904690095727626*^9}, {
   3.906130806424521*^9, 3.9061308069205217`*^9}, 3.906130877827166*^9, 
   3.906219735103504*^9},
 CellLabel->"In[17]:=",ExpressionUUID->"7a8148f7-b39b-403d-a384-94edf263cde6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "is", " ", "the", " ", "function", " ", "that", " ", 
    "returns", " ", "a", " ", "list", " ", "of", " ", 
    FractionBox["dei", "dg"], " ", "and", " ", 
    FractionBox["d2ei", "dg2"], " ", "for", " ", "each", " ", "cell"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"AnalyticalCell", "[", 
     RowBox[{
     "allPoints_", ",", "box_List", ",", "pointID_List", ",", "KA_", ",", 
      "KP_", ",", "PA_", ",", "PP_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "vm", ",", "voronoiPolygons", ",", "min", ",", "max", ",", "cellIndex",
         ",", "copies", ",", "translatedCopies", ",", "translations", ",", 
        "allPointsPBD"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"copies", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"allPoints", ",", "9"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"translations", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"box", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"box", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"box", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"box", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"box", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", 
             RowBox[{"box", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"box", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", 
            RowBox[{"-", 
             RowBox[{"box", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"box", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", 
            RowBox[{"box", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"box", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"-", 
             RowBox[{"box", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], "}"}]}], ";", 
       RowBox[{"translatedCopies", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "+", "translation"}], "&"}], ",", 
            RowBox[{"copies", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "9"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"translation", ",", "translations"}], "}"}]}], "]"}]}], 
       ";", 
       RowBox[{"allPointsPBD", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"translatedCopies", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"min", "=", 
        RowBox[{
         RowBox[{"Min", "[", "allPointsPBD", "]"}], "-", ".1"}]}], ";", 
       RowBox[{"max", "=", 
        RowBox[{
         RowBox[{"Max", "[", "allPointsPBD", "]"}], "+", ".1"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"vm", "=", 
        RowBox[{"VoronoiMesh", "[", 
         RowBox[{"allPointsPBD", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"min", ",", "max"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"min", ",", "max"}], "}"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"voronoiPolygons", "=", 
        RowBox[{"MeshPrimitives", "[", 
         RowBox[{"vm", ",", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"cellIndex", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"RegionMember", "[", 
                RowBox[{
                 RowBox[{"voronoiPolygons", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], ",", 
                 RowBox[{"allPointsPBD", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"j", ",", 
                 RowBox[{"Length", "[", "allPointsPBD", "]"}]}], "}"}]}], 
              "]"}], ",", "True"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "allPoints", "]"}]}], "}"}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"deidgGeneral", "[", 
            RowBox[{"allPointsPBD", ",", 
             RowBox[{
              RowBox[{"voronoiPolygons", "[", 
               RowBox[{"[", 
                RowBox[{"cellIndex", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"allPointsPBD", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"neighborListRightOrder", "[", 
              RowBox[{
              "i", ",", "voronoiPolygons", ",", "cellIndex", ",", 
               "allPointsPBD"}], "]"}], ",", "KA", ",", "KP", ",", "PA", ",", 
             "PP"}], "]"}], ",", 
           RowBox[{"d2eidgdgGeneral", "[", 
            RowBox[{"allPointsPBD", ",", 
             RowBox[{
              RowBox[{"voronoiPolygons", "[", 
               RowBox[{"[", 
                RowBox[{"cellIndex", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"allPointsPBD", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"neighborListRightOrder", "[", 
              RowBox[{
              "i", ",", "voronoiPolygons", ",", "cellIndex", ",", 
               "allPointsPBD"}], "]"}], ",", "KA", ",", "KP", ",", "PA", ",", 
             "PP"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "pointID"}], "}"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.9061309008804817`*^9, 3.906130902084465*^9}, {
   3.906130944911058*^9, 3.906131000856138*^9}, 3.9061310366252117`*^9, {
   3.9061311006207237`*^9, 3.906131101861796*^9}, {3.906133757928031*^9, 
   3.906133781273082*^9}, {3.9061338404375687`*^9, 3.9061338924887133`*^9}, {
   3.9062171089465723`*^9, 3.906217320241297*^9}, {3.906217354916769*^9, 
   3.906217380642602*^9}, 3.9062197625754967`*^9, 3.9062204061114902`*^9, {
   3.906220492405673*^9, 3.906220507516293*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"b8302214-8022-48c4-9cbc-ff24758ebba7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"AnalyticalCellTest", "[", 
    RowBox[{
    "allPoints_", ",", "box_List", ",", "pointID_List", ",", "KA_", ",", 
     "KP_", ",", "PA_", ",", "PP_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "vm", ",", "voronoiPolygons", ",", "min", ",", "max", ",", "cellIndex", 
       ",", "copies", ",", "translatedCopies", ",", "translations", ",", 
       "allPointsPBD"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"copies", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"allPoints", ",", "9"}], "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"translations", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"box", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"box", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"box", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"box", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"box", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"-", 
            RowBox[{"box", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"box", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", 
           RowBox[{"-", 
            RowBox[{"box", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"box", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", 
           RowBox[{"box", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"box", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"-", 
            RowBox[{"box", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], "}"}]}], ";", 
      RowBox[{"translatedCopies", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "+", "translation"}], "&"}], ",", 
           RowBox[{"copies", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "9"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"translation", ",", "translations"}], "}"}]}], "]"}]}], ";", 
      RowBox[{"allPointsPBD", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"translatedCopies", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"min", "=", 
       RowBox[{
        RowBox[{"Min", "[", "allPointsPBD", "]"}], "-", ".1"}]}], ";", 
      RowBox[{"max", "=", 
       RowBox[{
        RowBox[{"Max", "[", "allPointsPBD", "]"}], "+", ".1"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"vm", "=", 
       RowBox[{"VoronoiMesh", "[", 
        RowBox[{"allPointsPBD", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"min", ",", "max"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"min", ",", "max"}], "}"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"voronoiPolygons", "=", 
       RowBox[{"MeshPrimitives", "[", 
        RowBox[{"vm", ",", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"cellIndex", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Position", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"RegionMember", "[", 
               RowBox[{
                RowBox[{"voronoiPolygons", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], ",", 
                RowBox[{"allPointsPBD", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", 
                RowBox[{"Length", "[", "allPointsPBD", "]"}]}], "}"}]}], 
             "]"}], ",", "True"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "allPoints", "]"}]}], "}"}]}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"deidgGeneral", "[", 
           RowBox[{"allPointsPBD", ",", 
            RowBox[{
             RowBox[{"voronoiPolygons", "[", 
              RowBox[{"[", 
               RowBox[{"cellIndex", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"allPointsPBD", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"neighborListRightOrder", "[", 
             RowBox[{
             "i", ",", "voronoiPolygons", ",", "cellIndex", ",", 
              "allPointsPBD"}], "]"}], ",", "KA", ",", "KP", ",", "PA", ",", 
            "PP"}], "]"}], ",", 
          RowBox[{"d2eidgdgGeneral", "[", 
           RowBox[{"allPointsPBD", ",", 
            RowBox[{
             RowBox[{"voronoiPolygons", "[", 
              RowBox[{"[", 
               RowBox[{"cellIndex", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"allPointsPBD", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"neighborListRightOrder", "[", 
             RowBox[{
             "i", ",", "voronoiPolygons", ",", "cellIndex", ",", 
              "allPointsPBD"}], "]"}], ",", "KA", ",", "KP", ",", "PA", ",", 
            "PP"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "pointID"}], "}"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.906218400714576*^9, 3.9062184085961027`*^9}, {
   3.90621856274302*^9, 3.906218572019668*^9}, {3.906219670250162*^9, 
   3.906219672226655*^9}, 3.906219759154039*^9, {3.9062199548309517`*^9, 
   3.906219955245036*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"e0864ef4-a0c2-4055-9af3-189c094808d0"]
}, Closed]],

Cell[CellGroupData[{

Cell["Numerical function:", "Section",
 CellChangeTimes->{{3.906131141235631*^9, 
  3.906131160496708*^9}},ExpressionUUID->"d94f9a14-62f1-49f6-8b5a-\
e9ec9ecfdf7e"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"This", " ", "function", " ", "returns", " ", 
   FractionBox["dei", "dg"], " ", "and", " ", 
   FractionBox["d2ei", 
    RowBox[{"dg", "^", "2"}]], " ", "for", " ", "each", " ", "cell"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.9061326579081097`*^9, 3.906132664814098*^9}, {
  3.9061327204674053`*^9, 3.906132746401671*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"7eba5210-dcce-495b-bdf7-67c18d8ab094"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"numdericalCell", "[", 
    RowBox[{
    "allPoints_List", ",", "box_List", ",", "ddx_", ",", "ka_", ",", "kp_", 
     ",", "pa_", ",", "pp_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "Vareas0", ",", "Vperis0", ",", "Vareas1", ",", "Vperis1", ",", 
       "VareasI", ",", "VperisI", ",", "copies", ",", "translations", ",", 
       "translatedCopies", ",", "allPointsPBD", ",", "cellIndex", ",", 
       "cellIndex0", ",", "cellIndex1", ",", "strainfor", ",", "strainback", 
       ",", "vm", ",", "vm1", ",", "vm0", ",", "allPointsPBD0", ",", 
       "allPointsPBD1", ",", "min", ",", "max", ",", "voronoiPolygons", ",", 
       "voronoiPolygons1", ",", "voronoiPolygons0"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"copies", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"allPoints", ",", "9"}], "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"translations", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"box", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"box", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"box", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"box", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"box", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"-", 
            RowBox[{"box", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"box", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", 
           RowBox[{"-", 
            RowBox[{"box", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"box", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", 
           RowBox[{"box", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"box", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"-", 
            RowBox[{"box", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], "}"}]}], ";", 
      RowBox[{"translatedCopies", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "+", "translation"}], "&"}], ",", 
           RowBox[{"copies", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "9"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"translation", ",", "translations"}], "}"}]}], "]"}]}], ";", 
      RowBox[{"allPointsPBD", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"translatedCopies", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"strainfor", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "ddx"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"strainback", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "ddx"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"min", "=", 
       RowBox[{
        RowBox[{"Min", "[", "allPointsPBD", "]"}], "-", ".1"}]}], ";", 
      RowBox[{"max", "=", 
       RowBox[{
        RowBox[{"Max", "[", "allPointsPBD", "]"}], "+", ".1"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"vm", "=", 
       RowBox[{"VoronoiMesh", "[", 
        RowBox[{"allPointsPBD", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"min", ",", "max"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"min", ",", "max"}], "}"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"voronoiPolygons", "=", 
       RowBox[{"MeshPrimitives", "[", 
        RowBox[{"vm", ",", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"cellIndex", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Position", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"RegionMember", "[", 
               RowBox[{
                RowBox[{"voronoiPolygons", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], ",", 
                RowBox[{"allPointsPBD", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", 
                RowBox[{"Length", "[", "allPointsPBD", "]"}]}], "}"}]}], 
             "]"}], ",", "True"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "allPoints", "]"}]}], "}"}]}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"VareasI", "=", 
       RowBox[{"PropertyValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"vm", ",", "2"}], "}"}], ",", "MeshCellMeasure"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"VperisI", "=", 
       RowBox[{"RegionMeasure", "/@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"MeshPrimitives", "[", 
           RowBox[{"vm", ",", "2"}], "]"}], "/.", 
          RowBox[{
           RowBox[{"Polygon", "[", 
            RowBox[{"{", 
             RowBox[{"x_", ",", "y__"}], "}"}], "]"}], "\[RuleDelayed]", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y", ",", "x"}], "}"}], "]"}]}]}], ")"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"allPointsPBD0", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"strainfor", ".", "#"}], "&"}], "/@", "allPointsPBD"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"vm0", "=", 
       RowBox[{"VoronoiMesh", "[", 
        RowBox[{"allPointsPBD0", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"min", ",", "max"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"min", ",", "max"}], "}"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"voronoiPolygons0", "=", 
       RowBox[{"MeshPrimitives", "[", 
        RowBox[{"vm0", ",", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"cellIndex0", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Position", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"RegionMember", "[", 
               RowBox[{
                RowBox[{"voronoiPolygons0", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], ",", 
                RowBox[{"allPointsPBD0", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", 
                RowBox[{"Length", "[", "allPointsPBD0", "]"}]}], "}"}]}], 
             "]"}], ",", "True"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "allPoints", "]"}]}], "}"}]}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"Vareas0", "=", 
       RowBox[{"PropertyValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"vm0", ",", "2"}], "}"}], ",", "MeshCellMeasure"}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"Vperis0", "=", 
       RowBox[{"RegionMeasure", "/@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"MeshPrimitives", "[", 
           RowBox[{"vm0", ",", "2"}], "]"}], "/.", 
          RowBox[{
           RowBox[{"Polygon", "[", 
            RowBox[{"{", 
             RowBox[{"x_", ",", "y__"}], "}"}], "]"}], "\[RuleDelayed]", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y", ",", "x"}], "}"}], "]"}]}]}], ")"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"allPointsPBD1", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"strainback", ".", "#"}], "&"}], "/@", "allPointsPBD"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"vm1", "=", 
       RowBox[{"VoronoiMesh", "[", 
        RowBox[{"allPointsPBD1", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"min", "+", 
              RowBox[{"0.001", "*", "min"}]}], ",", 
             RowBox[{"max", "+", 
              RowBox[{"0.001", "*", "max"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"min", ",", "max"}], "}"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Vareas1", "=", 
       RowBox[{"PropertyValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"vm1", ",", "2"}], "}"}], ",", "MeshCellMeasure"}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"Vperis1", "=", 
       RowBox[{"RegionMeasure", "/@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"MeshPrimitives", "[", 
           RowBox[{"vm1", ",", "2"}], "]"}], "/.", 
          RowBox[{
           RowBox[{"Polygon", "[", 
            RowBox[{"{", 
             RowBox[{"x_", ",", "y__"}], "}"}], "]"}], "\[RuleDelayed]", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y", ",", "x"}], "}"}], "]"}]}]}], ")"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"voronoiPolygons1", "=", 
       RowBox[{"MeshPrimitives", "[", 
        RowBox[{"vm1", ",", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"cellIndex1", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Position", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"RegionMember", "[", 
               RowBox[{
                RowBox[{"voronoiPolygons1", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], ",", 
                RowBox[{"allPointsPBD1", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", 
                RowBox[{"Length", "[", "allPointsPBD1", "]"}]}], "}"}]}], 
             "]"}], ",", "True"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "allPoints", "]"}]}], "}"}]}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"ka", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Vareas0", "[", 
                  RowBox[{"[", 
                   RowBox[{"cellIndex0", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "-", "pa"}],
                 ")"}], "^", "2"}]}], "+", 
             RowBox[{"kp", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Vperis0", "[", 
                  RowBox[{"[", 
                   RowBox[{"cellIndex0", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "-", "pp"}],
                 ")"}], "^", "2"}]}], "-", 
             RowBox[{"ka", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Vareas1", "[", 
                  RowBox[{"[", 
                   RowBox[{"cellIndex1", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "-", "pa"}],
                 ")"}], "^", "2"}]}], "-", 
             RowBox[{"kp", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Vperis1", "[", 
                  RowBox[{"[", 
                   RowBox[{"cellIndex1", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "-", "pp"}],
                 ")"}], "^", "2"}]}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"2", "*", "ddx"}], ")"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"ka", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Vareas0", "[", 
                   RowBox[{"[", 
                    RowBox[{"cellIndex0", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "-", "pa"}],
                  ")"}], "^", "2"}]}], "+", 
              RowBox[{"kp", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Vperis0", "[", 
                   RowBox[{"[", 
                    RowBox[{"cellIndex0", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "-", "pp"}],
                  ")"}], "^", "2"}]}], "+", 
              RowBox[{"ka", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Vareas1", "[", 
                   RowBox[{"[", 
                    RowBox[{"cellIndex1", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "-", "pa"}],
                  ")"}], "^", "2"}]}], "+", 
              RowBox[{"kp", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Vperis1", "[", 
                   RowBox[{"[", 
                    RowBox[{"cellIndex1", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "-", "pp"}],
                  ")"}], "^", "2"}]}], "-", 
              RowBox[{"2", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"ka", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"VareasI", "[", 
                    RowBox[{"[", 
                    RowBox[{"cellIndex", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "-", "pa"}],
                     ")"}], "^", "2"}]}], "+", 
                 RowBox[{"kp", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"VperisI", "[", 
                    RowBox[{"[", 
                    RowBox[{"cellIndex", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "-", "pp"}],
                     ")"}], "^", "2"}]}]}], ")"}]}]}], ")"}], "/", "ddx"}], 
           "/", "ddx"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "allPoints", "]"}]}], "}"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9036267151986856`*^9, 3.903626826615308*^9}, {
   3.9036268679519567`*^9, 3.9036268737354107`*^9}, {3.903626942452201*^9, 
   3.903626944611924*^9}, {3.903627039394018*^9, 3.903627044507419*^9}, {
   3.9036314828750963`*^9, 3.903631515196673*^9}, {3.904605602190879*^9, 
   3.904605676747971*^9}, {3.904605919754586*^9, 3.9046059212402067`*^9}, {
   3.904749830201756*^9, 3.90474998966967*^9}, {3.904750061925131*^9, 
   3.904750065768656*^9}, {3.904750132076775*^9, 3.904750139359756*^9}, {
   3.906131477293146*^9, 3.906131742280287*^9}, {3.9061317872509823`*^9, 
   3.9061318209519453`*^9}, {3.906131854588011*^9, 3.906131914810781*^9}, {
   3.9061321420170918`*^9, 3.9061321582109537`*^9}, {3.906132205471896*^9, 
   3.906132401838616*^9}, {3.906132548247774*^9, 3.9061325735235987`*^9}, {
   3.906132613232308*^9, 3.906132648239827*^9}, {3.906132679997253*^9, 
   3.9061327082933607`*^9}, 3.9062197541342583`*^9, {3.906220761831339*^9, 
   3.906220839703073*^9}, 3.906221018139063*^9, {3.906222223804881*^9, 
   3.906222230351351*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"967a39b9-849d-4c27-bc3a-d4d20cb8f69b"]
}, Closed]],

Cell[CellGroupData[{

Cell["One snapshot with 3 false Tessellations", "Section",
 CellChangeTimes->{{3.91372777665914*^9, 
  3.913727798549033*^9}},ExpressionUUID->"7c3b2c47-fe19-4dde-81f5-\
bec6171cb843"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{"Import", "[", 
   RowBox[{
   "\"\</home/chengling/Research/Project/Cell/AnalyticalG/data/N100/\
derivativeTest/CPUtest_N100_p3.800_T0.10000000_999.nc\>\"", ",", 
    "\"\<Data\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.913392370327138*^9, 3.913392382077566*^9}, {
   3.913393695986911*^9, 3.913393696127836*^9}, {3.9133937315792513`*^9, 
   3.913393731743902*^9}, {3.913473284568802*^9, 3.913473287706699*^9}, 
   3.9134752661052713`*^9, 3.913556214896843*^9, 3.9137265313276176`*^9, 
   3.9137266888488703`*^9, 3.9137271803335114`*^9, 3.913727233569957*^9, 
   3.9137272991368093`*^9, 3.913727398367738*^9, 3.913738396648456*^9, {
   3.915806355852317*^9, 3.915806374790886*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"c09bc8d5-b04c-4b76-9ae8-e7bd10cd5372"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"/BoxMatrix\"\>", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["NumericArray",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxOpener"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Real64\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "4"}], "}"}], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxCloser"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Real64\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "4"}], "}"}], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Data: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{
                    "10.`", "\", \"", "0.`", "\", \"", "0.`", "\", \"", 
                    "10.`", "\", \"", "\"\[Ellipsis]\""}, "RowDefault"], 
                    "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOmUkqSJILiFkYYEDFgQEr
gImPyuOSBwDBQw/d
     "],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"\<\"/additionalData\"\>", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["NumericArray",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxOpener"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Real64\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "200"}], "}"}], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxCloser"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Real64\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "200"}], "}"}], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Data: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{
                    "1.`", "\", \"", "3.8`", "\", \"", "1.`", "\", \"", 
                    "3.8`", "\", \"", "1.`", "\", \"", "\"\[Ellipsis]\""}, 
                    "RowDefault"], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     CompressedData["
1:eJztycEJwjAABdDgQcRDd3CH0qt1hThBCsmpIMRDcUPHcYQmglP4PvwPj39Z
HrEcQgjPU5uYtlut6XU/duS0TmPu57n1HX75XMs3w8zMzMzMzMzMzMzMzMzM
zMzMzMzMzMzMzMzMzMzMzMz/6R1vzjCa
     "],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"\<\"/d2Edgammadgamma\"\>", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["NumericArray",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxOpener"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Real64\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "1"}], "}"}], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxCloser"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Real64\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "1"}], "}"}], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Data: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{
                    "160.7038388363561`", "\", \"", "\"\[Ellipsis]\""}, 
                    "RowDefault"], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     RawArray["Real64",{{160.7038388363561}, {89.61024846841926}, {
      62.32543479370918}, {86.32580601329805}, {86.6201523609177}, {
      87.8871948172182}, {91.29379046916189}, {100.30667664599126`}, {
      87.71800417937351}, {97.03586043739027}}],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"\<\"/d2Eidgammadgamma\"\>", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["NumericArray",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxOpener"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Real64\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "100"}], "}"}], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxCloser"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Real64\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "100"}], "}"}], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Data: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"7.147422005012197`", "\", \"", 
                    RowBox[{"-", "1.1973830780401176`"}], "\", \"", 
                    "2.5026485001070897`", "\", \"", "3.4110672501002903`", 
                    "\", \"", "0.975004415454723`", "\", \"", 
                    "\"\[Ellipsis]\""}, "RowDefault"], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     CompressedData["
1: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
B7VlmEuHwbo+6WzSkVKoV/T3ptIlof8D11btIQ==
     "],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"\<\"/meanQ\"\>", "\[Rule]", 
    RowBox[{"NetCDFTools`Private`postProcessDataArray", "[", 
     RowBox[{"\<\"Real64\"\>", ",", "$Failed", ",", 
      RowBox[{"{", 
       RowBox[{"10", ",", "1"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"\<\"/neighbor\"\>", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["NumericArray",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxOpener"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Integer32\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "2000"}], "}"}], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxCloser"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Integer32\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "2000"}], "}"}], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Data: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{
                    "92", "\", \"", "96", "\", \"", "27", "\", \"", "21", 
                    "\", \"", "2", "\", \"", "\"\[Ellipsis]\""}, 
                    "RowDefault"], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     CompressedData["
1:eJztnWlzVUlyhhMkEM0u9h2xg1gkQAIagRACsUogECDR0LSAGPubHTF2hMP/
0v9ofN/R+0TlqXv7e09EZcT1NKpz6tSSVfc6nzfrnPnxn+//bXNE/Ne23v95
//1/Hv/979//d+WX3j9e/sd//+3f//b327f+Q+Xbe5//G4n42vvf9d7neO9z
sPdR2T8qu9/724PeR7U87H12DLjmYu9vR2KjvnBdt3ufZ+naP3r/PdX7HOh9
fvY+i73P/qqut75P91/qffb2Pqd7n2/pul29/97Z+9xxW072Pr/2Pt/TNaO9
/37V+9zofc76+j29z273VdeoLVd974EBfZLp3oXe51jvs6/3WRlw3SaPzze3
9eGAaw74OTd7n1X3v75G/djifmnMN7mu33ufx75+q/uz4ut0vcbjsvunay67
v1s8Jqd6n1vV8w56HLb6PpX/Vl2z2+U7XX9dh0z9HfZc6TnXep931XV6zt3e
Z8ZzsnVAPRrfL73POfdL/dtWXXeh92/50JB9R3XO9j6Hep9HvnbE47zdYzxk
n8v1bLaPHrc//Ob2D9v3dM0P17nfz3g5oM0ven972vuM9z66/k1srAH147mv
P+y/a13ouRddnuuZ7/17uveZ8DPHBzxrwXV+sR/WYyPTeIx6fNWvg+7nerr2
Xu+/l3sfjeVY7/NhQD3ymx32uU8ez/qaW/Y7+ddVj/GS53+vx1P7xTeP6177
xfve53yUNXLCbXnk/g9qz2RsrIHPLtdYva6u0zqfi421us3+s7PytX0eP+1J
Wq/37Wu5ntNu4xOP0z0/N6/pEy57Yn/c7/aPpWu+2Bc2R3cPzDbsOZL/aTxP
eZzqcd7jvuz6k3q0FuTr13sf+eTH2Nj3tNZmfI/8VH521G2Vvx6u6vvuuR7x
fJ4a8Ly9/vtS9K9zTH4z6Tl66jZdcRtXfc8r/+2j5+1s9O8LHzymj9zu6QHP
e2zfOOPnXR9wzSf7sp69/U/8ebfH+bLH+ZR9OO+JzzyfB+3TbwfUs+R7r3oc
te8P2U+45oz9eML9mvc4ZZ/eaR+Wz56zr2pNbknXzNr3Fj3PWvva09Z7nzVf
J989b389EYPX13fXq+8fjdVNj9MB90F9ueN2aN1sisG/ARY9p6/clrsDrlEd
zzx22ht+cX3307U7/DeVnXb7P3ueueaQ+37XfR20Px/1GMuHLvh63SffZ4+9
YR+Uj2p/XbAv5npOur96/qR9bNXj9MnXTnsuxz2XdVtkWi9L9oULnhP17X26
Xj4wbZ9QXYfdtuzXat+c26vvzUHfBRftq7c91g88f/m7Z851H/bfj7n/uZ6n
Ln/uZ370HOf2vPGYamxnPR9fq3pmfJ/Ge6v9o27zdY/vGY/BoHHUWvrpumY8
//VvSH0HaQ1Oeay1T9d71Q/7jNp5JPr3QtkD+6rGcDi6v0Gxe57DJ57TEwOu
kQ9r37zm+X9SzTnXvHPZ+T/xn7Oea+0JWo87B1ynsdNauee2jMXGGsh75xXP
+5znY9Cz5POP7eOD9kvZdpc/tj8M+k076zla91gPWqcP3We1+YPn//fqOu3F
2ne1Tw/6HSp77nnUfF703J3zeB3zPS/tn2qPbLOvf5PqVH+03h96LM/YL/Oz
5Btv7Reau18GtOmJ51t+OGQ/vVBd99Xt0Rgdd5vqeuTL+k7a4rm4OuAa7RX6
njzkMX4zwKcX3Q7t65q7Vc/blT8Zz2bNmjVr1qxZs2bNmjVr1qxZs2YbLPGL
Y1ujUbg15Y8dPzrpeNLpKtbyxTGfS44nEbeiXHHK2SiM/m50Y6vnfB98rY5D
KU6omOF9twHGQTl8XNcpbl/Hf6853qYYFuxuOUo89Y7vP+w4G1wNTvHNMbhh
37PsmBr1K0a26LgWjCjHUVeixAOvOp6W23cqCvvWtYrHZx2A5gP+rb7UjBud
wpr7/sr1wb5g3/CRmv/DiODeNRf6GoVRoGuIVL7NY3fMc/+gqv+Qx1xjBG/M
5TOO4Skur/jnjWoOR/3c3e7Trii8O1z3ftcLfx5L92tuxSIUI52LooOAOSiO
rJjtU5cf9vXcL/8/7Tkfc/05Fq17nrnv+6I/Zrnufp9wPzWWQ+ma7fYXlR33
tfl+zZv8UWtvk31pJYpWYleUuDK6ie9RYszf3HaxncdRNBnUD5vUNfCcQ6l8
h5930vfCKynf6jmbd981rplJP/DYEGuGqVMuPvc+ipbmkMd5OQpfRwvxMfr5
6DGP/2Y/A8a3z9ehlYBT742uf2vcXkXRosCqWT/wVq3bq9HPCCbtD2/sR+Jf
4gBwYt0He0M3k+PVatMuz5fG4l10GTr6AvVdcW+YERqg5x57+PNCdLVAxNS1
PtCBZFYw7nah0akZ9U/3R/167nbk8mtReLP8bsr9oFzrV3sHeo5/VHbL96HT
eF/dP+l2wf3V9qwvQY8DW9Ic5u+H4/aZGbdD7dGexhpcdX3q380B8zvlti15
3uQPi1H41xY/Vz6ndXWyuv+un3/Ac7NWlcPDtEbku99cDzwZ7RrarE3VMzSf
E57fdffrRyqH647ZDyaq+de+p/WjdQR7yu1Dm7DJz0fHAE+6Yb94EYVDZv4M
39e4yZfh+3wPvLFPqg1zriMz/jXPncYP9vrK/qRy3fPUdajf+j2CTumY51Vt
m/f9quej51r3P/c1H/zsvPfTPo3ZrOt/Fl2uq/bcsc/tjv7fH3rOPfvYhyic
Po8PDB3dV/4O+NX+pz1Y+4j2oLx/aC7QHr102z5EWSNwdLSIw/Yz7te+rz1Z
+86I2zKWyn+Jon+65muWUzlam189zzX7VdvRLp60L6kf/A567ba+cduPeIy4
/6fn6rnnTmspM8jvrn/Fdf4aXb2cxgvdw7jnIq/xGc+Z5k6/M2rdB9rNX9xv
jc3RVI5WTHvbLo9R7v8z+w260lqf+sXlQ37uqK+jXOOFHmnV85+1K+fcNs0j
2s38GwydiXxqPTb8eCKVoy847jbMVu1D16Ux/hT9WsRn9rtZ369+Zo3GFbd5
1WOvufzoOdxe1dWsWbNmzZo1a9asWbNmzZo1a9as2V/NYOdDjk0SZ4UxbXNM
jpyOc47TEd8nbrue4oQ5fvbVf4edX6/ig8S5ic/ucjyQGK9idzBu2HnOu1lw
LE6x8cOOHcLSVZ75omKBiu9mTn82CpvMjJ76h90m2JbilDB1lSv2qHgsbKnO
P8r8Ao5+L10DP1I/YT9LKVY5HIWbH3Q7ssYAfg4zHameD1eCncPSKT/muQ7P
/TU/k3I9FzYPP8/1k189Zx+p47eKqyquTtyfWC3lcHPF0WEcF6rnZ4Y+Et08
3MdReCsMKec4qb6nbiP6iDonWW2H/9d8edp+Qey8zrvUveRTwic4i0HlxK7l
F7BzNCUqh5lvt//AR6l/TxT9yHT06x8y+4Wd307XcI4BbG65ul/9Oeq/K9aO
Xoby393nsShx/JwneycKO1Q791T+dTG63BwGSLl4B+wGnUvOr5qJwo7hZ5lR
HfHcwYVy3bLeP/+558iH0YlkPs05DehXan3LfrdH6xH+nfkWfOz3KIw58xm0
NefdN9WjdUDOJPwFjj4c/e2HrcCAs76J3OXDHpsL0c/PtR7QSclXM5+Ez+i6
F9Gf17/kcYEB5hxy2W773E7373z083N0PTD2zNJvRWEzV6Ofv2nfum8f3eF2
5DUAP5cPnvVc5rx5jZ3W2AmPX62/UF3TUTQO6uPNdM07t0ltg5tn/RRceTkK
W1ab0efoufAi+Dk6GpWj23oYRQdW70/y8U2u82x091d0J+qj9pX16Oa2Pvb8
c7aD5jjnUqL7gKEfiaI9kY1FyWl8FCU/mPIDURi1/LDOZz3u9qEtg6NTjn6J
fEm0OJTDzy9EYedwTpWrX/Lrt27/XHT9G+0NGgn4OeXz/vuk+4eWinL97bHH
QGO7Obr88bbnFY5en9kwHuV8hMkoLF/t0F5BPinnnNR5yfq+lo9ybg08mnJ4
+VwM1m898/jI9kbJw8Xgw/LpP6Lol+TLWnfat+Hqv0bX92VwczSSf1TXaP9A
H6h1ofUBR2X+4f9oKGDpKkc/BT+/EOVMDRlnn2hMljxGWV+A9gVtTJ1rq70U
fc2C/SprFNEWoO1R/5ajaMB0P7qcQQxd/gI7f+s+TlTl8POI/rNpYP47opyx
Uc9fZuj19zt6z/een0NV+R8uQx+i9rxM16ErgKHXud/rvhf+zjk7lD/xmHNe
w7jnsrHzZs2aNWvWrFmzZs2aNWvWrFmzZv8K9ja6+S+XqriW4vXE8BV7VVw1
80XiysTfvkY5S1u26NgaXDCiyw9VL+xc8UcYPXFexe0yIxFDyPmFnNF+xuWZ
3clg57cdB93lZ1AOb5+OwoAyYz7ttpzzvTmO/C0KV4L7Kjaf+Zli32NR8nbr
/MQp9wnusqcqV1th9+ejqy2QwdZhhLDmEY8nTHKn6yfGzP2ZmWsuiLdTvtv1
zkdhYJnPzvkeGA+5/JTDBxTHhp0vpvIbUWKqxM0zn0E/ADvPcycjLrw5Su55
znEnr3xfFD6V+dOzKNz7mPuQ+dEm/x1GRi54bh/xa/IzN0Xh5/AtGLrWQc4/
h5+TX70QXT4AM4fvLUXJkVY5LElzg/4in18A1zsWhWFnRkN+OewElsH7AsjZ
fBr92gMZ/A/dQX0eOnoCdDE1v/nFZfLvW1Hep0C54uycRT4f/fnPaEp2RTkn
IpfD1mTaf2qGnrUrWod1fp3mhjOtyS3/WbVPf3vpMdPYwXrU7vPuF+xrf9U/
cjth6HWeNtwc9sr7Bignj2/czzwThTOqHH0J7PN5dPO3ObNB+7ZY1pvo5seu
2ufU9ytRzqvG0CORe74nSp6kykejcHN0ErtTHZc97uSooieinPMMyMnmLAT8
Xz5JzrOumY7uedaa96Eo7JyzKyh/7bkbj3LOQWZs5OfC0Mmn5vtr2s9Fg1Lr
W2D3CzH4/Am0D5yzssXzxx6ofm2KwjOno7vGtO+tx8b3ESwz56BrTcPwNP+c
Z879mZ/DXzM/HvM94x4n9DSUow3gzHa0VpSjF/kZJf88n7etfh6IosFCA0f5
jO/Tc+aj6A8o1/rW+oH7z0WXn4+7/ZN+Rv2elkmPjfaIL1FYfvYPzmaAZeb7
R90uNHxbo6vhWPL9L32vxiLrM2Y9b2gghqr6tZZgz2h08v1weNg8LJ05RL8o
u+Q+5vxutCm8t0LfA9mHtV6zPk/rIOvXlqO8X0c+uB7lvAvqR9s2FuV9O5xz
8SKKrmeuGnsZmosLHueF6Oov0DfBZ9HoUX7V7dYYwtHzHnbddapuzeXu6vnk
nmuO0Ajk7080obrvWvT/fn5h30KXWuuXtPfC0N9Gv75lyePF+1ReRpehc3b4
5+jXXshWPP7vo2gjcjl6oFm3o+brsHPt01Mey3wW/uYouefhPuTzpU54PjQv
96LoBOt2NmvWrFmzZs2aNWvWrFmzZs2aNWv2VzTFu2aixK9fVPEv3m8N0/5W
xdhWHFNUDPRR9J/P/TZKfgoMKPPBo1HeU0guX76f86Hh4zWju+xy3hsOq6J8
t+N3o75O1ysmCIO67esVH4bz5ecvut9wd84Lp/yU44KH3cYb0X23p2KNinvD
LRQDzfm1U1G4C3w7P/+c27vNz68ZJLF79XHE/cr5y797TO647pPRzX/SvMPQ
ie1y1rnKR1z3Kcc+6/zCM1GYi+5TvDznSC5G4U+KQcOSyEHn/FL4Xf1+zGdR
8u9vR1c7ICOfmfj9++jmYME3J93GfdHl8/uinN2+1/3P7+K9H4Uv8a7LfMY1
ud3w4cXonk8+G0VrAUtX/+EkC1GYKqwpx5c1Z5xPyxn1WWMhbvU8Smx6NLr8
YNntPer2q715/apOrdvX9s0dlX9sj+67DbZUPrDP48X7z+vzB4Y9dpyToHFC
p6By+bTWCNx8f3TPV4CZ815l9S0zDtWntQGfPV/dL/+GW9a55zK0JrCv1ar8
pp+LNuZEdPkL/HUy+tm67F30v0s+51jDzmH7B6P7/gtyzuej6JsyYxr1vJ+J
wl4vR8kBR3cBg4NjcT9clPzhw9FlhLw7/KfHoc7fJO92j5/zvRrDc1HOzh9x
21Y9Z5q7s1G4sHyVPFLuz3xvOfr1DbeiMMuHUfQllF/32KE7qBmX9jXODBj3
PB6Okh8JN//kua/ftYy27EOU/POpKGeY6/tvKAr31dxFqkPzhrbnYfTrv/Rv
cuuXol+for1T+wvsteZXY55zzh+o+dsLt0ftgkNnfs65AJxB8dpjBcOFn2t8
YYn5jPrdUfi6xno0+s/n513MMPCsv+L8gP1ROHqu/0N09XdoaDhj+5Xbey/6
c8NlGo8DUXKE59x/GCZ56488fgeiyzjVN5g459DoOezBY74XjYaueZzaoe8F
tE0w9Nw+tCNno6uDw8fVZrQhMNq5VIf6Bd+ccR9z/apTPqv1pe8FfX+uRNGn
oJfgbAjt11nfAp/VvfJDzkCgfGcUfqu/yw//iKIjvO95hy3ns9Fl8PIrURh6
nn/0ebyr+0p0+br2Ge3x2ne0T9T6HPRsC1E0Glmf8SMKe/7m+clnnMvv5Pfo
++ozeuDj6x6bA9H9jXMgip4UnVfWN6BNQgMwEV39itqFxg+tas7/n4hy9lDW
GOb5ex/ddx/k8df4rfr58oV30dUwrkc5k0N9+Oo+osHk/eic0691qDXyKvrX
YrNmzZo1a9asWbNmzZo1a9asWbNmfzWbi278lXy0/B5U8q9hoUMD4pyZgxKj
OxndWOrxKPm5xIu/VfXAYWGWir/er66Bp8NtJhzfy7mxmasTM63ZWGbrcPV6
fHal+CWsr75myH3S+JCjXnMWPeemY6fwztHqGmKTii8TZ4dfcA28CS45Ff05
j4tu87YYzBRlcHaYJLHffA2aBNjORPT3nXw92NSzAdfA4GHZ6AzyOQKKrYqb
wPHq96jLvtn3Mo9XLD3zZnJp4WB1HbKax9c50TJy6lQ3XKA+WxWuciBK/p/4
D/n0vI92LjbsQ/TnR8u0LqajcOU6B1E2HV1GRE5qvga+CC8finJmOtfk8wDE
ecQb6vcyy//E6tZjI54+NqA9cApys59Ef0wcLcPxKLqbegxPRonrw+ZqDQ6a
lHtR3s9Qc8Y9/rvWBnqDh9U1MHztA4tRuEO+JufDZ6afryEPEqZ/N/rHR2sP
5qD+7Ij+vUM+Ad+Fn9f5l/B99D+DGD9ng5/wnA5iE/LHrIOo82hlsH2YP8w4
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
rFmzZs2aNWvWrFmzZs2aNfsr2/8DtjiDSg==
     "],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"\<\"/overlap\"\>", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["NumericArray",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxOpener"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Real64\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "1"}], "}"}], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxCloser"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Real64\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "1"}], "}"}], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Data: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.`", "\", \"", "\"\[Ellipsis]\""}, 
                    "RowDefault"], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     RawArray["Real64",{{1.}, {1.}, {1.}, {1.}, {1.}, {1.}, {1.}, {1.}, {
      1.}, {1.}}],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"\<\"/position\"\>", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["NumericArray",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxOpener"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Real64\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "200"}], "}"}], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxCloser"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Real64\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "200"}], "}"}], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Data: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{
                    "4.909989843065351`", "\", \"", "2.04255726281653`", 
                    "\", \"", "7.515577362921716`", "\", \"", 
                    "8.649391893313842`", "\", \"", "6.113172160681986`", 
                    "\", \"", "\"\[Ellipsis]\""}, "RowDefault"], 
                    "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     CompressedData["
1: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
WGfHBV+f3YH0OwKIsbHo7FzfQ+a4isSHXBdGDNNhhsvLyzV1YkeieiRRF73e
mv+hKqpdy/PLM7hIpS3NeakwQWY6h8aEy/+QT3uSHG6+Z8Az7PBJtwp1vOX/
tpF6Uh07b81f6/hOAlS3HSpUazZ0lw8rdf4Tgb/mA+uCx3yIZmraWzS+Jaup
+XMGjdVBrJZ0Hg2i40RZm0nH+DDZmXM1seFUPzFKMy04pjVEzIL++/x8HQsy
Iuse2oy28rwtKHu9vQwWycl5sy/Qof4zXDTkmBr4DcNiG+yoMG0tq/+lyvNA
3WNfip2+kCHrbsvaVDpMtUOFv7gy8aJrw8Iydw7MXw7Y2r8dIwYFG9a2Dqmg
dsvo6z0JQyRA86HQuQYlrOTft9wnI5E8LjZzzVpFgfak7aXVB1lYrrxfLveD
PI4u2lrlbqiEk14D5rltIjh4mT9KuVAeujLjPYHGHLTvP+M3/k8NXfyqy1ab
dZJtNoVEs1gQBbsvH/QYZeDCnrC8dd5smP69blnD498nl2tKS+fQoHAw9/Ni
3nnzat8n2ouaye6u3/OyL7MwbhD6ZctaLvzXz90/2UzB2VSvrLUnOGBZlcb2
ZgpCd3rvqqZ3DMjRpKfv9Qli5tXK+i9GYtgaIHNYXkoICueXBPmJq8PNo+e4
R5EcNJI3mk1s50PaZs1Da59Nk2XPNNhn1MvI5zcpMd+jBRH5rvdU2H9UuEyv
XB76hIMUWYrpos2SuHJM4vLa30NExYSv8qMoA36vV1geSaRiqX3lh4zefpId
H+XYR5VD2K7F21LuimNadWpK+GY/KbzULVgS1UF0fn1cgDkvicEJzxxpN2V8
GQs3DHZgY3iFekDAE2G8D/lPqW/eCHk1mbou2YOK4VPun+96thLZQWfj+bps
nD589FNOhghsvKrGlrVwUZBudUVwlIlXlOSkRdE83lo/9+/eayrQP6lva/GU
g4kvF1uODX4kX/5eYc6JYGNjOdPFlS6NGTOFzsel08RYKNprUIQLHbk9edIr
xbDhtkbdez5BFBbIpN5MomHq78eiUBsmtjV8Wuy9qJBMbci/F9SoCDHJZR7z
JyTwdur7V8HdHKTRIkdSxDLJoG4BZdCGyzPKRNbx1Tx+7D6wTPYPHZtWylTM
e6WIujkNMX5ubHCaF23u8JZHyAPWbt9WZazecZziZc2P6NyZF4Lzi4hW0unM
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
nr+I/Hg/U3RBHmNXBm3H5yqApXx3k01vFnmQoTHvOZ8AQsJdtNM9lOAiol6+
cq4w5v5n9L2K19dX1qrWylXRcDhYW9VeSBo3j/otqnosjjiqTNvCtwL4s3hj
xkMFRfQlWu/9cJqBggdrVnsv4PnX+Wv3hkcU8fXVkHZitSQKvYq9NLTkIfP2
WqSm5BgZLZiS93/Cj983WWfyH8qgLzsg9GAtL+8OHA67uvQfCVn3djdrbIjo
OtAeLaJT8FznU3vvNz5cv0nydtZUE76SdR2+czj4j3a25p15GylzHMkd+CMD
vTOjt5+Js/EhuyYsxp+B+MTzVMMoFtbV7XqpFaGA+FDLJ5c8BJBSnb5ygbQU
vPaO3gm/wICOy5+4mY2KqK36rSWj/ZEImnn3OpYOEuMtIi80pJmo2PtVQeYV
GzWeuk3bvlLxKftIeOkSCp4uEHtYk1xD1F/cepwwxcbPlqGePWwRbOvbx/9h
CW8f4OS8kFhpvOb7lHEnjY3RRc9muaUMGDRk/bZbKwzlDfftrj5lo4WxJK1x
SAbHjCv6y56o4KB5b+DwVkUwlx9OlDtAwecO5HP2iSC/xbUofFwcmweuNQwe
Z2GTbvVvzXQZ7GeoMu7zuI0+b+/b8U8UiN5o+LRUhA1OQN0yWX8aQmu2Mm72
09Gx9937jmkFeIVfMDbi5XJgiRGjf6862MGfPv54z+tjk7UL07bLw0SSXvpv
VAgynT6BD7Yo42Hsurd1h33J/qqrgUV60gh2FbMLM6NAzyz9g8kZXk7/qWV8
nmWDPmjq/MxplNQIvalPuCEHWa5x0g1ezh7z0fFacUoN9yqN0uxOqeNL6RZv
ww10GMjLtO6I5eC4fIH7JX1V2GWc+rHDVhCuBr/feQ2WEpvXzu+p2epw2Hqk
vHudNCrPPk+1MleGd5PtR/foLqJ0bGNPT84kGXNOObj3PQf1dw5zXuSzULnl
RGzwDBWKBdfDKE8VoWPvKy6a2EMer9VfK/25hvzq/OgzJ+EvsTwzaNr+fIo8
XzDqn3hLHafvFQ1Lbx8iV4otFvc/o+Fx+7fEDWWq8M8l/h7FAvi3ejyufkAc
hwR/9aS6qOPOY4mWjy+50NQfctnwQQyJIyuEzrX0k1c/K49MGgnB+drvtynf
+OGQEsAK6eeivGzw0qWLf0njrxUHBw+x4Bt3LmBtoxykTiYNfORwIZHEnFn6
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
     "],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"\<\"/sigma\"\>", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["NumericArray",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxOpener"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Real64\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "1"}], "}"}], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxCloser"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Real64\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "1"}], "}"}], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Data: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{
                    "0.9869860337953982`", "\", \"", "\"\[Ellipsis]\""}, 
                    "RowDefault"], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     RawArray["Real64",{{0.9869860337953982}, {0.44024251751617777`}, {
      0.322847060217178}, {0.446085805389975}, {0.41990437897284866`}, {
      0.38884722937163346`}, {0.4267276374250858}, {0.47821123285838785`}, {
      0.42363384083963185`}, {0.49185660489146904`}}],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"\<\"/sigmai\"\>", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["NumericArray",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxOpener"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Real64\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "100"}], "}"}], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxCloser"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Real64\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "100"}], "}"}], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Data: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"3.300374957567192`", "\", \"", 
                    RowBox[{"-", "1.254499462846283`"}], "\", \"", 
                    "0.42867487839538243`", "\", \"", "8.151427158951329`", 
                    "\", \"", "0.09366750592058688`", "\", \"", 
                    "\"\[Ellipsis]\""}, "RowDefault"], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     CompressedData["
1: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
7wyz91IOFzL8hY0HQkftxsbQ/wAAx0wZ
     "],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"\<\"/time\"\>", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["NumericArray",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxOpener"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Real64\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "1"}], "}"}], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxCloser"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Real64\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "1"}], "}"}], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Data: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{
                    "4.6517952486075`*^-310", "\", \"", "\"\[Ellipsis]\""}, 
                    "RowDefault"], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     RawArray["Real64",{{4.6517952486075*^-310}, {9.999999999999831}, {
      20.000000000000327`}, {30.00000000000189}, {40.00000000000061}, {
      49.99999999999862}, {59.99999999999663}, {69.9999999999989}, {
      80.00000000000402}, {90.00000000000914}}],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"\<\"/type\"\>", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["NumericArray",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxOpener"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Integer32\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "100"}], "}"}], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxCloser"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Integer32\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "100"}], "}"}], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Data: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{
                    "0", "\", \"", "0", "\", \"", "0", "\", \"", "0", 
                    "\", \"", "0", "\", \"", "\"\[Ellipsis]\""}, 
                    "RowDefault"], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBnECOZ15JanpqkbFRHkieC4hTGEbB
KBgFo2AUjIJRMApGwSgYBaNgFIyCUTAYAABR/gm+
     "],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"\<\"/velocity\"\>", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["NumericArray",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxOpener"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Real64\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "200"}], "}"}], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxCloser"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Real64\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "200"}], "}"}], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Data: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{
                    RowBox[{"-", "0.11201500713142656`"}], "\", \"", 
                    RowBox[{"-", "0.11366296085867063`"}], "\", \"", 
                    "0.40577037296695917`", "\", \"", "0.29816035798021334`", 
                    "\", \"", "\"\[Ellipsis]\""}, "RowDefault"], 
                    "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     CompressedData["
1:eJwVl3c4Vv8bx61KKhGFSlRCZttIbjupVBRaSEZKJUISIoXMlMzs7L0f6zaf
x+YZHnuTFb40jKSf3x+fc13nnOuc6zrnc7/v+/U6aPJUx5yJgYHBlnXjoHPP
QdnG5p6j7ub/n5jdszpzyuz/N9k2Vv3GUnmotcycUYZv/ZO2sfCVo8o2s0tC
y91wSyNaauduKihz2NQSRztRzfCAZe7mJni+ZF/qkDCMEidO/XqS4QyDnxjW
ieGT4PmIPKAi0YGb/FZySS87YTZGrHQymQ5VswTppCttwHwvbczy0iDK/TtR
oHxpDDUURJj1dJtQ8eZvJvqdILyd3HM20qgCGoq1DyzrF8GucLtwhVPDmBf9
dHs3byhY8XbePHOzFGIGY3V3S2Zjz1uJg6snu3FvcaixpmIZOE8a/Nav7MXx
Jp9//ziosH1mICo8sRNF2N9X5y20wW/ja5tDmTpxzndHRo5EC87FvEltepML
OwTkgd7RCWyyO8X/46Hgwh3CvZoWOt44etCB9ncAyzRu6VjYP0GlN6Hjh+41
YtzxqUuyN3NQ6qPqST3uCBiQbsuseZcDamw/n5dHT6L02bMktnc0eNxncc8z
Nw0SV6MY3ju54vrMX4K1GBESt5kOfrxLBr1D2s5xd2gQUzx7jY91BIonb0u0
tA2hMnfpYCwvGdRuCL8KPDwG5EgxUQGrCBB9t6Ll00bB1TlK1p8HTZj13ybP
4FFElgKnt89e58LJx4SX7Hp0+H4q21A8ewwVPU7E+1+rxQ6m9z1SfSHQl16/
zz+sCn53Cp/lKH2P6gnznPv8p7H+yM7loa8TMP/zcPmOHgLgRWGHZPoQ9Dyi
xLHHFgF1/F9Tt3Yb+i/IyYQVF8BMLz2sdzIY9A7nMOUKtaLVsfKwP8WdgB+P
eAScGkHaj9P/fb7aj+4igtxP9NKx73vnSRaGRmR7T/Tceo8KU57Wi/eGZ+Cg
x9u+y2VkXLd+yzpZNw65KRc6nAVn4fWVV2+zoing+slL7jDpDZx6RFD8KvwB
N8k89z2X0Qe7st6/PjlFxIEpRTcJagse2RLg/fYfDY+rnUz+YToEAyB4bL2A
BhWcyiw+XU0gazsoe/FvDkw7psSlTeTgW8esvqOMw2h24ZhQ2FgJtPZZLQoP
lEM44dC/kU1NUK6gEJJCrUGFa4yflE5+ALdm9muvxlrRWFDgie4rKhCf39p+
bp2KeyqpzdGP6PDa/pdYr0s8vDe9y5KSM4y8+5//+PWKAjo6fsahT/OAh19k
l5bFKGY79XMWTFdhW6V+GIdtEQoW6NOKoRG0Cr6J/UnPgu46EROzqCJspf+d
/+hZggMPlffV2g2B5JjSkwl6JaoUvb+eUpOIS+w2Q+oSAyjfWCVIfUPF49xd
Je1OnZDgklce//Qb2m9/LhqtkAsTjGfGz89/B/7dddN0ajgsSyhXvT9Zi0c0
q6ySdk0CQ7970TvyLdxlFvEwXTMNqQ6eCb3KFNDXJZieu9WEH7dFvD09T8MX
KpSSOfUhMMmpYY5KKUCzq7pb0v/rwkSS2NGBtkYcE7fo332kEfoyi2xvcnTC
rWyR+hse+fjgrEkPL18mqFRmzJmzdmIr+2n9V09HQETob8m2MxRYVH/vmVsy
CC0N4W8GZafwn8DFy/sIFLx1RI0zpYYO5t+PuMdIVsO8q/t/iXtn8d+bue+O
d4rwZ2r3hUilQrwX2NLRONuNB9Xuh0yVtoHDUDh8/NwFRmbGJLbuDuBiYNb5
rtkP6u03Wrmv1SHTxYqLMQX14HrruJxldi163xt3TtBoh+22EVf5CEP4LKml
IUCBApGnu7z0zd1Al7wtwKwrB0y8HMfS5XtxaY/Rv0DGUvxV2GDNMNmKL9jM
/50w6IAJ6c/njFQaMUVC+l7x5gF8vqJ73lqsFM2jSg0D7BJxS+257pAbvWiS
dSKQENQFd5pu3jkySMat+9/tjonOxRny48Dx4WxMfjy442pZHTpuI/n4SY7D
j1NzJY1uJdhFfsV3aKoEOwZ+KRR6j6JS9qe3zueb4E/uXLLaRp8Mjg+ofEZt
Ap0iszMvKA0Q+qM+64uQAyb/iPJ72j8KOT2Xew0iqlGs/0s73x0v/K+6/Ibs
TxqEOYvuLHYg435yTc2Eez7WuMmdNjHLw2yPbZZrwi0wGrtd63ZYO8xFtDAY
FnTjf8lt2yONc8B2u4vg3ftEvH5Kf4LZIgnjDO+qau/MA9s5G37jqGC4vGY/
L6dEg9R3ekzGPa1wdaY3LblzGF41W2jyC2figwDF3fVF/fj+1XupCDYS7r41
zThbG4AdzMW26uUhUFV983anRw0w5nYo9l4kgFnKRkv52Q/3dCvNshupsD+J
q0XSsgOsngoYjz7KBksDXhebT2TQ9mfm0bvaBge7P66dc28Hda7mm26xgxCi
EPgoOTwBjMmm6UYanTi7pZBF9Wo9pN7VFLj64BumNbAkrZdTUW+E92J6RAem
33lWwNFNA3J8cAK+LYIIrp3MLNK5OCh3Ud48kIaUnd//6DXQ8csiz76Tge34
Z+HWn33HKFjfylGUVTKEbVxbRPjyovCKghGL+1APykSeiarzycWSi7vDrlwb
wpFK0qbtsdmoN8wwYaPaDLlqkc0GKW5QxCS1p6eoF3eU37vFv7kLDezYDwQY
1MHotr+hfH2dYCyzjBdZm9DV+ceogmQe5PZGQoNRD1S8zzmweUsh9jPfYTJk
jUfPaLEPRyRboc5PPNgqjAoo/bBUjnEMucJOCjzeuH6+2ebEyR/V+C/ybMuh
f8PgwPC3mnyzDhszLSr7GcPQ7U7/QYEtrsBbZHgQqgPhQfjZ8LCYGgx4KFEo
86ALDu06f5dNjgwarZEH9H/lAVnaO0F4vAvvbfdarx8hYJx23a3rAcO4pHn/
gOtkJub92H+SsH0c6Qp/bjzSyAPrbIVXA+1fsM5gVC44vBILjKbOOfvmIH9y
Bu/UQhds3/fkQ5NrAdLD0r4Oh0zjxJblO7vv0IEeIn7TUrwOUswFTHU39uuX
UQBbJZkGQuX36nbQy+F83CPpvGME0LBil03ueAdbHe0Oqv4jo/iTd/WOnFSY
53Na1jw+ArZpp11Mb5Vjo3d0kGhOH7r+G9zE9cIXtrNKq29eiQP3hoczvx1S
wPqf4KaZvBI0q7l5cfQUBWfnphd7hqLw3KKxR3PExlxUoQiLpSZguaJ+/lGd
Omjk2jJRG0HBNyZ/3gvEU0CaV/nIT6M8/H1QhRSWWIO8wVtGCEVdqMpLehNk
Uo2JTIZXITcMiya+fPM5WAFPbJ+o5A6NAP87Uovx/ibI1Jo/ZvSKDPMXlye7
7al4qVphIbE3GSv5P/fcNfoE5QktOZWvwtHszX7GWI4eNIzZUdxUkQbejuxr
ieo5UHCFU7NhPQblPnEXX7NoAFhR+hO+exztBSY5BK26YX+Ygu3tLTT8PWYi
S30yjqxy3o8992VATuC03uMjQTAmicZSCvmgFvCJPXmhH2YKfGRGbsThtbs2
Tu+1miHh9umaR0JtqPToT8z8IELC4/6sC1/oeN8mbNx0qQ65IpXj9n1Nwa2T
4hllf9rhY4/Cqx7XEJByFv9dFeiBbv++vbmo24y3WEzDSzLrUYF9Izbxn/H9
JallSc4enPqbvn9csh0Gtf7FyO1vB/6fz77+vdwGYu3SbGVLeUB1PHtkd+0w
Ms+kL3/SqMKk6cjRHItGtApmEiUWb9RbHuWJUnE5+NZannxl1AePFHL2fTIk
wlcuZv3DqjXA0O2xn+NBN4jR0ztLxroht+qQL1FxCDorJX+U1FBx1OaxdNmb
Lmi6MjBSenwIupfl4+ySyLBHtaEK1rKB9CyO9vwrQn+Uy2dFYzr+A3vNXqYS
5GhZvLOv5yO8qzn445NnI1ac2vXiZwYN3EnvL9UKjiNh4vSmhDtJsBRCsOz1
fQR3NHPzyRn9uHnRlyl2eyaw0s5ckpisg7M2AzICZzvhxi7mhvKit8Dgc972
q3odRgtIxbE+aAK/pl+i/VP9sGUyxmGveTZsdj/1uletB8f2VF0xOkjGfxdS
fHw5qiHOhxb2SzgFzysGhbRPFMPjA0GFT7ZQcYUoPPjrSzxI+RPWw1+VYr/u
aLBqeR9oLVjw8r/rwNJHj+qUXo/gDcLyLEdSBW5S/vqe72UDmt/YSnHh6IJQ
odzeeJtx0CouvXuANAjsudItWyqGQVT29LD5ahZo/mZGvqeInfb7dvM6dsL0
DmHnBwtNaL54dz7gUgsS1lXfRSyOgIEyPdr+dSesFGRXXfg5DEwOv4vDD4/A
Pilh74ipaLSQmR061UuC0yI3Y5TdhuFB84jFJ2EqKFlZTBxzbkfasjprzsFq
SD88/ipxywB4W9VbBqi3g8zwp9yxua9grnBDM3pnNcYk6xWfaGxG6+gMyR7u
ETTKflIzb/0ZmH2Jp4WsY5ANQvyL0iZQtLf3QKVhNtIaBm8/bepA0t4xtot2
FOzisRewSgnB0HHiEe07lcDB9N2FkNcAl1/Wv3jYO4pXs7iarms34soY8XVJ
fjFW5y2n0Br1UKfCpHEqvA+5bAhlDpfawSPE7qnMWBJcM5E3kmSgYQGB7Sc5
NgZh1Xj7v6YauF7x5RF7Wi3wdaqmKlWNQuDqMRLfS0coXWT0Gl2gYkP+5xyp
jboXmhC/OSU+CPrfQpYbuqqBw/9UsPb2dFQ+cc/m+xQF3W4L27GJVGPrZYN/
z3b3QONB3qfyXVU4+ffMun5yFNiSfqeNqdJxzOE9fDjTDINtKmGr99qx00Lh
bfVUDti3O9qIVo3ANvEZ4T/UKNBK1KZ9SajBtUTBzr59NVAbYPmgRLMOwvar
0Qv6WlHg6nXcVJsN6rS7yb+Madh6bOcN1c4JqL4fulj8sAtZ82a7oh5XIo+U
roNrVTnSjLfK7S4qhWPZ64/E62hAPJy8/eBHIt6oY1k9u9oLBAnnqhCzbzj6
XdnnkVsv4h4zG9mxZpDZssPSK5GG1uGPP6aVpEHdwJPyMrtqkFXU4pYUz0fb
k9v/ebPSccdVbdXsjnw80RbE9f39VyDMjNHr+vNxRwITRO5MRMEYFhZGznak
s/6JiapoR16DD8KXt47gVUuTR3b9TUg8Gl+7+cwXmCr/c35gjA5tJ0pNnX6X
QTS/PrlqI4dmJ04N9WxuheGMUZ2kVgpeY/npkbw1Dr5pvJzLiBhBgkij8OhJ
EliXmzuWBcXD+Zu1sp+HR6DnpcCzSfcRtJbK0orLpOBYUJevh2YxkDK+EKw2
vLCX0j7Y8pKGosfrXjOsDEOx9Kdn793zIcaI7/V0YDeGk1PcDt5rwGUPynx1
RzbWG1z5sljfhNxM3PfLG8KAfYjnvuQG3xXmSNQFb+zDb+fryh9pPdD5NPbk
h9vlsLw5fG9CVg/mzRZqWfl2woHntQkaOze4xKdpzyWiPPDX8Q65kAtx9vbW
5unLdbjzceJKYXoxdlcRxHWwBp8f4tFrfYNwZoWdYd/2YZx6recQot4HW+aF
HSXDK+H0FnrUjp25oDTUJBJV0QdelKBzqn7N4BN05KDmWwLqdm1bGQppwRdp
DKTS9V745raa+6rrBqpp0IsfufRj2lqfMotHKejeuCzZlzSEvpuP1TY/qMB3
90N05+QbgaW3YpsqT/2GF522LthfCZydqmnBD7LA/XfZ/ub2SvDxzfl+fkcP
PKxMZeWLaoCxLzSfxnEqbH36uuamZT5qxtfcW9Bthv2GF8ozcivx9POpXdu6
2pHjUAT3fG0N/tiZ/V9IZRb02e3tAesaFH5hHPB5tQty5HdF3ftWhslvve4v
Bk6A/PUS7ZCcejDJqJt9yeiNr9ng8ImfI5g79VLclZ8Olw6mX25IqkO2X7mb
Ov6SIT1mXEPoezMe40pL435BxjaxwtKh4j6U/KwvwxyUB/VJ19a+vPMDRpMf
vCJf69D2RHuWiWI6pLXAH3GXVtBWiYx2IhehS5aQbLznIFye+DGTG9mJfpG8
PzPXi8DNrOqFU38F7grF8Q8TJMiq2LRKpZbCUvfhzbYKZBTxStZMkybBzZ7/
Gk6Ot0PSqvzzxZoupIe36YtJ9ONclg1ZaCYbNj24+4P6tQMkD/jJEs1zsIGe
0iQj8Rns+S08bp/rg1Ly64BdSjGgabWHY9hrGOgvgjkNZ6qB567oHuf5Ueg7
dMVu7FIqhj65nX8wsAgCbu4f2/0xCxL1seu3RjKmh049jnEjgsQN0QNmmz5C
rK3R5hkjIhjpqX52OtqDQUcaShdvOMOJmxOlY6JEuMD7WHfx9xjGzUnxDnqW
Yaf+uP8ERyD8V1sscMm/HcLlzja/HuuHRT8u2tv8Lth8JvX2h/529D2a/aTF
pw7OPyZxiNa3QsavKtbcY/Wo/iGC+u4eGVJOiwVfWsgC6W8M82oPw9Al/87Y
49Zu7FmvqOwaQShUTVL47TAGfrfbK55RutHVlNPoeiEJYz5apdInmrB6ikGH
b8Mrve6c3FTd3wfOK7o/Imm1qDduH/uA1IEux0sTPfUaYT2kPqKeIQeu7h2z
cFtvACk6TwaveDNYcuusX2MZQWf7c+28v7Ph/TRzBuEhBTe56FsSnZswg9su
yHHeDn2+3983RamFD0HDaq0joZiAdeIfX4zj/e9qkwL+4cCrPN/2iloFN4pe
T8us9YBrdxf/zForpDIwLN7y7kCPRbPVaPdEVLq/Wv6nJAVSbDlUnyUNI2Oy
YJVpNx18nkxKSxNmkE99x6SAPR2LtC9udpMZBDaWPnuzvCG4yVlYcvQdFUQX
BFcuNNBAM/JOv9SSJ+rkb9F2ZfqO/dwmpXlxLXCtK5a2W6MRl2Qt+AMP1mL7
SZetcz41uJfT60XTRv193mPu/La/B1nVjf2GTZNwB0FY8q92AW5bMo/96jyA
TQ9+PTpOrscmF9HWwRESDIhnh7U35oDoV9PZI1zhcO3xC0PPDzSg1h81U/SJ
An2TRJ6lpDw08s3vy/hDB4Msu4SL/zqw4eWMTuRUI9TNLa0QkjfmePXMe+MD
NLwvd6bwpxMZHBy3VeTd78KShwK6jIqjoJBpXVeYXQvMA5zBfC6DyJv+N1qZ
IwcuxnJ09wnXYclcgU/ObCT2X5h9s0elA1PSpo8uGxRg0K4Tnwdf9CAHXwyP
tu8YfNKpOmYyXgJv7jwTWwmoRtvMLb8tRb5C1gH1czbWHfjY5+YPIdERtGeU
Kht02OCcLab5zL5fYVGNT2PEYRAOKgU4f/dvRwWbyH+PFsJAnKRRzFnYiDXi
nHwJB9pQ7Io/S+DTArAdGfx5cxsZvqYVlf4zHMDCSyofatkq0aMtuW3ftwqk
tB1+HXSQDl5H8iYW+qqg+WnsWTFRCwh8/HJPUFw5cExZ7Pg2QEKiVvus36EY
GHVRF/t2dgDd+op8RIUIqGhu2PvbMRiFfhTPZWqN4dPCcKeG6Fk0bJ5/+Gxj
Dvw+cZjywrkNNHM/+E2/acBoY1PnOZFx/FHl0Vzy5ju+m9zsofySijOzAUmf
pFrheReTX/DICNp6+o+q38/G1nfZZQIwC7TTq4XaxQ1gHP+62PVIC0g8zj3B
4NwEdG2CA20XBRLtfF4FWzbDrl8Mst/MStD70Gho/IscYJAbOay4+A346TPG
tQEb/NgYX6vERwYfb6e6wI3+U7HoV2hzH/GYUdN7R0oxlnowy683NMAzyr5h
C/sWjBoIDyVkjeDS3V7K0iYq9OXvWY67hMilZYdRH/ugVtPIe0xlHO5+Issq
ENLhhmfkVqesLrwWe0VW3uwrONq5VqazloP5XFyQSWgnXE9RPigXXwFrsoLn
twjG4S673y5yoaPAolNo+Nq+Dn3W8n4eyG5C8fSV0OHCaoiavk4530iFpTYV
S+eFagjQteHVrajE/p2rM7ed45G/X1+5IGAceKYGQhn0x+F2d2qs5yANkXm0
Q9nvAwT/WfeXmKwG5GChCifXQKKj7QBDHDucUJpl5balwd8bqXz/hrvx9Wi8
9MGEGtAoEjq/Q50OX9oCP/g52kOADNOKeDwN7xqnOTip1IPpyo49g2xD6HW5
/lDUwThs/bagW+pXiHP6nt27yNYw12Dxvb2rBt8rMjWxEwtQLGclyPVZLFqx
/yE55LSD564EuT2yJByP/rkYcngAPP+7MuLJmYcCZ+lK54gJuLeA4WxQZSEc
+CUtyOnWjFPw7K6wSzX6XcvmD9buRsEjFpf3MYRjTfdN26WTTaD3pPi/azmT
sHxb0pbTJwaseptdj1uSUaX3S1tXTD2Ie0mmH20cAi3pkVFYLYOLC9Ts3Uda
UPdPK5mf3g4d+0e/CrI1gjt/VGGkwwBqOhgKc0r1I/2T1yprQj5u1lHnPzcS
gBNBTMIWvuWwxX459demIeBKNJWRFemA0IJY7YDtLXChTWmzEkcr3Dwi1uZi
MAThPMtB0QNV+PcB/eh/2jnw9b/AX5+nJ4GuJqi1L60JIUDfe+0aHRK+iGRH
bjy3qyrywI4IhEMJp0fRPw+ZmdsoB07S8PmgTNSNtjp4++CaZe6Oegh+zOH4
y5YK1gKi7ukircjIsaLu946MLyMfjsU+K8E89uN5NpI5UExrW2CxyUXlEMNb
d4VGcSL02BOjDV7cy320i9BUijPq1O3Bg5Vwx+LRpHZEFopaBJcfF6Wha7XS
zx7BYVB/vMazrzgWeG+rkJXyEuHC6e/yoRzZuJn+Y8Hi82u4L9h6mONpDaQ8
3LzMwdiAu3D1bvQEBS7m5Eme1G+EL7qcn/lY42BZ/I42s0Q36njU/WhbjoCp
+41FkZ+/wrOKMcPYmC6o+S+dLipXiZdSBScvvyuArDZP1d3niHi+wvwhfYNL
V5m1uV+IjcCwhrpvY94ATNG4COdO9OCc25FyqZcFKPFjiePAPAWNi780Ufpb
UPOqq8+PN0EoozbWdeBWDfZnnzCZbuwArZndDiMilUj6/NNeTLkDK7e5h/6Y
HMRvyimv/jBlg+XZLKa90YUwbLxSfmKsAGkXs1dFF9PQJeinfxFrAuwgH2Db
9LQDh49cUJi1bATNy7GfuZk6Yfy57kwwBwUbiGONhyNj8a2D/Dp7phc+d9Ip
ueTZjucZQo1bDiSB45ptXx6xEztOhrRrXapBu55r/Et2XdBtEetpKeQP+1Mu
PFehZcBdzSa/cd4WSLuYtMlbvQMfRbB22dUPo0XTq33a54fwnMn9m4fMqnDv
iS21r2NH4djiwp1o4V74rdcmZHy2Dg3be1weOJcD8ZiR4p2XZHg+Z261VNoP
992/0/LqKnGHhZ3OActsuK/P9ZnfhgIi7zV026NpYGndtuKvNwIfL5wwqlBJ
wnuXTkVI6rXigm2+cVpHMvjpBav8csiGpSkfw9WpUvDyZM3NFavFntKoNwk3
O3Gvt6+W9uEJXCuQFT+k3gUPz7uWjzwqxNU2Lzq3eQool1sJnNKi463YJxG6
Ex3onj0bJxivhKFe3FdOFFDx7o6RSx7TdCz3Y5q6vKkP+3SHFSjfhsBk8kas
g3k2CB97O3DqaQ+MOkmW6u7vhhsfPM+ExFDQZMjCuDtyCH83iR98Hd6EjZX1
5aqKw3CDeZ+aStMECt8eIR4QH4Ck4lOPPPy98adEMoxt5PrfdWetPbUE3JWU
/cuZTMch5T1/j7uQIMak4yNNgg4LQeSf1SKjGHhd4Nns9SJ4aLPT7EJxG7hK
HTkUoDGCghz62y70tmDkSZV3i8bpGMxue/NXHwFPMt4YN77SDILpqWtHdifg
nJK7fq4JEa4UkLwL+IvBMWTbs3fVZKAy3idRd5DxY58Nf4BcEzCsof70UDew
PKSJMmtVo4no+biprFocQOvLB3RK4Ge1ktkRhkQc2vV8RXeoBju+qIh8jCyE
SPWBj0X5mcgZVlW6by0QSFep5TVzOcBcMe6eWVGLiuslTYvvU3F57PeItUMf
CGZd/d5cMoGV7AuXv98ZgT0ajneOrlGRIvJr1k22BsO0N1V8ydj4j5Evz+3n
TwfROH0DoZexYM6t1N6Z1Ahf6y88KJ+kYXPcvpYzwUT8z1mqSNu1EC7mJylr
GnSA259Cg/flVTCPnlUKHGTsJJ/J30fMg4tzDOUrXxLBSl2v4VyIPczeSjvA
n9oCh5eq7Vq2TcJ/8fyFovnVIDH9ZI0skg3fAqKtfqe14/XQEw+65Wvhz8m5
ljG1Aoy5zO+zV6IdT6XMNqU/CMII/y3BxSuV+PZtpFR1fycmcF8g7r1IxL5T
lrdzNrj0ZrB12s8aMhbE2Jn27huCnaOldYKEMnhErg/g2F6G5yXY1LtJdBSV
3bMUUZiE0paD8r09o5AvcbHWrPIb/s3aaz1d5QufxrPMcrob0Pqs2kPmASKo
yzL7x35oBV9mmyve8SR8pNxnX8TUhx9erarU/m3FpO7OC8L+cXhMbcK8/Xg3
2te8ediRWwpJGqS2InIbAse2+junO5HMYm+sllmHc7fIYzm/yRB2/x759kwL
6LM2ysimkfHrIf/7u2VGMPAW4X75Rj7U0vYNn309DV8qZ8NO/O0FX/1fd7+z
1+HuXUazJ4RT4NLqQdue0F7k3lqx5RoxBs84RQqqRQzgf1j92SO1GbUbTLm/
U9NR2u7toROyFXhLwVDy8HIVjHStvD3+ogNs7pJzRKNb0EM8hKhsUghBL0c1
3f/UQM4+XsOgiFxUeazf8oW3Z+M9Z8xODNbCftFcLtGCfAjaVR8Qq+YGJzeN
hvfIpkBr881VjU0x8OSEQ4FSchvIcbg7tpeVQz9VtHxhVwJs0ZV/u/VSJZRQ
TXnJTbU4s1n9inxTMX5fcw/k5qhFa55fYv4GCEPUHLUeRhLYnOE87rgpDEQP
1xq+/d6PZqG5y1vYh/HSkfPMT3a/RsNL43yNpiTYnmHwZDB7CF0Jro33leoh
zt9fdXmDG15/2DMRey4X0haa9hw/Vw8xXoEnhI0pUPFLZluoFhH6rrK3PHHr
xh8L11asDpKgP/NgUXTSEGTU7Xx1d44MMje+BzWLjW94stPCTDEJhydMny4w
uKPnl8K9j6gNYJojtrvYvgBytUmVS6QAtJxbfbndgAi/0Jpz8NA0tu8SDGsz
HYewqCfXtS50wvx1NacmSgOm/32S48xXBZ+o49veKBFwWt7NJ8lso3+9P7B+
fes0cl2SXNPucgD9lp1n01vbcO5gklT/vSRY5uisNjwaDQx+bQeo24vRf+l5
AymlEvu2RFv3PKlDHQNhr0eLrZirc6b7ZCQR2NKqxi4T++Dsuu/O38c+gpz3
8rJKfDauposU/1HLR4mOC6cWtSjAS3FIEv1diCdfd6VHtXRAxTH69KoFDXlE
Us7uUR0FpQmrQ/QbLRuex6rK27KRs28qpMLvnfDQUPRNQ1o+2kS9uP3AuBLH
dGQyCBwb+Yn8x2Qs34rR3YK3LKcHoFC/x0qmh448n2PyLs2lwt0VzqQwNyLO
f42/8WimBAO47dhjTVvgX66ww9+rjRB2feyz84Z/Pzzqnqi04Xk1a8dS7WRq
UIZ52x2JZkdcX732lmRYD3oPW5avGGxw7tTPBWfW11DY9FPh8AMiSnkbatYV
9KP5ofXdGVcbMK0528yWPoTPc66LcDT04eOnn7iI92pByuZsRWpBCAZanfK6
3N8KAnYaGVd7e0AiU23p9r04oM5JsWv97kT/L2t1oibJGP9ePsN5oQtPxk73
CeuEI2z3W2XQr8dI7XvTB6AfsnjDTxQEU+FQgdnveO0u0JFR1SnSKQDpccF9
zybbQSrChsORlonMY40lJ6924vzvfRFifl8ggZ0efS6vGn0W/UKSInMhUzH0
6cVcOpTpfyi429WCQaqblRw1EJVjQZTFuBAYu6vnSGn98KDkv3cfl7vB6pjZ
pQwyHWSsRM8RDLvhmsy/qzR6HnCPmS4QWD9hkRmfiw5PDLhfvRntyUyHJV+9
t4obuXmVNhtHGmzHR1MXF/pcCRCanJlrVjeCSVqX2scyO/Fk8Ax9YU84xrJ6
BPe6LqKae0Ua0xN7+Mr8L7fQtx1tyf2nvHu7sGXaOtpGrw3aSadbWzQRFQvK
ZuvU4lFQw9xUmVyFXltziWw/siGfyq56Up6KxWdpirKDX0FyhxbLIx06TN5Y
Taka7oCpLwLdXu4IjVu+SQm8bIRgDbNplwIfvL3Dqjb2Vy9krd742ipVAVmH
dW7ldwyCv46B68WBBJD96iRUc3IAzj5zLxCLzoHf7M3eNf5DKB5xTDBnvhuf
Da9AOW8/VCbKjuacygGbVLLdILEULi8PE+256uDvZYJTdFAvGBH9rxcAETvd
po+qn+uFP1/3y2rW1SN5Zsr9lu8sCnPLv4+IH8K5n5c5jk4OIasCS38EUxQU
WzoRSGY0iGfso0y4V4K1ioKk6ToBd/JOllgytUBpob3ttqw21CCwh5QpNwDL
hYtFcdAGq875mbn2TRgUrMsecqANno9ZEEiM9VgZpl7BwFCENz2eT3J35CG3
+3RWZns71DWwJV+/0AChDLyyW5jJ8MBS2CN1bQDeRVTkUOWSYW3n89JMzR7w
8tIlclq2w2zlLqulm1XYrxQunbrWClzXDdZ5n/XDc6mHdz0aSRh9aF73ljMZ
7YZnHJq4qVA5FdzeNJgIHH7ntnLnEKCzYzDETLMNT5l+Sb/HUAXbnnIYXe4j
wqqUfNKW5zSQW45akRvoxMWzdykyLQ0IPQs6M2skUO02GFq8HocuW4VKx85V
Yoiec4JSMQm+nfi8+2FDE+4m2EdEuA/DbH5JWtaObjzx6+eS62868P+t+lMr
XIWfXjy6c0J2CC1Pu1XuUM+HrduY+1r8cvHgxytGsVQq7Lsd0/y9h4qv4pZF
RqS8kdnlwKdksWp8KcUXMjdXhbVR70K/F9dAtbOwU5B/KwpY5whue9EKPBLK
rPSOOlBV1i079iEPvD+wtD3LaoOBth8Fn9b6cE3RjDznRIV1iUt6pPJB+LTA
6E95WwBc/kwfjHZTQPLmlkvKt3ugcOdiMTGbhjRdEcraRDtMxortMDSvA3+v
v0UGPNUwYR5ux+/RAwqbvEMLL+SChQEpKbQ5B2LE5QivO9txxHPInx7dimsC
n93C7yQgW0fm4qHSRgz25p7mUqGCTidn1cCVIjz1TnHTwLUiXBf75FvES0Ee
+XN+6nJEHIsk8M2kNsC4+ecl9ckq9GCxfu8g0w0xHnvJgUPDMMl99xHj4R6w
MZ7LCjZox8nAntbxeTqeZSU+GzbuAF2BgEdpRaVgIqTaR7jZhA97BfZpcQ1A
1Pdnab2nRzDWhSDKsGkMo+699aiq7ESRds1XCssIlVe4X0pP9aKYPZS8yWgD
r1MOP+Rz+4HjPJ1BkUbFcgf5zPPv+/DWXzc5ixgajBk94N1DbgcVNzPHw9ok
MPjb9eNdVD1kumNBMlsh6NovBWx7mIA7zlvzZTl2Yn3LlgcsTzuArntt4G5q
BUx88Zot3dwDN/plbhGEnIBe8/t8+akGkN2c6Sj+ux2elVP59U07kP/G4XcG
C4OQ/lk1Eh6G4/38px0tJhR03MtxoS2kDZZmz0ufed2G+0pt4662dAMNd3kz
+yWBsLZJzB7tDtRfb31vQZnAw9xJmXGZ+XCaKHfE+Aqi/6261takYDz3+XSD
lisJunOe3mHlIiOLnWNxMWbg06OWx1gKqeha3x+aVYJwKcTp0jGFbzgYxRj+
dFcrxKBp7WwtDY02wmakVIAuX2ctCjOzIaOC3J+4Yxwfyw+fJR+bRKPgzG9r
0RQMSsCdnhE1+LhLZ+W/mGrIfSU90vKhBUanz4QtSpCQR5G1/5rLOEa55kWx
Wn7FC+u2Gf89pMDvGb90HqZMUBA7c7juKB1YI3l9404Pgb/5jNrwk2y8bf1h
epv3CFqL/eEfu07BGN+o+sIFKrJYvvsqUT0MT53PBaTepcE1n4pjfReykO3f
scn2e00Qy/bEmfK4GeTcjxga/qqF0eAz8QUBnbCHfj9t/nEtOrWUHh861Q/9
suXEdrVxrFZJXaUsd0A8PUBA0aYGv8dFhYBkB5Zs4Wmp+tmI37/0KR/3zMAl
47gn8wN28O8DKfuSegKkWPT50rs6sD1UvUn9aTf0WKWo6ycV4Pys+a69Vt0b
HNkoVFdaB+4EB3MLSwqk8oBjsBAFxSDq6ljlEOxizfgVZtcAJ67fty1vtcCv
RP/A3j1duF0VxyY3lcFQzte3j08X4OmQf9ut8ijQ3Mnx7A9HAWrVlPYQ91Ex
Nbj5gX1lNRx+E6GaOENCHdNeZn/pWvzvtCnzIuktDOpud289TkDC8YfPiZmj
yC9cWridoxSuRx98Sp8gQpPAojKbxDBetVsrcbo/jK07M3m+nSoAk+ZIQ5lL
JAi7oOFBsuvAByfeMFS50FB4dmhpRKEKDiuHGLY/KMQn3LU81xvSsMNOay33
AQ1vpKS697vWoqb+18mO81Tk20+mRXH1QevjFx7W7tGo2/ibSUu9HUcDj9+I
TqPh8XKVTE3ZbvjYLV4rMj+KFacrL7073gHodJ/ht9EwFN8lqMQTuvDjyoXs
1Npm7DHeo2fWOQAgcGqH5N4P6KLY99BWasPvVHwe3pJrhp5sXlvGKhrWTIv+
3f6SAkucD80XvHrx7bP4Zt6+Lhg1+N59lCcHh7bFp+vVV2K5iGTQAdNO+Bkk
KMsukwjsW6VubFKmwMfkfUF24d1we6bDYOF0Hu5r2xR9zb8ITIbCctQmO/AN
+S9nJ8MQljQ8ra5lq8bolmfH8+7X4n2tmduFGmQYutLe0cHRCbG/RZ6xLH+C
3qP5Lx8+TkKzhHP7lfRK0UNtVNP78gAaMJ15ZfUoFL9QO82qROLw0Nao1Wsi
NNwSFv+SUk2DI488LRru9SDPx0kZb6Z2fPUmWNrkdjnWu1byvgysRPpdCyzc
3AlieZyXfOo/o4boqwOK3nXY+YuslfaqBoubr1wpiCZi5U9es6qZIhxjin39
KG0E/2rpOHmbN6JRPfOVuLQpMExcvzo62ID7Yke8PZL7QY9r8GWoVRcMzDy8
/myjX6uLFhu7uvWCH+NihmECFetG33Vl2FKAI+e5w0vfUTzpMLzEXNKMXAF/
J55zdcKC61XTTazN+KunkUtLlwoF7uLes6ZUEIA4o3X1XkDC+u1tA9MgYnXF
tuYZCRjEXwzJH6QDT6756E+3Afi7eC1ujJGErB6/bM6UluL+LcRv0lsn4bOu
7Zje/QWQEva8ny0SBH8VhRIUwtuwioPEY8E6h8v6v8MrFnKhZqK40WJrF3wj
l8nxPyTAre5qJqN2EuxxSMzo+fkJrH8xMHLE96Kxouc/77fteLulzqBNJhUD
9n4SedxFhOr66KuBk3T8RzwtFnW5FWu3btuZljuCmx8nGG+J7IT10hPm2naD
uFnoNWWnMwWjTHf86/etR+mVPa1qpjQUc2HJlUwhgRTbPiHzo4lQdKXhesBO
a/hJ8nTafmoIDCoObRbPCsZCDsuLigt0fKNsPzU/XAxxF8Yz7m0eALbGyLTU
B3VwuXn2GM9hKh50m1VvVI5Fvc7dT16/7cSsc6m85ndJYHJ+8YG+TDgwyh8N
ENxcgn2loqt3lCoh/sb30NELH/Cd5rCQ14tmaH1SYW8r1A46txkDbdJKQEc1
RaO8kIx7PD731pV1QGelSbIDaxJwi3YwZBo2IlVguL+HmQI1hYYldtebkXu3
n+CveSpKqz88fHJ2CFk+Mzg+T6cCq43R576JTmTUCkyuuk/GlzuOOHNO1WFI
5la3fP9K2Dp+VM3dLREvdZLkIhprofwureReRw3wklT8o9x7kGx9ykz6fC2E
yjsqzjr9h7s6qujrlek4e/gnU871QlAQtY4LWWxCjgir4oSN75XL0xsb3LlR
J5KzslubGsDm5nxBl95HSKxKaWEz64dTjLGXI7KzYVc5NSnySA1QXqyxEzPz
gLpO37+JjQpVt48xlJGmUPlStEcWbytsrtjxdM1/CBx5FQkTZ+j4ehfnttqk
fOR9eWFL64ch1M2/YAR69SiwouD43HkI410YeONCIqDlY6pgQPcQnpLst1zd
4AJRxkANfQ4XPLrp+XSmmC9cGwzboXOlDT/dqfnPtLMRiWySPx2eJ4B8sKXT
Oc0UrHkmflTx/AA83vvqXMKtRtw1K5lxZ70F/AxZargf9sIVgwKPmzlN+Iar
Zerz5lIUft2rfIg8Aa0SCUJcJk2gJOK8A4eqwNhb7+DMWCUQMuXqBey6gehZ
+9xnfxq62GeMFvygwqYSQxUB5jI8tcf9ZWtPHXB+XN0cdbsZVnI/X01+0o3E
Rk2rTWNdOLS4d7/HjQLQPzM6pHGnGTSspOXPDBTANym5J4JNhcB1VFfl/uZP
KCtb+u3j8Xb0vylVwmZVC2O/cuVPzVPhSvxIGJN4ITR5GF67wENGswIOf/tI
MrjxUf+s/hoFMqPoarFdOez8y3rXeHcs+DLQXQqX6HgsdyVguZOIgr07GzxZ
a+G9fX3s7xd1+EFD5c3efBqm9SyLG6hUAt2kRrk3iwA/BqrY12aHsVDvxhMn
7TlkiOfn2rvhJZL3p5JZT1Bx4t6BMiGT5xs8J+XD+2wAKk9XV3ewtQIDH43h
UlUAmJEv3ww9ngQBWX5um9OGgG158jbzznYMvp+aNX9gI4dXNSsEayhAGeHe
6TpRg1is8Ib4sx4dDjn9Yu9rgcO3KPLz7sm47fJaxedLhfDO6qqJjHUrRJz1
zTrBRMWYbmpp6sUKHH5Srv38ZSVwW6RX8mMbyAlEPx15PIjNUuf0Srl6QcT7
7wd0bwH0OaVZI9IJMr9T68v8GkDpUMuW+AEyTnNzBb/Qy0VnN8cLOqNkfCgz
kxFK6MRoXeuPZ7/S4XBc5d2qwm5omZe2fjZQAgKzohH3tUfxg2hFHttCIn6z
NVcWcaaBV3z/g7/xueD8+HR2VR0NP5xCIx/7IfhhkyKq7VMPvTtv2Sp/IUJc
v+iIz48BsGhVHJ6P6YLD6Zp+UxXjaLayWTrbqRfri4qS/lIKwYkp6LmeJxXP
ucnyDbhl414J/seyebXgI16o/Wi5AcNeEU83n6WhnyG66MQUQNb+YwxLP5rh
sumjXDuREexwF382spcMdnev/7dLrQt287x2YtBvwSvN0PngQxKqvpZOmexr
wLWBylE+lSnYeTZpUbpoFDjvTu7+s0rBD0bj45ll+XBP+x1hZ8owHk8LMbss
lY92ITeYvlLqIV7ozJFoZRo+yu9RtHgwCmJljz+pstdiSjZRmpWrEnh+iOut
y1AwMMss9/KheHjzZvh4ddsMrhUlbz18oxMjminrZrbdOBce/Pbanlp8safc
1DixElYc6oJduGloyPiOmHiWAr9q/wbUvJoGxvnF60cjqZjC6FHAEE1D0yrB
HZcaWyGnmkWxZDEbi2Y8alfehQDVVUtBS7kG6048qNrj0ABbmiUmJjcvwiDn
75e3lKrB6Lao4AdVCjoccD6tod4Cx2+e/37AnAL656e0rLnJWFw3FeSr4gN7
pOO+XX9ChrX4b6ZXOBPA3eOq1pstI3hyhTD+E9pRXsiHMcyUjj/elFReoSBK
BMu+KOhtx8vkmdMh4kScCgtQhAv5MNSmcM/3SS3YXLzaFFLZgPvL+W7bdNei
1s9nr8XjN3gxStDe0IwGI5SZ6By7Dd+9+KCAk88V/Tj/Lignz4Ps7sLjpsJd
IE70cuMaRVA07Lk6SSlDsXrxmRaohJ15vju1XrXj0Ytrxx0zKfDTS3/W5E4T
7NWevmqt1Yf8RRqKzsfioDk63EziKR1Hvnyd7zxfBiUaAzya4W0bvl54SCyz
DQ4SxrIKqprQUlBGTp2Uhbllx6iT5X14Zce9I8f3l8LW1Itfku9N4IeAeR2C
ajt6BngZaLjXor/Sx95VYhS4XHmYWEYiQfK0xdUQzMNjmmbaPKWJYH7oQe2n
v9Ug/1+26xM1Ciwc+Na5bDCNL4vPSyw00uB+lW27T0gXqiQFPvdlCAYlkxvh
sRteHFaY7fTvRCNGf5rbuXutG6k7ecY8kuhwqG/2k+ECGSgR45wPmiuxjOGv
sQgLCZzveCiw/zcMfV9oDp5xNfhxYVrdqroItLLN01qH0+BTpWqMk2Q/Rvg6
a0zta8eT4QNl98N60SDQ5if9ehOwJX2lmpkNwMiVxF7d0UGUeDHNeeVrGlRn
37PasxIMhYHk/KfeSRteNHDs1flSHPrRdfJkphcKfzxkdqC/Ei+4i3vdaq0D
bYOS40UZlUBb1zzNSBrFS+GKRbSD3ZjINT3rwZOGFN82pdTd9WClcHbNI7IV
ts+fF+Hq7kDxu//6czZR8arQG5HivGwoabt4xeWwDhx6I3JG2zQBXvgF7PPe
R8QsnxTpg8NUNDPcur3v3iD0ceU5BNe8RamV2FeVmlWgdfPIUNjMAOpfhtoU
uTrQqWSjJOgOwnO5ipOq2jFo9y3VRPZCBgZ4tOe47R6Cz7GSkjxJPVDKsrz3
wP46OD3/PJNzsAmOzmdInl8cxRvOO6iz/OXIHdTTIGzWj96JYudD3emQwddc
u90mHPcP/X34lbUZPvK8u3XvYh2yfN/HEz9SiHZOL2fdGfJAY+bog4P8OfhB
/plFe2oybFeo3r8nuxPcaaQYlW31qOEV7EQw+gzdAjfpF+/kAMxvXSl+RkMb
x4u4cNoN2SUUS2jZJWBqUiRaJjCIRr273hL9OjCawPa8WKIVOD/p8aaGVCHx
JNNSPTkPdxtcisaJRHw6Jubzfd0E+CbC7ERUiECuV/Yl9HdgqGq03l3jWFQ6
GRTOAYVwzf202iHBGnzIX8JEHi2FP3zZ/qS39bjX1sPjmmouLoaY8pYo0lDT
n1B0Lr0GlF3LFUw4aajgLREf3T4AQfsJ9hW6ZNg0lVkWHL3BaRoa1rlHevG4
Mt85ot0G99qrWS7FksBf9KyHzMowMq+OSX6/QwMmZs/py1c64IsR9aX771og
vO7h67Wshy81lq3/PaPi2YKrs2vvS1GH6JJUa9gJ5eHkU/yxA5B8l2nHl9ER
6Fro8jVTTMAl1r3jeWMjqP+FMVPvWDXuli8XZSG0g74ox4Gjk53AxDDfmuyX
Bqz5s5GDL8bw9nLTcNAADdkL4i1dthJg5oVueVRPLfx86n7001EC1g79yEm8
RgfbLbHmn1/QYLBL3nRv+Ec4Mav10myqCff7K8ox3W4EQ3aFrtmXNDSeeE1g
luuABb589pWsz1h1W/iwVhYJyKXivLb2rfiK7jW2fpEMd7iFgmXd47Bf1PRs
xs5WvOO47/wFwxr00v8voD45G81lew2C3Edgz/YBEZ6FDux/xqYksrsYt5vf
fMW10QeIpnEL0umdYHiEuj/gTSPefgAj3wUQI8Xm/rj4dwLt0Zm7C55UMNZs
Fs3sbkA+7eGnHXIRMCikx6IcVgdqFurGr8yG4S7hRJKJphd+Ys7lxPdl6PXf
0tGykkB4NGQrvmRPAtlGkxtPX0zg8Wv7te1eNsOz4ZoldaNEDL1A8tGjkvGo
tXxonV4/zuunOwQ+zIVdQs+L/a6ToVPRxfDe80moYHcyVttXg+wagb3bPhfA
5kHRDD6/cTxs5b3/rWwaUpXDoxZqkkFwwPT3ikwavpU8UrLfowrlr7ef7wgi
gkD+kMK79+0Aj+t52esJGMNy+IpbWyZ8l/sbnVVWCpU+ghG3X/ajvvr9WXb5
PLBiGzZ2DRhCHn9z2xyzWsx9c6/4YEYzpKfWvrI4jNjttV5vcXaDtwRfvH8z
WwQcYcza9a9aIKSxPS7IrQDHxtWEmmIJ8ExhyYrv4wQGeu4+61NKg+Ku67Zv
c+ho9zNWzUA5B8RkAu982l0AUuFfuxoNGtCXeEFJNL8OnIIlPZpPV4Gq08zL
Fs1gcA1VvXOFko1Gtyq2EaJ7kJlN7s8Rrx4w0U352KhXA2lVdU9lyt4Bu5Ei
a39CP+6cGXvjcYoGanemGBmYiVj+ob5Hb9cIvFf9LKx+mIz7FZ9+dW2sRpF/
E4LWT0h4vmbgS04+GXxu6pqntgag/9553fYzOfBdSCyUcIsOT9N/Jgrw1cLM
4I+l7kMtmEY7fZNu0QbTf684vrtQCAX1Rl/W3wzh0eQrY4O+JHB9dzN9Uq4C
5spOTzXX5OH22m8Z9tadKM/NSwytGsDuLS8Nst/FgNa8qZJZERXNdxs4ej2i
wF/bE4K8nwrxrbSi9zbOKPSMfP8y7iYFU1h2m3+DZhxXGNsUOXoXFecs/4xs
LgGhdQLpZ4A/PHks4m75uQgfaBiYHxShQ5Su5JW2IBLartsofrPPxm8Jf655
uqdC3OLZldy4dqh3Khj4lUeCDwHrvXKKHzBFy1ikIWAMGF1oLRQLIpbku4nX
S1BB6JtCguwrOrBdi3rOl9CEMcOkhAK+cejbefjc9xoq+uyaydbuGIKliwa9
Qf5E9DDIZ/1+oAMZ+yPtFS+2o2lp8FPLtF54nnX+k3sCDR48eeazJtaA6vY6
S+9aqrEqXYby/a08OHdsOsA4PgSrutscSGMdsLk3bXAJGrG7f1L64792rK9Q
D4pN80Ut/vt9ChJNYD6Z1Xt8g7O9zpwbGTbuxZW9oiI6b6qh4KDgYqtQLL7p
W+R8md0INOF/73WF6Bhee/l8E28zTr6tqdgkmIcfuU3iLM0JaLBCPCx6IRLp
PMW57b39QGsq9mrUJgJ/sNwvrmoK/A/4T0mW
     "],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.913392384428406*^9, 3.91339369652736*^9, 
  3.913393732083776*^9, 3.913394410782865*^9, 3.9134732896346407`*^9, 
  3.913475267317169*^9, 3.913554264354388*^9, 3.913556220257312*^9, 
  3.9137265318446207`*^9, 3.913726689176271*^9, 3.9137271813702393`*^9, 
  3.913727233973132*^9, 3.91372730162633*^9, 3.913727398610985*^9, 
  3.913737724699085*^9, 3.913738397216159*^9, 3.913738517193323*^9, 
  3.913741777125329*^9, 3.915806377180964*^9, 3.915806846356555*^9, 
  3.9158068997493343`*^9, 3.915807627637168*^9, 3.9158082947138042`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"0d6d08bb-769a-47c3-9904-2d1267246837"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"dei", "/", "dgamma"}], "*)"}]], "Input",
 CellChangeTimes->{{3.91373780145113*^9, 3.913737868600988*^9}, {
  3.913737912772257*^9, 3.913737925048787*^9}, {3.915809785026321*^9, 
  3.9158097860395327`*^9}},ExpressionUUID->"41b3d4fb-9436-46a8-ad75-\
2bbbead72d04"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "[", 
  RowBox[{
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"10", ",", "1"}], "]"}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"1", ";;", "100"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.913731331104395*^9, 3.913731368428273*^9}, {
  3.9137314577727623`*^9, 3.913731465431787*^9}, {3.915806414229114*^9, 
  3.915806414404703*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"ce6226ac-3155-49e6-909b-f738ca08cc93"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.300374957567192`", ",", 
   RowBox[{"-", "1.254499462846283`"}], ",", "0.42867487839538243`", ",", 
   "8.151427158951329`", ",", "0.09366750592058688`", ",", 
   "7.683240784543074`", ",", "11.095595708981707`", ",", 
   RowBox[{"-", "6.8098328471974705`"}], ",", "0.12728776670692996`", ",", 
   "0.12461323464896201`", ",", 
   RowBox[{"-", "1.1842209007573758`"}], ",", "3.086099383793668`", ",", 
   "2.576678403275121`", ",", "0.7030315193042922`", ",", 
   "1.9465628748865835`", ",", "1.8899377204772756`", ",", 
   "4.791979497821025`", ",", "0.6956417012752737`", ",", 
   RowBox[{"-", "0.5037390984550295`"}], ",", "5.793341728308391`", ",", 
   RowBox[{"-", "0.9671684542177332`"}], ",", "6.94804207543029`", ",", 
   RowBox[{"-", "2.1348879211071274`"}], ",", "7.464981832147669`", ",", 
   RowBox[{"-", "0.5480579437814213`"}], ",", 
   RowBox[{"-", "4.666436359786869`"}], ",", 
   RowBox[{"-", "2.399148306796742`"}], ",", "2.5950625799192633`", ",", 
   RowBox[{"-", "6.572253537377312`"}], ",", "6.505646939818771`", ",", 
   "5.578911960732862`", ",", "4.732427175240261`", ",", 
   RowBox[{"-", "3.187060857833374`"}], ",", 
   RowBox[{"-", "1.045876104326752`"}], ",", "4.5319580875271`", ",", 
   "2.916041271654016`", ",", 
   RowBox[{"-", "0.442000940959843`"}], ",", "3.4593265959213118`", ",", 
   RowBox[{"-", "2.5628069488569474`"}], ",", "5.705563136715886`", ",", 
   RowBox[{"-", "1.9193094159687827`"}], ",", "7.071673799784755`", ",", 
   "0.10506489250136605`", ",", 
   RowBox[{"-", "6.416967918023518`"}], ",", 
   RowBox[{"-", "2.562740229308296`"}], ",", "7.055207608618568`", ",", 
   "1.765667054856996`", ",", 
   RowBox[{"-", "4.201933719563136`"}], ",", 
   RowBox[{"-", "1.1540769748636737`"}], ",", 
   RowBox[{"-", "1.4272313500811817`"}], ",", "0.14196965484388757`", ",", 
   "1.0644552987494418`", ",", "1.8851716890377266`", ",", 
   RowBox[{"-", "4.502436912438157`"}], ",", "2.836013771397562`", ",", 
   "1.9662366972494127`", ",", 
   RowBox[{"-", "4.018863327761053`"}], ",", 
   RowBox[{"-", "0.5422403982073227`"}], ",", "1.7899132573449412`", ",", 
   "3.600816618916517`", ",", "1.7750423876210737`", ",", 
   "9.171451241441378`", ",", 
   RowBox[{"-", "5.121493942288231`"}], ",", "0.5681466675856284`", ",", 
   "1.316866836003241`", ",", "0.09975895622893896`", ",", 
   RowBox[{"-", "2.2076014289371098`"}], ",", 
   RowBox[{"-", "1.1845166750486098`"}], ",", "3.3502205725722156`", ",", 
   RowBox[{"-", "4.976267692151515`"}], ",", "5.487985250568851`", ",", 
   "0.05191679463990706`", ",", "9.540357951395194`", ",", 
   "0.303526160949095`", ",", 
   RowBox[{"-", "0.03807485764443009`"}], ",", "0.2560002204658778`", ",", 
   "11.515283773993575`", ",", "0.16567074429562126`", ",", 
   RowBox[{"-", "2.3658409369489553`"}], ",", 
   RowBox[{"-", "5.002913951039563`"}], ",", 
   RowBox[{"-", "5.910422894553086`"}], ",", 
   RowBox[{"-", "2.9564532771043375`"}], ",", 
   RowBox[{"-", "1.5456682990871076`"}], ",", "2.0851913417392867`", ",", 
   RowBox[{"-", "3.7412693617126767`"}], ",", 
   RowBox[{"-", "0.43825051164678686`"}], ",", 
   RowBox[{"-", "1.4802004843138032`"}], ",", "0.17180156367434976`", ",", 
   RowBox[{"-", "3.358812645365152`"}], ",", 
   RowBox[{"-", "0.575385825331715`"}], ",", 
   RowBox[{"-", "1.3525855084198821`"}], ",", "1.2905884622267019`", ",", 
   RowBox[{"-", "1.2962800833802812`"}], ",", "2.7119678709094153`", ",", 
   RowBox[{"-", "0.1220335902848751`"}], ",", "10.176951688732014`", ",", 
   RowBox[{"-", "0.9129442941500862`"}], ",", "3.163245847260751`", ",", 
   RowBox[{"-", "2.56265057768723`"}], ",", "11.461778991582142`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.9137313402083197`*^9, 3.913731368768064*^9}, 
   3.913731465882408*^9, 3.9137384916884937`*^9, 3.913741778434853*^9, 
   3.9158064224219227`*^9, 3.915806846484788*^9, 3.915806912032674*^9, 
   3.915807627842038*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"ad7fcc75-93b6-4fad-a634-feb5ad6f0cf4"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"d2Edgammadgamma", " ", "is", " ", 
   RowBox[{"d2ei", "/", 
    RowBox[{"dgamma", "^", "2"}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.9137378417538443`*^9, 3.913737856050136*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"d3573edb-c5d5-44d9-8a10-fd10f3d67305"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "[", 
  RowBox[{
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"4", ",", "1"}], "]"}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"1", ";;", "100"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.913473301149287*^9, 3.913473329552211*^9}, {
   3.913737746508019*^9, 3.913737777229496*^9}, 3.915806442512876*^9},
 CellLabel->"In[27]:=",ExpressionUUID->"702822dd-a7fa-4f72-ad3b-0b6bf390baec"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7.147422005012197`", ",", 
   RowBox[{"-", "1.1973830780401176`"}], ",", "2.5026485001070897`", ",", 
   "3.4110672501002903`", ",", "0.975004415454723`", ",", 
   "6.940219890852753`", ",", 
   RowBox[{"-", "0.3801756082410277`"}], ",", 
   RowBox[{"-", "6.849317486925923`"}], ",", 
   RowBox[{"-", "1.5658361597922488`"}], ",", "0.31206263500543385`", ",", 
   RowBox[{"-", "2.9891936033664592`"}], ",", "2.9312327331273496`", ",", 
   "1.4603848694303416`", ",", "0.32581074982226815`", ",", 
   "6.497518968500734`", ",", "6.077213029875002`", ",", "4.386266448859202`",
    ",", "7.549859233092366`", ",", "0.6395501615738571`", ",", 
   "4.571016008628518`", ",", "0.7885903643731447`", ",", 
   "1.7399553090754627`", ",", 
   RowBox[{"-", "0.12546156361675953`"}], ",", "5.3206557521145905`", ",", 
   "0.10784247581248893`", ",", 
   RowBox[{"-", "3.623637605684289`"}], ",", 
   RowBox[{"-", "4.559417832596461`"}], ",", "3.8289462922425166`", ",", 
   RowBox[{"-", "9.959816054923037`"}], ",", "6.460218915343047`", ",", 
   RowBox[{"-", "5.07293136245811`"}], ",", "5.809102141096595`", ",", 
   RowBox[{"-", "2.310846055550169`"}], ",", 
   RowBox[{"-", "0.19226975299440419`"}], ",", "4.620392344248035`", ",", 
   "3.835860524878963`", ",", "3.0489232539923705`", ",", 
   "1.9114956394376943`", ",", 
   RowBox[{"-", "6.501250081400701`"}], ",", "7.172688694011292`", ",", 
   RowBox[{"-", "3.0760039820339866`"}], ",", "0.1700709598424323`", ",", 
   RowBox[{"-", "0.6873340272256332`"}], ",", 
   RowBox[{"-", "4.647239115433118`"}], ",", 
   RowBox[{"-", "2.039733262582923`"}], ",", 
   RowBox[{"-", "1.5585441917773433`"}], ",", "1.068848286465323`", ",", 
   RowBox[{"-", "1.772099204272392`"}], ",", 
   RowBox[{"-", "0.39294655003042644`"}], ",", "0.6027294786887863`", ",", 
   "1.7695830094484213`", ",", "2.5308218549812747`", ",", 
   "4.1547624747089085`", ",", 
   RowBox[{"-", "3.0962929518250806`"}], ",", "3.480095489657944`", ",", 
   "0.9155074852070197`", ",", 
   RowBox[{"-", "5.947168297692864`"}], ",", 
   RowBox[{"-", "0.17398516620816135`"}], ",", "6.344900446083139`", ",", 
   "12.061644057116006`", ",", "0.8414674270450601`", ",", 
   "4.090706851528045`", ",", 
   RowBox[{"-", "3.000100063362937`"}], ",", "4.860718175179131`", ",", 
   "2.5174886487730186`", ",", "0.8292645170848205`", ",", 
   RowBox[{"-", "5.998910986910802`"}], ",", 
   RowBox[{"-", "0.23563477790190385`"}], ",", "4.049159273403725`", ",", 
   RowBox[{"-", "7.175228136671364`"}], ",", "4.201485693021397`", ",", 
   "0.2356418417078131`", ",", "30.04247620546554`", ",", 
   RowBox[{"-", "2.633136923602235`"}], ",", "0.4078922307769086`", ",", 
   "9.304284615347376`", ",", "3.390043439321812`", ",", 
   "0.3115821260293142`", ",", 
   RowBox[{"-", "0.6678506790302661`"}], ",", 
   RowBox[{"-", "3.7816142746060732`"}], ",", 
   RowBox[{"-", "4.145326572295389`"}], ",", 
   RowBox[{"-", "1.3701317131459065`"}], ",", 
   RowBox[{"-", "0.10378286790531122`"}], ",", "4.756348469193977`", ",", 
   RowBox[{"-", "1.7456078703812192`"}], ",", "0.18575900501659426`", ",", 
   RowBox[{"-", "2.306088706057879`"}], ",", "0.40950075016534504`", ",", 
   RowBox[{"-", "3.4278378845292043`"}], ",", 
   RowBox[{"-", "0.9525716940197894`"}], ",", 
   RowBox[{"-", "0.1786997271108084`"}], ",", "0.87087782877379`", ",", 
   "1.658705267869494`", ",", "2.3902527908717968`", ",", 
   "7.9810548067486025`", ",", "11.886365196761895`", ",", 
   RowBox[{"-", "0.25101585354678724`"}], ",", "4.3401864121356075`", ",", 
   RowBox[{"-", "0.44379084769432353`"}], ",", "34.80787768931084`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.913737754008813*^9, 3.9137377777766657`*^9}, 
   3.913738493166769*^9, 3.913741780235538*^9, 3.915806442806489*^9, 
   3.915806846509894*^9, 3.915806916674464*^9, 3.915807627867631*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"7ef1caa8-57f5-4dee-9703-c27accbf421d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"positions", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"data", "[", 
         RowBox[{"[", 
          RowBox[{"8", ",", "1"}], "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"2", "*", "i"}], "+", "1"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"data", "[", 
         RowBox[{"[", 
          RowBox[{"8", ",", "1"}], "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"2", "*", "i"}], "+", "2"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "99"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.913299871380925*^9, 3.913299954936655*^9}, {
   3.913300005203134*^9, 3.91330008464412*^9}, {3.913300154967265*^9, 
   3.913300181605715*^9}, 3.913388102078426*^9, {3.9133924177888527`*^9, 
   3.913392420356285*^9}, {3.913473338896167*^9, 3.9134733413375053`*^9}, 
   3.913737744014029*^9, {3.9158064637347317`*^9, 3.9158064797358627`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"731b91b0-0a28-42a9-9a13-4600e5c0ba50"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"num", " ", "is", " ", "a", " ", "table", " ", "of", " ", 
    RowBox[{"{", 
     RowBox[{"dEidgamma", ",", "d2Eidgammadgamma"}], "}"}], " ", "for", " ", 
    "each", " ", "cell", " ", "calculated", " ", "by", " ", "numreical", " ", 
    "derivative", " ", "with", " ", "dgamma"}], "=", "0.0001"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.913737879083346*^9, 3.9137378875707827`*^9}, {
  3.913737929377396*^9, 3.913737978614402*^9}, {3.9158091959487867`*^9, 
  3.9158092032671137`*^9}},ExpressionUUID->"71f9168c-b3b7-44c7-9337-\
5f3e93dbdc60"],

Cell[BoxData[
 RowBox[{
  RowBox[{"num", "=", 
   RowBox[{"numdericalCell", "[", 
    RowBox[{"positions", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "10"}], "}"}], ",", "0.0001", ",", "1", ",", "1", 
     ",", "1", ",", "3.80"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9158091741750402`*^9, 
  3.915809175785623*^9}},ExpressionUUID->"5f8f28a4-63c5-41cb-94db-\
65be9938c066"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"stresses", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"num", "[", 
     RowBox[{"[", 
      RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "num", "]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.913387866372389*^9, 3.9133878932600307`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"45ea11a2-3460-4acb-bcdb-80fc99ca19bb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.4254087048377597`", ",", "0.6408045655958983`", ",", 
   RowBox[{"-", "0.2607393450039866`"}], ",", 
   RowBox[{"-", "1.726938312166526`"}], ",", "0.017033484657445752`", ",", 
   RowBox[{"-", "0.06775515422052791`"}], ",", "0.5990864894878101`", ",", 
   "3.7986146689217293`", ",", "0.21520784122874836`", ",", 
   RowBox[{"-", "0.33121177042627625`"}], ",", 
   RowBox[{"-", "0.022611509826186982`"}], ",", 
   RowBox[{"-", "0.5086546305177464`"}], ",", 
   RowBox[{"-", "2.3175124676821923`"}], ",", 
   RowBox[{"-", "0.24386861722319741`"}], ",", 
   RowBox[{"-", "0.18033049116794597`"}], ",", 
   RowBox[{"-", "0.8886923644488287`"}], ",", 
   RowBox[{"-", "0.07337744680979696`"}], ",", "0.3347391288038848`", ",", 
   RowBox[{"-", "0.20065960970212793`"}], ",", 
   RowBox[{"-", "2.4660400264342464`"}], ",", 
   RowBox[{"-", "0.39915848683069743`"}], ",", "1.077795202839571`", ",", 
   "0.7810804037386432`", ",", 
   RowBox[{"-", "0.3029933485654279`"}], ",", 
   RowBox[{"-", "0.06961484163469506`"}], ",", 
   RowBox[{"-", "0.6639428407551051`"}], ",", "0.6266538335142346`", ",", 
   RowBox[{"-", "0.9591505564493508`"}], ",", 
   RowBox[{"-", "0.19291567092682982`"}], ",", 
   RowBox[{"-", "0.7956216843552077`"}], ",", "0.476607447175148`", ",", 
   "1.5676162520189552`", ",", 
   RowBox[{"-", "0.6182746448057941`"}], ",", 
   RowBox[{"-", "0.4544515258064763`"}], ",", 
   RowBox[{"-", "1.2027071851100635`"}], ",", 
   RowBox[{"-", "0.932500713708706`"}], ",", "0.3648229059762323`", ",", 
   "0.03550969988053154`", ",", "0.6048790916385327`", ",", 
   RowBox[{"-", "1.6281872674628328`"}], ",", 
   RowBox[{"-", "0.24825760526286933`"}], ",", "1.7732526345404231`", ",", 
   RowBox[{"-", "0.7810281262535246`"}], ",", 
   RowBox[{"-", "0.5628355654074824`"}], ",", "0.5071739391734886`", ",", 
   "2.2534281363340014`", ",", "0.21466361478178486`", ",", 
   RowBox[{"-", "0.1522820103005973`"}], ",", 
   RowBox[{"-", "0.08157655069312986`"}], ",", 
   RowBox[{"-", "0.4070406343847921`"}], ",", "0.03299712684284861`", ",", 
   "0.20155539556740432`", ",", 
   RowBox[{"-", "1.829974026679726`"}], ",", 
   RowBox[{"-", "0.6794008562216458`"}], ",", "0.5958900692670799`", ",", 
   "0.21705476384775713`", ",", "3.151337406999133`", ",", 
   RowBox[{"-", "0.16757064268405758`"}], ",", "0.45214410276384065`", ",", 
   "2.0611022029759507`", ",", "0.3316998378832814`", ",", 
   "0.7956706526701662`", ",", 
   RowBox[{"-", "0.24870355353368012`"}], ",", "0.6479670129016374`", ",", 
   RowBox[{"-", "0.14090437766761665`"}], ",", "0.023328800553331502`", ",", 
   "3.244869390688354`", ",", 
   RowBox[{"-", "0.0925363081100139`"}], ",", 
   RowBox[{"-", "0.5819750263474921`"}], ",", "0.3072755050192999`", ",", 
   "0.28769756904689636`", ",", "0.006580315460523976`", ",", 
   RowBox[{"-", "8.902186394195155`"}], ",", "1.9648519620218963`", ",", 
   "0.08745470018906715`", ",", "0.49805765914403066`", ",", 
   RowBox[{"-", "0.6496388644694484`"}], ",", "0.05102199084641018`", ",", 
   "0.9812083336729893`", ",", 
   RowBox[{"-", "0.04657626334059195`"}], ",", "0.437358329232751`", ",", 
   RowBox[{"-", "0.3864423232191605`"}], ",", 
   RowBox[{"-", "0.258958926820374`"}], ",", 
   RowBox[{"-", "0.8110292478798187`"}], ",", 
   RowBox[{"-", "0.03893722010595013`"}], ",", "0.3699486749453307`", ",", 
   "0.04229784690099048`", ",", "0.13861280386391617`", ",", 
   RowBox[{"-", "1.0481526078098824`"}], ",", 
   RowBox[{"-", "0.24423719215599382`"}], ",", 
   RowBox[{"-", "0.46918812867002835`"}], ",", 
   RowBox[{"-", "0.5827157615923007`"}], ",", "0.5505208531410288`", ",", 
   "0.07798439833422988`", ",", "0.06711722140020915`", ",", 
   "4.711675092989864`", ",", "0.6073544861534552`", ",", 
   "0.32902406828114183`", ",", 
   RowBox[{"-", "0.43921338361174733`"}], ",", 
   RowBox[{"-", "7.839369311790634`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9133878948750553`*^9, 3.913388178708331*^9, 
  3.913388635493882*^9, 3.9133927608463306`*^9, 3.9133944704058523`*^9, 
  3.913394534636355*^9, 3.913473436044121*^9, 3.913475310104281*^9, 
  3.91355431164083*^9, 3.9135562800001287`*^9, 3.913738025604246*^9, 
  3.9137418229732943`*^9, 3.9158065174908257`*^9, 3.915807662974203*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"c771e1b6-eee4-4def-aedc-a1a7a0c55d52"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d2e", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"num", "[", 
     RowBox[{"[", 
      RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "num", "]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9133879386283693`*^9, 3.913387941855227*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"66e4c77b-cc43-4adb-864a-40b762d722d7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7.147421665631981`", ",", 
   RowBox[{"-", "1.19738313708595`"}], ",", "2.5026486473456178`", ",", 
   "3.411065718772477`", ",", "0.9750043748063542`", ",", 
   "6.940219243745105`", ",", 
   RowBox[{"-", "0.38017544667923175`"}], ",", 
   RowBox[{"-", "6.849314582169086`"}], ",", 
   RowBox[{"-", "1.565838592121338`"}], ",", "0.3120636749009975`", ",", 
   RowBox[{"-", "2.989194469726897`"}], ",", "2.9312364979716676`", ",", 
   "1.4603850573280397`", ",", "0.32581030096068275`", ",", 
   "6.497518845183237`", ",", "6.077213149380256`", ",", "4.386264174094379`",
    ",", "7.549858971334089`", ",", "0.6395503154843496`", ",", 
   "4.571017653276499`", ",", "0.788590481803908`", ",", 
   "1.7399557350472605`", ",", 
   RowBox[{"-", "0.12546191863194167`"}], ",", "5.320654183904594`", ",", 
   "0.10784231216365292`", ",", 
   RowBox[{"-", "3.62355194738484`"}], ",", 
   RowBox[{"-", "4.5594177322527685`"}], ",", "3.828946737449712`", ",", 
   RowBox[{"-", "9.959815372440062`"}], ",", "6.460217871762097`", ",", 
   RowBox[{"-", "5.072931763550059`"}], ",", "5.809100978027004`", ",", 
   RowBox[{"-", "2.310846980435599`"}], ",", 
   RowBox[{"-", "0.19227077707739682`"}], ",", "4.620392501930581`", ",", 
   "3.8358621556877637`", ",", "3.048923850890173`", ",", 
   "1.9114944516118726`", ",", 
   RowBox[{"-", "6.5012497940664105`"}], ",", "7.172688731849064`", ",", 
   RowBox[{"-", "3.0760032410093174`"}], ",", "0.17007022456994036`", ",", 
   RowBox[{"-", "0.6873854596634033`"}], ",", 
   RowBox[{"-", "4.647240881006098`"}], ",", 
   RowBox[{"-", "2.039733731917792`"}], ",", 
   RowBox[{"-", "1.5585468027268234`"}], ",", "1.0688484097798323`", ",", 
   RowBox[{"-", "1.7720971134949082`"}], ",", 
   RowBox[{"-", "0.3929459979623573`"}], ",", "0.6027287779986068`", ",", 
   "1.7695835574649266`", ",", "2.530821846535858`", ",", "4.15476223425415`",
    ",", 
   RowBox[{"-", "3.0962902020092997`"}], ",", "3.4800949899604916`", ",", 
   "0.9155071201139009`", ",", 
   RowBox[{"-", "5.947174575027248`"}], ",", 
   RowBox[{"-", "0.17398503054932846`"}], ",", "6.344898495491691`", ",", 
   "12.061644416583306`", ",", "0.8414669627754279`", ",", 
   "4.090705707504583`", ",", 
   RowBox[{"-", "3.0000992801149096`"}], ",", "4.8607181724058535`", ",", 
   "2.51749033286508`", ",", "0.8292642475482559`", ",", 
   RowBox[{"-", "5.998911678517516`"}], ",", 
   RowBox[{"-", "0.23563624385047888`"}], ",", "4.04915962426422`", ",", 
   RowBox[{"-", "7.175225125166662`"}], ",", "4.201484382626575`", ",", 
   "0.23564181005769624`", ",", "30.04248014804034`", ",", 
   RowBox[{"-", "2.633136420016058`"}], ",", "0.4078922949402042`", ",", 
   "9.304284858194233`", ",", "3.3900452223178945`", ",", 
   "0.31158221072691283`", ",", 
   RowBox[{"-", "0.6678504527179996`"}], ",", 
   RowBox[{"-", "3.781613577835685`"}], ",", 
   RowBox[{"-", "4.145326570892394`"}], ",", 
   RowBox[{"-", "1.3701305423552412`"}], ",", 
   RowBox[{"-", "0.10378191639404122`"}], ",", "4.756348673251587`", ",", 
   RowBox[{"-", "1.7456070811050495`"}], ",", "0.18575908034001998`", ",", 
   RowBox[{"-", "2.3060891363169134`"}], ",", "0.4095004627058252`", ",", 
   RowBox[{"-", "3.4278392790909606`"}], ",", 
   RowBox[{"-", "0.9525732785897745`"}], ",", 
   RowBox[{"-", "0.17869922763757984`"}], ",", "0.8708784804412062`", ",", 
   "1.6587051690497567`", ",", "2.390252873407661`", ",", 
   "7.981055075156895`", ",", "11.886364337243549`", ",", 
   RowBox[{"-", "0.251015930263776`"}], ",", "4.3401860577718665`", ",", 
   RowBox[{"-", "0.4437905931631292`"}], ",", "34.80787640341987`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.913387943388453*^9, 3.913388195056694*^9, 
  3.913388636615613*^9, 3.913392773024061*^9, 3.9133945397033854`*^9, 
  3.913473436109914*^9, 3.91347531019162*^9, 3.913554311745113*^9, 
  3.913556280035059*^9, 3.9137380256348257`*^9, 3.9137418230133047`*^9, 
  3.9158065175390882`*^9, 3.9158076629943047`*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"d846c400-69d0-4820-b782-104dc202e47e"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.913387773067548*^9},
 CellLabel->"In[33]:=",ExpressionUUID->"917ccdbc-12c0-4464-8d48-1641d74ddfa6"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"ana", " ", "is", " ", "a", " ", "table", " ", "of", " ", 
   RowBox[{"{", 
    RowBox[{"dEidgamma", ",", "d2Eidgammadgamma"}], "}"}], " ", "for", " ", 
   "each", " ", "cell", " ", "calculated", " ", "by", " ", "analytical", " ", 
   "derivative", " ", "in", " ", "mathematica"}], "*)"}]], "Input",
 CellChangeTimes->{{3.913738033464321*^9, 3.913738046037294*^9}, 
   3.9158092185521107`*^9},ExpressionUUID->"2328c990-5d90-4764-b4cd-\
581861b9444b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ana", "=", 
   RowBox[{"AnalyticalCell", "[", 
    RowBox[{"positions", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "10"}], "}"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{"i", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "100"}], "}"}]}], "]"}], ",", "1", ",", "1", ",", 
     "1", ",", "3.80"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9133882770179253`*^9, 3.913388294425433*^9}, {
   3.913394581217819*^9, 3.913394583434482*^9}, 
   3.915808360038206*^9},ExpressionUUID->"ea8e49db-24ef-4907-9936-\
eff1c6921323"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"stressesAna", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"ana", "[", 
     RowBox[{"[", 
      RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "ana", "]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.91580836594543*^9, 3.915808371769836*^9}, {
   3.9158084222111187`*^9, 3.915808444924334*^9}, 3.915809235390304*^9},
 CellLabel->"In[32]:=",ExpressionUUID->"bdf915a4-cc71-45bc-9aab-b9e3e7a0d7dc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.425408702537339`", ",", "0.6408046048074354`", ",", 
   RowBox[{"-", "0.26073934325218695`"}], ",", 
   RowBox[{"-", "1.7269383034502948`"}], ",", "0.017033487826982774`", ",", 
   RowBox[{"-", "0.06775516345016541`"}], ",", "0.5990864950907786`", ",", 
   "3.798614696283458`", ",", "0.21520783843524072`", ",", 
   RowBox[{"-", "0.33121177329052554`"}], ",", 
   RowBox[{"-", "0.02261150933706446`"}], ",", 
   RowBox[{"-", "0.5086546346388374`"}], ",", 
   RowBox[{"-", "2.3175124707885186`"}], ",", 
   RowBox[{"-", "0.24386861442211805`"}], ",", 
   RowBox[{"-", "0.18033047712597267`"}], ",", 
   RowBox[{"-", "0.8886923177532609`"}], ",", 
   RowBox[{"-", "0.07337744529794676`"}], ",", "0.33473912406642414`", ",", 
   RowBox[{"-", "0.20065960010156675`"}], ",", 
   RowBox[{"-", "2.46603999713469`"}], ",", 
   RowBox[{"-", "0.39915848791711506`"}], ",", "1.0777951907959886`", ",", 
   "0.7810804025918948`", ",", 
   RowBox[{"-", "0.30299332829815784`"}], ",", 
   RowBox[{"-", "0.06961484183165478`"}], ",", 
   RowBox[{"-", "0.6639428262444635`"}], ",", "0.6266538337988901`", ",", 
   RowBox[{"-", "0.9591505501977884`"}], ",", 
   RowBox[{"-", "0.19291567093280193`"}], ",", 
   RowBox[{"-", "0.7956216450772344`"}], ",", "0.47660745494486`", ",", 
   "1.567616223503867`", ",", 
   RowBox[{"-", "0.6182746643714196`"}], ",", 
   RowBox[{"-", "0.45445153130157045`"}], ",", 
   RowBox[{"-", "1.2027071565886824`"}], ",", 
   RowBox[{"-", "0.9325006909820428`"}], ",", "0.3648229287801998`", ",", 
   "0.03550968824415701`", ",", "0.6048791040080292`", ",", 
   RowBox[{"-", "1.6281872487784703`"}], ",", 
   RowBox[{"-", "0.24825762189360923`"}], ",", "1.7732526229872696`", ",", 
   RowBox[{"-", "0.7810281228588014`"}], ",", 
   RowBox[{"-", "0.5628355629403394`"}], ",", "0.5071739412093574`", ",", 
   "2.2534281302902963`", ",", "0.2146636169193512`", ",", 
   RowBox[{"-", "0.15228201287190402`"}], ",", 
   RowBox[{"-", "0.08157654962251382`"}], ",", 
   RowBox[{"-", "0.4070406359035972`"}], ",", "0.03299711945971495`", ",", 
   "0.20155537377853264`", ",", 
   RowBox[{"-", "1.8299740193679712`"}], ",", 
   RowBox[{"-", "0.6794008532469373`"}], ",", "0.5958900780888037`", ",", 
   "0.2170547619751204`", ",", "3.1513374135177887`", ",", 
   RowBox[{"-", "0.1675706427290995`"}], ",", "0.4521440676943502`", ",", 
   "2.0611021213149696`", ",", "0.33169984319128965`", ",", 
   "0.7956706283574437`", ",", 
   RowBox[{"-", "0.2487035476992272`"}], ",", "0.6479669689438317`", ",", 
   RowBox[{"-", "0.14090438680879136`"}], ",", "0.023328797889645203`", ",", 
   "3.2448694126194377`", ",", 
   RowBox[{"-", "0.0925363061941269`"}], ",", 
   RowBox[{"-", "0.5819750035248159`"}], ",", "0.30727550423331973`", ",", 
   "0.28769756227432186`", ",", "0.006580311185073347`", ",", 
   RowBox[{"-", "8.902186230384501`"}], ",", "1.9648519762246188`", ",", 
   "0.08745471898284429`", ",", "0.4980575877882769`", ",", 
   RowBox[{"-", "0.6496388559033122`"}], ",", "0.0510219909626588`", ",", 
   "0.981208360129441`", ",", 
   RowBox[{"-", "0.04657626826138106`"}], ",", "0.4373583274415225`", ",", 
   RowBox[{"-", "0.3864423188057611`"}], ",", 
   RowBox[{"-", "0.25895893305888285`"}], ",", 
   RowBox[{"-", "0.8110292048703`"}], ",", 
   RowBox[{"-", "0.038937212026318946`"}], ",", "0.36994867885619787`", ",", 
   "0.04229784895705402`", ",", "0.1386128022279518`", ",", 
   RowBox[{"-", "1.0481526230757297`"}], ",", 
   RowBox[{"-", "0.24423720220054967`"}], ",", 
   RowBox[{"-", "0.4691881310658884`"}], ",", 
   RowBox[{"-", "0.582715758301644`"}], ",", "0.5505208817782232`", ",", 
   "0.07798439745586982`", ",", "0.0671173107678169`", ",", 
   "4.71167508134536`", ",", "0.607354512322398`", ",", "0.3290240525919135`",
    ",", 
   RowBox[{"-", "0.4392133858383076`"}], ",", 
   RowBox[{"-", "7.8393691407180945`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.915809237682579*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"d078b938-168d-4bd2-8dd6-b35bcb028433"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"insGAna", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"ana", "[", 
     RowBox[{"[", 
      RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "ana", "]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.915808450131178*^9, 3.915808455155155*^9}, 
   3.915809236301653*^9},
 CellLabel->"In[33]:=",ExpressionUUID->"d4c52d0c-904a-4f28-95a2-4f68ec0ccf19"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7.147422005012169`", ",", 
   RowBox[{"-", "1.1973830780402177`"}], ",", "2.5026485001069885`", ",", 
   "3.411067250099712`", ",", "0.9750044154550981`", ",", "6.94021989087079`",
    ",", 
   RowBox[{"-", "0.380175608240926`"}], ",", 
   RowBox[{"-", "6.84931748692879`"}], ",", 
   RowBox[{"-", "1.5658361597919925`"}], ",", "0.3120626350060425`", ",", 
   RowBox[{"-", "2.989193603366507`"}], ",", "2.9312327331147685`", ",", 
   "1.4603848694303454`", ",", "0.3258107498227707`", ",", 
   "6.497518968500721`", ",", "6.077213029875034`", ",", "4.386266448858997`",
    ",", "7.5498592330923815`", ",", "0.6395501615738436`", ",", 
   "4.571016008628737`", ",", "0.7885903643729879`", ",", 
   "1.7399553090755224`", ",", 
   RowBox[{"-", "0.1254615636165548`"}], ",", "5.320655752114635`", ",", 
   "0.1078424758123836`", ",", 
   RowBox[{"-", "3.623637605690299`"}], ",", 
   RowBox[{"-", "4.559417832596376`"}], ",", "3.828946292242459`", ",", 
   RowBox[{"-", "9.959816054920257`"}], ",", "6.460218915340844`", ",", 
   RowBox[{"-", "5.072931362457222`"}], ",", "5.8091021410974175`", ",", 
   RowBox[{"-", "2.310846055544154`"}], ",", 
   RowBox[{"-", "0.19226975299499838`"}], ",", "4.620392344248053`", ",", 
   "3.835860524879044`", ",", "3.0489232539930975`", ",", 
   "1.9114956394382339`", ",", 
   RowBox[{"-", "6.501250081400571`"}], ",", "7.1726886940109065`", ",", 
   RowBox[{"-", "3.0760039820323755`"}], ",", "0.17007095984226472`", ",", 
   RowBox[{"-", "0.6873340272300079`"}], ",", 
   RowBox[{"-", "4.6472391154340436`"}], ",", 
   RowBox[{"-", "2.0397332625843174`"}], ",", 
   RowBox[{"-", "1.5585441917770169`"}], ",", "1.0688482864652946`", ",", 
   RowBox[{"-", "1.7720992042703019`"}], ",", 
   RowBox[{"-", "0.39294655003025847`"}], ",", "0.6027294786888273`", ",", 
   "1.769583009448335`", ",", "2.5308218549813573`", ",", 
   "4.154762474709826`", ",", 
   RowBox[{"-", "3.096292951822898`"}], ",", "3.4800954896598757`", ",", 
   "0.9155074852069287`", ",", 
   RowBox[{"-", "5.947168297730212`"}], ",", 
   RowBox[{"-", "0.17398516620811116`"}], ",", "6.344900446081327`", ",", 
   "12.061644057116242`", ",", "0.8414674270412288`", ",", 
   "4.090706851528251`", ",", 
   RowBox[{"-", "3.00010006336284`"}], ",", "4.860718175178976`", ",", 
   "2.5174886487729213`", ",", "0.8292645170849591`", ",", 
   RowBox[{"-", "5.998910986904253`"}], ",", 
   RowBox[{"-", "0.23563477790236087`"}], ",", "4.049159273403655`", ",", 
   RowBox[{"-", "7.17522813667127`"}], ",", "4.201485693021531`", ",", 
   "0.23564184170779856`", ",", "30.042476205465142`", ",", 
   RowBox[{"-", "2.6331369236025814`"}], ",", "0.40789223077690684`", ",", 
   "9.304284615345331`", ",", "3.390043439321726`", ",", 
   "0.31158212602887114`", ",", 
   RowBox[{"-", "0.6678506790308738`"}], ",", 
   RowBox[{"-", "3.7816142746623096`"}], ",", 
   RowBox[{"-", "4.145326572286836`"}], ",", 
   RowBox[{"-", "1.3701317131368622`"}], ",", 
   RowBox[{"-", "0.10378286790487667`"}], ",", "4.756348469193974`", ",", 
   RowBox[{"-", "1.7456078703939166`"}], ",", "0.18575900501669107`", ",", 
   RowBox[{"-", "2.306088706058007`"}], ",", "0.40950075016546417`", ",", 
   RowBox[{"-", "3.42783788452998`"}], ",", 
   RowBox[{"-", "0.9525716940196345`"}], ",", 
   RowBox[{"-", "0.1786997271107975`"}], ",", "0.870877828773732`", ",", 
   "1.658705267869327`", ",", "2.390252790871619`", ",", "7.98105480674478`", 
   ",", "11.886365196761435`", ",", 
   RowBox[{"-", "0.251015853546833`"}], ",", "4.3401864121358384`", ",", 
   RowBox[{"-", "0.4437908476942132`"}], ",", "34.80787768931194`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.915809239466559*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"da9c7a02-0b41-44e9-88da-5264fd43b5ab"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "ana", " ", "and", " ", "num", " ", "are", " ", "consistent", " ", "with", 
   " ", "each", " ", 
   RowBox[{"other", "."}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.913738155765427*^9, 3.913738177312245*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"7a855fc2-c3ad-423f-9dd4-0a421f7519e0"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "the", " ", "first", " ", "derivatives", " ", "are", " ", "now", " ", 
    "inconsistent", " ", "with", " ", "the", " ", "Mathematica", " ", 
    "calculation"}], ",", 
   RowBox[{
   "while", " ", "the", " ", "second", " ", "derivatives", " ", "are", " ", 
    "still", " ", "consistent"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.913738259859589*^9, 3.913738329113687*^9}, 
   3.915809265063223*^9, 
   3.915809302915556*^9},ExpressionUUID->"3615a804-a658-49e1-8e40-\
4f63fdb2855a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"diffFirstD", "=", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ana", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "100"}], "}"}]}], "]"}], "-", 
   RowBox[{
    RowBox[{"Normal", "[", 
     RowBox[{"Flatten", "[", 
      RowBox[{"data", "[", 
       RowBox[{"[", "10", "]"}], "]"}], "]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "100"}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.9137382178097057`*^9, 3.913738254190037*^9, {3.913741812832902*^9, 
   3.913741819643587*^9}, {3.915808482512431*^9, 3.9158084826625223`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"658fadc1-ef3f-47c9-94a1-c6049e7586e9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "2.874966255029853`"}], ",", "1.8953040676537185`", ",", 
   RowBox[{"-", "0.6894142216475694`"}], ",", 
   RowBox[{"-", "9.878365462401623`"}], ",", 
   RowBox[{"-", "0.07663401809360411`"}], ",", 
   RowBox[{"-", "7.750995947993239`"}], ",", 
   RowBox[{"-", "10.496509213890928`"}], ",", "10.608447543480928`", ",", 
   "0.08792007172831076`", ",", 
   RowBox[{"-", "0.45582500793948755`"}], ",", "1.1616093914203114`", ",", 
   RowBox[{"-", "3.5947540184325053`"}], ",", 
   RowBox[{"-", "4.894190874063639`"}], ",", 
   RowBox[{"-", "0.9469001337264102`"}], ",", 
   RowBox[{"-", "2.1268933520125564`"}], ",", 
   RowBox[{"-", "2.7786300382305367`"}], ",", 
   RowBox[{"-", "4.865356943118972`"}], ",", 
   RowBox[{"-", "0.36090257720884955`"}], ",", "0.30307949835346276`", ",", 
   RowBox[{"-", "8.259381725443081`"}], ",", "0.5680099663006182`", ",", 
   RowBox[{"-", "5.870246884634301`"}], ",", "2.915968323699022`", ",", 
   RowBox[{"-", "7.767975160445827`"}], ",", "0.47844310194976647`", ",", 
   "4.002493533542405`", ",", "3.025802140595632`", ",", 
   RowBox[{"-", "3.5542131301170516`"}], ",", "6.37933786644451`", ",", 
   RowBox[{"-", "7.301268584896006`"}], ",", 
   RowBox[{"-", "5.102304505788002`"}], ",", 
   RowBox[{"-", "3.164810951736394`"}], ",", "2.5687861934619542`", ",", 
   "0.5914245730251815`", ",", 
   RowBox[{"-", "5.734665244115782`"}], ",", 
   RowBox[{"-", "3.848541962636059`"}], ",", "0.8068238697400427`", ",", 
   RowBox[{"-", "3.4238169076771547`"}], ",", "3.1676860528649766`", ",", 
   RowBox[{"-", "7.333750385494357`"}], ",", "1.6710517940751735`", ",", 
   RowBox[{"-", "5.298421176797486`"}], ",", 
   RowBox[{"-", "0.8860930153601675`"}], ",", "5.854132355083179`", ",", 
   "3.0699141705176536`", ",", 
   RowBox[{"-", "4.801779478328272`"}], ",", 
   RowBox[{"-", "1.5510034379376447`"}], ",", "4.049651706691232`", ",", 
   "1.0725004252411598`", ",", "1.0201907141775846`", ",", 
   RowBox[{"-", "0.10897253538417262`"}], ",", 
   RowBox[{"-", "0.8628999249709092`"}], ",", 
   RowBox[{"-", "3.715145708405698`"}], ",", "3.82303605919122`", ",", 
   RowBox[{"-", "2.2401236933087585`"}], ",", 
   RowBox[{"-", "1.7491819352742923`"}], ",", "7.170200741278841`", ",", 
   "0.37466975547822323`", ",", 
   RowBox[{"-", "1.337769189650591`"}], ",", 
   RowBox[{"-", "1.5397144976015475`"}], ",", 
   RowBox[{"-", "1.443342544429784`"}], ",", 
   RowBox[{"-", "8.375780613083935`"}], ",", "4.872790394589003`", ",", 
   "0.07982030135820328`", ",", 
   RowBox[{"-", "1.4577712228120323`"}], ",", 
   RowBox[{"-", "0.07643015833929376`"}], ",", "5.452470841556547`", ",", 
   "1.091980368854483`", ",", 
   RowBox[{"-", "3.9321955760970315`"}], ",", "5.2835431963848345`", ",", 
   RowBox[{"-", "5.200287688294529`"}], ",", 
   RowBox[{"-", "0.04533648345483371`"}], ",", 
   RowBox[{"-", "18.442544181779695`"}], ",", "1.6613258152755237`", ",", 
   "0.12552957662727438`", ",", "0.24205736732239913`", ",", 
   RowBox[{"-", "12.164922629896887`"}], ",", 
   RowBox[{"-", "0.11464875333296246`"}], ",", "3.3470492970783963`", ",", 
   "4.956337682778182`", ",", "6.347781221994609`", ",", 
   "2.5700109582985764`", ",", "1.2867093660282247`", ",", 
   RowBox[{"-", "2.8962205466095865`"}], ",", "3.7023321496863577`", ",", 
   "0.8081991905029847`", ",", "1.5224983332708573`", ",", 
   RowBox[{"-", "0.03318876144639796`"}], ",", "2.3106600222894222`", ",", 
   "0.33114862313116533`", ",", "0.8833973773539937`", ",", 
   RowBox[{"-", "1.8733042205283459`"}], ",", "1.8468009651585044`", ",", 
   RowBox[{"-", "2.6339834734535454`"}], ",", "0.189150901052692`", ",", 
   RowBox[{"-", "5.465276607386654`"}], ",", "1.5202988064724843`", ",", 
   RowBox[{"-", "2.8342217946688377`"}], ",", "2.1234371918489225`", ",", 
   RowBox[{"-", "19.301148132300234`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.913738220869646*^9, 3.913738254722636*^9, 
  3.9137384717471027`*^9, 3.913741838372156*^9, 3.915807677233527*^9, 
  3.915808484046913*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"79f9d402-ca81-4fda-adc0-5ecd3180f4fb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"diffSeconD", "=", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ana", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "100"}], "}"}]}], "]"}], "-", 
   RowBox[{
    RowBox[{"Normal", "[", 
     RowBox[{"Flatten", "[", 
      RowBox[{"data", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "100"}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.913741830021888*^9, 3.9137418364008837`*^9}, 
   3.915808516233079*^9},
 CellLabel->"In[31]:=",ExpressionUUID->"59dd638c-1905-443a-ab64-1e9cfeb64885"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "2.7533531010703882`*^-14"}], ",", 
   RowBox[{"-", "1.0014211682118912`*^-13"}], ",", 
   RowBox[{"-", "1.0125233984581428`*^-13"}], ",", 
   RowBox[{"-", "5.782041512247815`*^-13"}], ",", "3.750333377183779`*^-13", 
   ",", "1.8037127347270143`*^-11", ",", "1.0169642905566434`*^-13", ",", 
   RowBox[{"-", "2.8670399387920042`*^-12"}], ",", "2.5623947408348613`*^-13",
    ",", "6.086242620995108`*^-13", ",", 
   RowBox[{"-", "4.796163466380676`*^-14"}], ",", 
   RowBox[{"-", "1.2581047315052274`*^-11"}], ",", "3.774758283725532`*^-15", 
   ",", "5.025424520965771`*^-13", ",", 
   RowBox[{"-", "1.3322676295501878`*^-14"}], ",", "3.2862601528904634`*^-14",
    ",", 
   RowBox[{"-", "2.0516921495072893`*^-13"}], ",", "1.509903313490213`*^-14", 
   ",", 
   RowBox[{"-", "1.354472090042691`*^-14"}], ",", "2.1938006966593093`*^-13", 
   ",", 
   RowBox[{"-", "1.567634910770721`*^-13"}], ",", "5.972999872483342`*^-14", 
   ",", "2.0472512574087887`*^-13", ",", "4.440892098500626`*^-14", ",", 
   RowBox[{"-", "1.0533240946131173`*^-13"}], ",", 
   RowBox[{"-", "6.009859276900897`*^-12"}], ",", "8.526512829121202`*^-14", 
   ",", 
   RowBox[{"-", "5.773159728050814`*^-14"}], ",", "2.779998453661392`*^-12", 
   ",", 
   RowBox[{"-", "2.2026824808563106`*^-12"}], ",", "8.881784197001252`*^-13", 
   ",", "8.22453216642316`*^-13", ",", "6.015188347419098`*^-12", ",", 
   RowBox[{"-", "5.941913627793838`*^-13"}], ",", "1.7763568394002505`*^-14", 
   ",", "8.126832540256146`*^-14", ",", "7.269740365245525`*^-13", ",", 
   "5.395683899678261`*^-13", ",", "1.2967404927621828`*^-13", ",", 
   RowBox[{"-", "3.8546943414985435`*^-13"}], ",", "1.6111556533360272`*^-12",
    ",", 
   RowBox[{"-", "1.6758816556716738`*^-13"}], ",", 
   RowBox[{"-", "4.374722806232967`*^-12"}], ",", 
   RowBox[{"-", "9.254819133275305`*^-13"}], ",", 
   RowBox[{"-", "1.3944401189291966`*^-12"}], ",", "3.26405569239796`*^-13", 
   ",", 
   RowBox[{"-", "2.842170943040401`*^-14"}], ",", "2.0901058661593197`*^-12", 
   ",", "1.6797674362578618`*^-13", ",", "4.0967229608668276`*^-14", ",", 
   RowBox[{"-", "8.637535131583718`*^-14"}], ",", "8.260059303211165`*^-14", 
   ",", "9.174883075502294`*^-13", ",", "2.1826984664130578`*^-12", ",", 
   "1.9317880628477724`*^-12", ",", 
   RowBox[{"-", "9.103828801926284`*^-14"}], ",", 
   RowBox[{"-", "3.7347902548390266`*^-11"}], ",", "5.0182080713057076`*^-14",
    ",", 
   RowBox[{"-", "1.8118839761882555`*^-12"}], ",", "2.362554596402333`*^-13", 
   ",", 
   RowBox[{"-", "3.831268635678953`*^-12"}], ",", "2.0605739337042905`*^-13", 
   ",", "9.681144774731365`*^-14", ",", 
   RowBox[{"-", "1.5543122344752192`*^-13"}], ",", 
   RowBox[{"-", "9.725553695716371`*^-14"}], ",", "1.3855583347321954`*^-13", 
   ",", "6.5494276668687235`*^-12", ",", 
   RowBox[{"-", "4.570233080869457`*^-13"}], ",", 
   RowBox[{"-", "7.016609515630989`*^-14"}], ",", "9.414691248821327`*^-14", 
   ",", "1.341149413747189`*^-13", ",", 
   RowBox[{"-", "1.454392162258955`*^-14"}], ",", 
   RowBox[{"-", "3.979039320256561`*^-13"}], ",", 
   RowBox[{"-", "3.4638958368304884`*^-13"}], ",", 
   RowBox[{"-", "1.7763568394002505`*^-15"}], ",", 
   RowBox[{"-", "2.0445867221496883`*^-12"}], ",", 
   RowBox[{"-", "8.615330671091215`*^-14"}], ",", 
   RowBox[{"-", "4.430344979766687`*^-13"}], ",", 
   RowBox[{"-", "6.077360836798107`*^-13"}], ",", 
   RowBox[{"-", "5.623634891094298`*^-11"}], ",", "8.552270003292506`*^-12", 
   ",", "9.044320847806375`*^-12", ",", "4.3454129183828627`*^-13", ",", 
   RowBox[{"-", "2.6645352591003757`*^-15"}], ",", 
   RowBox[{"-", "1.269739868803299`*^-11"}], ",", "9.681144774731365`*^-14", 
   ",", 
   RowBox[{"-", "1.2789769243681803`*^-13"}], ",", "1.191269305422793`*^-13", 
   ",", 
   RowBox[{"-", "7.758238496080594`*^-13"}], ",", "1.5487611193520934`*^-13", 
   ",", "1.0880185641326534`*^-14", ",", 
   RowBox[{"-", "5.806466418789569`*^-14"}], ",", 
   RowBox[{"-", "1.6697754290362354`*^-13"}], ",", 
   RowBox[{"-", "1.7763568394002505`*^-13"}], ",", 
   RowBox[{"-", "3.822719918389339`*^-12"}], ",", 
   RowBox[{"-", "4.600764214046649`*^-13"}], ",", 
   RowBox[{"-", "4.574118861455645`*^-14"}], ",", "2.3092638912203256`*^-13", 
   ",", "1.1035616864774056`*^-13", ",", "1.0942358130705543`*^-12"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.913741838404471*^9, 3.915807677252592*^9, 
  3.915808517185965*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"bfa6947a-bbfc-481b-95e7-1d473fe4fd45"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Let", "'"}], "s", " ", "compare", " ", "the", " ", "neighbor", 
   " ", "list", " ", "in", " ", "orginal", " ", "cellGPU", " ", "with", " ", 
   "Mathematica"}], "*)"}]], "Input",
 CellChangeTimes->{{3.91373833369386*^9, 3.913738375544939*^9}, {
  3.915809355808263*^9, 
  3.915809379077283*^9}},ExpressionUUID->"41e73afe-407d-4c99-b901-\
35867e32aea7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"box", "=", 
   RowBox[{"{", 
    RowBox[{"10", ",", "10"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"copies", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"positions", ",", "9"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"translations", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"box", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"box", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"box", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"box", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"box", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", 
        RowBox[{"box", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"box", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"-", 
        RowBox[{"box", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"box", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"box", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"box", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"-", 
        RowBox[{"box", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], "}"}]}], ";", 
  RowBox[{"translatedCopies", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "+", "translation"}], "&"}], ",", 
       RowBox[{"copies", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"translation", ",", "translations"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"allPointsPBD", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"translatedCopies", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"min", "=", 
   RowBox[{
    RowBox[{"Min", "[", "allPointsPBD", "]"}], "-", ".1"}]}], ";", 
  RowBox[{"max", "=", 
   RowBox[{
    RowBox[{"Max", "[", "allPointsPBD", "]"}], "+", ".1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dt", "=", 
   RowBox[{"DelaunayMesh", "[", "allPointsPBD", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vm", "=", 
   RowBox[{"VoronoiMesh", "[", 
    RowBox[{"allPointsPBD", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"min", ",", "max"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"min", ",", "max"}], "}"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.913389173505975*^9, 3.913389175892846*^9}, {
  3.913742082945057*^9, 3.913742133565556*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"42c14c50-27b1-4f6c-a646-bb73eba559dd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dl", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"allPointsPBD", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "100"}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"Table", "[", 
       RowBox[{"i", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "100"}], "}"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dl1", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"allPointsPBD", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", 
     RowBox[{"PlotMarkers", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<OpenMarkers\>\"", ",", "Large"}], "}"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.915807102318379*^9, 3.9158071059004583`*^9}, {
  3.9158093290398893`*^9, 3.915809329589098*^9}, {3.915809446263604*^9, 
  3.915809497072839*^9}, {3.9158095901292267`*^9, 3.915809609630286*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"9153ada1-7504-407c-8d70-54d1aa83ecf8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"allPointsPBD", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellLabel->"In[43]:=",ExpressionUUID->"3fb6401b-75c1-4579-aa87-6564f20a17b1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4.909989843065351`", ",", "2.04255726281653`"}], "}"}]], "Output",
 CellChangeTimes->{3.915809547736483*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"f8036965-7d45-470f-96c3-b06cfe8f2185"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"HighlightMesh", "[", 
    RowBox[{"vm", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"2", ",", "White"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"1", ",", "Thick", ",", "Red"}], "]"}]}], "}"}]}], "]"}], ",",
    "dl1", ",", "dl", ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "10"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Frame", "->", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.913389242163464*^9, 3.913389276175104*^9}, {
   3.913400135080818*^9, 3.9134001896701202`*^9}, {3.913467458456915*^9, 
   3.9134674686928463`*^9}, {3.913554390784245*^9, 3.9135544058852654`*^9}, {
   3.913554443313017*^9, 3.913554611288899*^9}, {3.9135548933854923`*^9, 
   3.9135549557373047`*^9}, {3.913554992456093*^9, 3.913555004320771*^9}, {
   3.913558357024177*^9, 3.913558358462406*^9}, {3.9135583924895906`*^9, 
   3.913558406810787*^9}, {3.9135584477128487`*^9, 3.913558457429652*^9}, {
   3.9137247972098913`*^9, 3.91372487469648*^9}, {3.9137249731699047`*^9, 
   3.91372501928511*^9}, {3.913725098983367*^9, 3.913725106459729*^9}, {
   3.913725166174266*^9, 3.9137251686615677`*^9}, 3.913725215924149*^9, {
   3.9137421596901217`*^9, 3.9137421857943363`*^9}, {3.915807109782954*^9, 
   3.915807111333933*^9}, {3.915807165978385*^9, 3.915807166183146*^9}, {
   3.915809499018176*^9, 3.915809502096342*^9}, {3.915809582650053*^9, 
   3.91580961454782*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"926e6a21-0f55-4035-83a2-c3298f5965ba"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJx1nHdYjn38/tNe2ntpaY/7LiOk+y2SGVHKTJK9UhnZOyFZmdl78yCz+2MT
QlY2GYmKkJTSr9+38307ju9xfP96juuo53mo676u83yd5/lxGDK+V7yykpKS
toaS0v//5+3RA16sDNAg7/mfyzqMsaXIle0o832tbPwF7SItZWca5iukEz47
0J2tv94cP2pI5faaRWMe2NLbtYOa7/R0JI/O/nN/B1jQwsmj4x67mdGFBwGT
kneYUAFd14tu4kzjI02rTAbrU3C3ukOBXStlry8N2zHxfblMY9d+jYNXv8s8
k3zdxHcTGjpkacFpDW2Kmeui6zDBnorunnp+ReZA19KSlaeetqJFw6MzRqRb
0bujPbZpHq2QL1S3jfkV7kr9jN5NTF1pQmEdCi1fVznQjiwjtbMFmnTHTDvZ
6lel7Javhka8jQX9nP5z170m32WGlz4sOPv5p2zJ7Ftei0rM6VnOuapXvlWy
/S+Ki8OXWpPrBx/Lw+oO1GmqzrOht9/KVT+PG37JyICqRm3LG1FRKTs0vfaw
da4ZHXl0JmdxlAOdu/1r3n0LB0o3ze1SXOxIJ5Y3mTYhv0g24F2e9vVSGwrP
+P7q6v18WeLQ72ouOiaUEVy9atovWzqVJGk58oQ1raxqMbWvpQnd9ZBefhFr
TMGztp+5ul+Zevc03RI3T51OnzCaoi61J/W1NTeGFChT0VzboToTG1Np8GDX
pqaOVDE9tb1ZqSo10Zt87NdLG1qx/3t2kbEm7W5kMbOd8Q9Z2EbdUyccDejG
5EnZIQteyJrNSO87pnGVLH3O5nuHb72Qaz86qnU56LdM7VfxAbch72QTp5VI
It5ak2qvwOqft5qQ7cnQ2PjDBhQWK5/4VOpA6yzu9HoZVyUz+r7SKiHPgG7G
Wje3emlAO5Pf3vtwXZs6GyyN8HV1pWbfrCcpe2iTJGvFtrXzVanDoRahG/Ze
lc3JVz/WRF+H3A+OVf0xXJ9mpapHTVCu//2P66TiOseI0hJP7JxeXS0rGHa7
R/8gGwp75bXf2U2ZAibfKl9da0bSYcYrl6Wb0rz1nhfUz5fLEuavDcxfaE66
EcFuT39/ky1ZPfCIrasZec/IXvrfSj3qmJaVsGGDAcm6nDFzOKBL3sdvJ23S
Nqf8Fhv3LF6uQSNbeS0uTrMmq13Xd47baksdhqzekvjIgXQ1fp2uK/ksy+ia
027yuyZUFp0UOXznN1k/+fLT0cW2pJ76e49GlSm57n/y7piLObXTH3+5d4wO
9bZ68KbEzIZkth316wqrZGeNlvsWWjmS783RB+N0f8qmj/k5Oa7KkOo275v8
cYMexafqbjdV0iS/VvahKhurZB5151I7DrOnqyfv+Hlvt6cdRs+eH7puTFqF
vuc369Xfx/j8fet6xCrf1J8GFIyJSA90IWN8ni48+aD01VWHekg3jbn2wZoe
DcrXG/hShTYa9zpAt+3p7eRxkT0Om5HTwMtrYpfa0cr2v7LfxViSUshs5x/x
DhQWsc3pxlgbiunQ1e5AmTHp3o4MDFplQc8C3NP2OhnTlren56+T2lJx51mR
Rv/pkW0LH41LtVb0fVPEiqx8U/prumJd21JzwZ+XkUlaLb/u/CHz6mzm3bKH
NR03f2MRUOFHN/E8+dHziYpOuA2dmjsh8GynHzL/mS1Tksab0dINLwZdOWFJ
0h79ArTTTShq86QBN1/Z0baIpGONTM3Ivd+q41rdm9DsJbWH/wZZUo/dmhtq
3pjTWeUxC9PWmFKbqDPvA9eXy1RavB39wcaK1k+2MtbqoUTqJim7zsvUafOq
1m896n/P/53IuxJT/3P1UurnVdPRiVYF9Th57J46DfieYb5igQNtxP2uNbXz
soDhXjR9T8bkW1006Prh8yN3DdOi3ZUXg8Z8r5UNmJRZNmxFrezLoMM5i0Mt
aYxKqnVanBH9d7jfJYPtTShUzDBqT8akFhCTc/frN1k7vcSBNketaXGjqUXL
tb7JBru+T2/sZk8pbh6rG9nqU+rdE1OVh9pR/oErlcP2GpDKqY4H30bb0zut
x1/+dnYgt2affh9fXi0LvHHzobV6Ewrb6b/K85op9Th463DLCd9l0TPcykzM
qmTzFw2ceaTorWzZst395rpYUMvC3cGbL5vTAhreum6rMelINq15+8OK+lTH
Xnvw1ZR6Rw5cWxLqQB3rdtT+9bSjmAvTTrT75ERpRhc3791jQJvm5g3prFci
ywwb0t5EqkHOovvkY9X3ZfbnKvaHpBrSl0PNHH5pGpJv7pERhfrONFQ3c8f+
X2Zk/kT6ddFdJ8XXS/uvjrl/ZYssAu+bzlO+RAb0mCC71+b8gUnJf2XtP/wV
i5da0UrPY5tnWOhQ3RJ6kmBgQ/ef5AT9yHCgD5nhb+y7mtH8Xx0f+JrXfx6V
QwLFICPq6DTV8sFXJ3pcrXTi9EIH6tF8RaleniY19pk7wGORGv05Iv+Z3kyX
9OUtLQ5sNqJOZQHPAjraUbCs232L9VY0vvES1ZgvVvRaye+t5gNziriddMy8
/2dZUvX7ld0M7On1+v+G64bWyO5HvzZaFuxAM5c5/jxS6ER/PDr7blvqQO65
rc/7pdhT6sAO6y8pO9DUJoYFia9/yZIOjXb/fVKNZu3c3+rYmkY0RNVG4/Uu
M2rrvnVt+SwbmjvP7pzyZSdqq/bhxIEHjqTnktspNtOZjOLS3P4jG/rzn+r1
mkb2tPLO76ph9e9jJft5MQbbbSn9s6Qm9JElGe2V+4aTCm2Ofei29pMBTRji
GfN8jjp1zPPfPHaoJXn1/3Sl6K8hnd9UE0x6pqQactLz0xkdqggqWNQ9x5UG
4v5d03KJh1aaGwXiedu1XVaP59ccKWeEatScaRaUtKPHo5dOjjT81umi8ru2
1P+ZafIrHVu6rnxU0r6lMTVy7PNm6jUHuvB81qY1xkZ0a+X6F469zWiPnvRG
08GW5FYWOnH8TSMaHpe0ZGe5CaVEHXMw2mlPobsScts9VKWq4Pz+jQbYksqf
/Z86ORhQXXRzzbd5DnRSYhFxepUabQxRtbGu//n8aVcsWf71oSy/Orbsi10T
epvn1cQ57LPM+ueyx+e0rOjgiI6O12fflU2/N7hiZIUj6Rfev7O761+ZYdKa
YtPJdjR84qm4rE0qtGlI0T23FU5UZ2UhSjV0SLPk0bRuI+2pX2PRL01Hjwau
lz+/qWtG93cdmV21qTH1GxJ6b3mqFWVf9n4ha6NOavE3fEONf8v+tFeeNLBz
rSxg7uCdKa2qZBK8/7La2xe1MbKng5qnLdvOM6Zo1c6DfafY0wSV9APOx82p
tU70r7cTNWhAnMTtyZrG9G7zpy2dVlfJ9h3/s6ZKbkAdxYx92geMqVnzqftc
c23IvWJy4jdLLVJJufEq4IMFpUV5F1ZPt6aYDJ9pISW6FKH72X/wQGty1mmU
0GqNBnVp/M7yYLYtTXqXvNdb5kyWufdXnIqzER7Qe22unHn78Yslbb/YTTXC
wYoef1q2f42XBd1/WXEw7Iw5PZ81Ke1p/fPY769yn2PZljQi0f9n273G9Nw3
qjj6sQ11qB02svK6CW3S0AxbrmlDPUMPnv7T24JmlfgcNbWypY9zwl+OHPtF
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
nJizMW+VnbBDH35xheqoZgm/5HUtG/q9Ke8sQ65v0RS8f727tJ/brBsOwrVT
5qCpWWo0wdLx4gtTZ8F73i2D2yW/vOkoktC3/9V/kY7ZCCXBffZQ+6E22yI2
y9Zi31jWeOyHdKm54D2vb8hy88abrEQX5CX8++Z+fZn7zRnq3SwE73c3rciu
KZhpKnhfnTSr2YMpxgaC97y90L+YiP70rJOVz96/qX9eYP/RvluH/EfWTiIN
/frR7Xa22n3KQnC//m2/HUnj91sKH/QXM4f6ebUJsBHDsZ/IPTnhlKNcVfB+
d/mWCaqS8HqdhD3Ih6Rw08QvDoL79dWTNaJ/qxsJ7tcPmtLJrk9PK8H9+uhA
c7utl+3FGfTrny+cmJY400FMwz5htsTzytLjFmIE+vbPf1uv3XLbXnC//m34
ypGZZdXynejXf2uzddGlQn3hD56rdPVV6ir5XznvNZRFFb0+pyp4fxKTdd0l
sZmmyEffvknc+F3VWVVy7nOfC5n6MLBIWWRgH6JWUPt82L2f8h7o1285d+Jt
hKGJ0ES/3vn64+SoFyZiM/r1jfvTo0m7LQT36/XjDowb4m0kXmBfEoM8kvnk
CrMtK7zXagru0+//mnD6U6aD8EOfvji3Y/DkTF3Bffpel41CxwYri63o0x/p
+nRDSXwjwXvd430r41WaGIjz6HdbPBoRV3DbQXCfvtmViZOmFTQRfbEvyHhZ
KtGQfpOro1+567fudq1NH+UrsMeZsv3zrZ2O+bLV6Nc7j53SfvKDH3Lex+wd
+2DXilgtwf368Lyi0SbNLcVn9OtX10x+n7zJVJxAv/6sbG7pebmJ2IA+/d8r
Db+vSuztxTvDLKMO6oL3ul8HZ+r+aakieO/wvEdu1veAWvlb9OunVRVu1Tps
L3ive6L/7TEPWxmJ3uj/L93YuPrpT2OxF/36ZlJvxwfd7QX366fJ111VijER
2ujXH1Tb3MrLoP7fR78+sdFpVeW9KiILeX37e6PCzHTtxUL094veH+/y57i+
2I6+rK9e0LWu1VpCBXtokzjPX3v7lMs3oK86d6SOi/GkU4rzE+ImtPuidt5B
5KNvP7W58sySj9qC97mNPs0Mt3mtIbhvbzHycJPXJwwF9+2ras9elm0zFbxv
PX6xg6X77XwZ73VD3X/HtM79Ie+Ofn31p5z7owJtBe91v9ONoohYU8F9+6lz
hg/Mu6MtJqBv71B3x67Sy0CEoW8/yKtgxMYZdfIy9O2TWqmNXPulQn4W5zU4
7RnUe3TsW3kK9lY2e08t+LXhh5z33Vl7Hboe6mYtpqNv39G9yxeVprbiB/b3
NXMa3h/dsa98eLa89cNMuYz796vwedFH/14y+Nl1y2918mXo31d42o94Uv++
4L3uzbBRPY3kNqIN+vcXdpq3sWhkJrh/P2tg0886TlaC96nhVVvyW1dbiB/I
b/h+4b3uPJ/K8FpNfZGI/r3fyHSJzWBVwXvd1rU97p6/YSK4fx/iPDtuVImp
4L79qcKs8SdkjQXvdddvWpLUX89YTEP/foD3davXa2wF73XrVCPNs1+ZCyX0
73cV/Xjk1MJWbED//tvJKQvnRTsJ7tsb+jfOse3vKLhvf+FyiMuSFvaC97m3
rzmHHZPaCd5T+cdoNenew0xw/37W9x9NtKZbCd7nWnnvlc2TWgre5za1KzYc
XGgjeJ87O1sW/rCPvWiB/n2Rxvcrfz9bCe7bR1SGfrw03URw335FTULE8+4G
4g369lHdVUepk7mYib795j/vftv3MxTct9+wpvGho6PVBe9zq3XGB6c31xPc
r7+fPSL45WJLwfvc8SmzQuOa2wjef5+X5UzYPjNHzvvN8//16a015Kec97k5
04dVRl3QEdzHlzpq9z7W0UC8QB9/rUp176wMXTEcffxOW8O9w3qri47o41/5
9jXubZmG4H2uquv2LQ9vqYls8MRc6Kdu4LNO+PlxHz9k2eMx9EpfcB9/qeYP
u/mOxqIZ+Ca/f1djn3WqIOxV8nAbkXaov/uhOnVh26ehD30c/fyQVkM+Jzir
Cz4/4E0H7cizk81Ee/Ca/dCDvujjf5pc203DwVbcQR9fY9euD6KpveB9bsZs
vbUW9Z9/7uM/PPfsa3SJmuC+/bVWh1ZnLLEX3Lf3uvxZ9+5cR6Ho23+anOzw
uIng/e3e+TbNhr2s12fo289Wd3Esu6UleH/7+NiWEJXxeoL3Xb2q5Ukp9k/k
vMe9d6rDk7HdHsp5f/vnmvYsxxbGgve3wSuPXL93T0fw/nbG86Fx/oNtBO9v
84e2cTra2k4cQN9eJ6/dfhuZsniFvn2r0c475xWpiHL07T/McG7yZp654P3t
ojPbspafsBS8v/36aoNLoZqh4L79t19zi0rzjUQtzutg/UvYZ8yCHj3B/Ad6
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
T8cedCZ4Ne9BmfftwB5U429D3sP79ld9gj+onPghb4nzTjx//DCIT34g64N9
6B/w6r/YS5eDV6/CXnQueDXvRZlX8/ksTsh7eJ/VEvxoIM5n4b4Jny9gDX59
B3tRzjNeYS+6Ffw6Aued/QKv5vPJmFfzeS0WyHv4vBYN8Oud2I8yr76P/egl
8Go+r2UZeHUM9qOzwat5P8r8mfej/sizeD8aAB7N+9FO4NF22CeXIV/h81qy
wad5PzoQPJr3ozXg0XxeC/NoPq+F+yO8F+X+iBr2otwf4b1oBPKatdiLuqPf
YIq9KPNm3oc+QV6rOI8JvPke9qLcF+G96HLkI7wXZb5sh70o90V4L8p8mc9n
Yb7M5wcwX+bzWpgvK87rAF+W4jypoeDLfD7LBfBl3pNyX6QUe9L94MunsCcN
A1/mPell8OUH2JMyX+b96Gvk5Xw+nwV4M+9Je4I38550GXhzHs5nyUDewftS
zrP4fBYp+mnB2JNGIH97hfMtYpCPTMW+9DXyNz6fpQT8mvekzK95T7oC/DoE
e1Lui/BelPk170WZX7tjL7of/LoL9qL7wK95L5oCXs3nrzxCfsT70LbZDfz6
CM4PyQG/HoF9aCfwat5br0N+0xR70eng15OwF30Efs3nCSaDV/N5LHrIO3kv
WgxerYu96ALk53z+Sjl4NZ+/wn2Ce7VtxwTrNqPrI2vCT65zIL5e652zNLTE
XHFdFblg4NORNorrE4HV/03z+SPja+fsfjr67SoU15EZB9x3HdBVfL+n+dXU
FekGiuvymWebdtvurLh+3+zv3n63/RTXt8xirjn98lVcz4yMjZpkJVVcrw6d
NeluvOu/f7/P6LcOe10U1ybvR3Up9vD89/1LhlzpFOpFvY73Knvt6iya2OzX
jbpkoLiWeqV0baPdSHH9x+j3xlu+X2R8/bmr+wjLt/++XmeS1+rrRkPFdWXw
7kd7/tgrrlNCS+4N3mmluHZeFuj+VFYo5+u37yJ/7G1rLvj6U3Fwv8KUJorr
Dp/u9Lro+Fvx/bNnUkeV7o6Kr+v2+9I1Uf/f9yt9kV4zGGqmuNZJcB0UlK2t
uNbXi1zoGfvv76+75FV+erCb4tp3jvxMzfGmimtJyzFjlV84Kq6re2n36zjl
3/fP1i7aVHnn339vtsODzw9m+Cmu3xi2aWaxT6L4+V8+ZjMhsvUPOV8bveqR
Pb/zQ8X9MiK/XeLper3O13oRFR26e2korkeenr1YssFecW29b7XdqygHxfXj
lh6jvev1Ol8/+tR68rgEc5Hx0+7wqJx/921mnW+qa6yZ4tr5wqIDG3z/3Vc7
w/q6nAqrVPy5zmza1PZzqoni678C+iTP2vPvvp85M+Ts9asFiutUh6ufZh9R
VXx/qybDzR6OaKy4HjW4r9unK/aK69w68yurJP/u8wrP/LY+1/59Lh6737ry
uPjffT0wLM8uud5P8bXD9f1lX5P+fQ7iOklbv/F0V1zfu75erXm/f5+D5ke9
TJKG/PucpY5Qu/t7upri97Zke8uPHff9Vdz3r+oqJNrzTBRfN1g9d6/N0n/3
hbNBF6+EkH+fgzXXqj9mj7FVXId2yS0fp2WtuN5541aHO/U6ja8dlbTvVkw3
Vtyn57rOWDevna3i+ohOK6cnHvaK6ybyx5ObBxUpPhcO23xHXhz873P17OvJ
B+ln/30OEkePtnEs1VJcP56o7ZdR/97h69xtT9eED3VSXI9Wuje5YLOh4j7y
fNysjbvZv/usc1zcJdPJxorrNwGRhgZL/t2XQyfc/rmm67/7sNTs0g6PeeqK
64M1zS7kFFQpPgeO/S76B8W4K34+vX5ee+H2yFVx3ayL0csxd/wV11/rUiwW
tPNRXGt0aReh1/Hf1400m2ae3v7vc7n7WE6Vd3+p4nrlyonn+1+SKK5L1cYW
/3j67/cZMshl1OGNzorrwPFZS2R7bRV//v/9T8Wf+3/98//6vv8HOOhtng==

    "], 
    {Hue[0.6, 0.3, 0.95], EdgeForm[{RGBColor[1, 0, 0], Thickness[Large]}], 
     FaceForm[GrayLevel[1]], 
     TagBox[
      PolygonBox[{{1760, 661, 1761}, {1718, 865, 1715}, {1727, 1244, 1723}, {
       1734, 1401, 1730}, {1751, 278, 1753}, {1784, 1410, 1798}}],
      Annotation[#, "Geometry"]& ], 
     TagBox[PolygonBox[CompressedData["
1:eJwV1Hlsj2cAB/C3lK4i6dSVbK1jNkU2Y2RxxIYEVV01NsPMMenhKiJCImRz
pVSskS6ZCEa1P0Rd6dqEP4TFURK0dSWuRVjRuK8ETezz/PHJ9/s87/E879vf
264z5o+b1yyKounE04s2zCaV0XzNWJII514mmwbGMJmfKGMCayigiBhDKWcn
vzaPomL26jlM0itkBwbrrW1ipt6ZT/Sn8ipfxEXRnbAH2STby2zakEAGuQyi
zvGB8ppMken04Tvy6UweOexrEUVHmau3ZoNeIOexQM9zjzMsMV5MJX/xlHJq
OcoVYpTwB1eZ6GXVy5pwbz2NW3or+UImyZ7c1nvI7vRmY3i35r7UG+U7+up9
eG1P/VtG0WNzVWSam8ZetlDh2C/yGPv1DXIZJdRQzDa2coMqsvibcRxyzWl5
lgP6ZnmcfZwK+2c1N7lOkT38wF39DjEqaeA/Hjq2UD7mET38jZPI50c+pT9j
yKEVwzzjDPm9TJcTmcAOfiaRduwO57CSfhSyk28oZTtFfkOn2a+nco+asK65
dsTzPKwru9GVNO9/FtW0NO5Ae6aSzNBwDiOYTpPrp8kpvCHRvi+by9Mv0iX8
pqnmvnf6wLGb3NXLzRVymws8MdfC9Wm80LebO8jJsFdzm+Ru+8p1/S39H+qp
4+OwrmxkbXgW43NhfxwgzjiVI3qK/Ihn1thl/C+P9KnmhvMn2SxlFis4zHIW
Ucl5ilkX1uUSo/iWUnZQyCFmUk0t67kQ9sZJa9bJLE7o10L3bAPk9XCe389L
menYYM4ylhzO8TkpfEUG8TwJ3597jNZ78xn5rKCWORRwnkHkksVsVjGElfzG
WjK9m+FyHSMZz3qKiEuIorYygSbK+N36ieFb0Pfwod6WXfqRcK37ldlflX6R
js4fQr1+g1fOPWF8Sb9HuvMX8EBv5H74Bowb9OfE9Aoe6i/pFP6nyQ/s7VV4
JuMYb/XI3FxZQjO9Ocl6X97zP90OyFU=
       "]],
      Annotation[#, "Geometry"]& ], 
     TagBox[PolygonBox[CompressedData["
1:eJwt2HV8lUcWxvGrwa1QtHRxlxDcHQotroFAkRb3AMVdi7troQQpDqG4LSwO
RUphKUWDFFJcQmB/z8754/s5M+87c98zZ+ZKkrVdz4Y9fB6Pp5jX4wkSD2Mr
UqMAfsVglEF/JEYAk5GfiWeYV5J2GPahMrLZHI07jpSoieb4FrmRjJtfErOi
M5qgNHqiMTJiFgohL0phBLpjLKqgKYYjGkUtB+USgbbogzpY6XFriyPXm+hB
ewyKkH91G6v7bVAVR3AU+ZAZTPn/uKr2TD17HfZgL+ajG0Zjg/L0u3VqvWkx
FQVRFye4dxLbaCfBCstRuX6O5F5XY9W6HxZgIeZaTVSbnEhk9VBdCnvcPpzF
NFu/6jDH6prR5v+AeRhn+SrvViiOUMzGUhzDO+0/r9eR2AADURvjrZ51LPe7
7ONp1rOGdipiTr9bfxuks/1XLQ5hC3Zb7jntvAy019/vcWdH44Z53Bk8bHP6
Itz2RHtTUbUmt0g8p30ag7xuo0rjAs1yGke7Hv5inychnmtv9fpcu058YGM0
dgLxCvGG9px2dlzS+hADvUfuIwfXP3rc+6UswtEML7kWi0c6J/RD8RUSIhOq
YID2yHJQLlnp50IJpEZ7nOH6Nh7WFGH0a+I+7SQ2VvdzEhNhDMbiH67dwXmP
G5fInqlnd8UQDEVLFEYNdMemoFun1tsDaZAfIR6379r/vuqjneWoXDMiAs1t
/apDUTT1urWrBq88rubhaOh1a9WaL1oNw21+ObRALctNOWZDHOPaEE8S3+jc
0U6Jr61OqS2n/pyzGqyjM+1bjOvqd+uahQxet69a4yj0wWDLU/nqHJRHOgy3
M6Fxle1sjbY5pfCl1Vo1D6A66yqORbRXah20fThM+wNmogiiKOYB4m7Up30K
2Ri3hP46r5ujcRuwFY/xHmFcDzC2OKLor0EsRuo9Qnytc4j0em6Ie209Yw9S
cS0ddtLegoNIQP8FMTHxBPGG9pV2GZ+bo7nK8w4e4B0uISf3pxBP23W1Y7Qv
Okfcq4lttFdjjo07aa+v5xTkfgVURCY817kkLrU1aq2PEEr7M2ynfVlnmv0b
yppKcO04/Rw+l4/yisdkn6uxar1Ye4cvuJbL42qi2vyCtD63dtUgWnXkNVP7
3DoP2P5ozifaGXyuvpqfUe85y1d53yXuwy5U03nmWi0MRBSu6tz43AfFBdrJ
fK52lyz3PHxOXuFsTvK67019f063fQ+zeszXa9MuhvI+l7vWkM1eV69fyc6O
xgXtDFa3OQu4/pfX7Yn25pjOEvERIlEHzzBCdUZd7MJujEUPa+vaa3xCb6zB
VsSgA2bxus2JHfGE9griMGxCNM7rjKE7vBiABmiEvpiBU/rM1/pwCOOUP/Yh
1sZr3lAswypswXRcQ31MtOtq/4TxiMMHfIPFaGbjxtvr6zm39V7AS/yGDTiA
1rZGrfVn3NMZ096xxrW2x9rrx4jAH5aP8tqJizhn61cdNuKsz61T6+2nGnHe
TtqatLbN9K9ZDc/b/Pk6QzhsuSnH5RiM/jijXPARU3HEajLdctJ33iCed5N2
e5/7/nvldfsZY+tsgXd4iOeWp/JtYmdB+3+UOa9s3F6fO0fvbU5LLLJaq+Y+
ffZwvtfr85hn5yNuRRVsph9JTI0fMBEhKGS/F/S7YScqIszmaNxBJEc1JEIE
5vM+OoEvaP8LUbx2Q2JJdEMDpMcM7EdulMAQFMUofT/o9xixknLDN5aLchqG
1uiJ2liGykiLcJRFJPPLEAvbWN1vhaHYi33Ig6ZY7nHjdK+gPXsNcQcGojNm
Y6Q+G5AfoejCGtPxGbiBdgBLLR/l1UW5BF09Vdc+mIt5mGXrVx2yY7qtXTUo
YOsLsT0ojsmY6Xc1TG/z+1peVTEHoy3HImiMhUiILOhAHnORiXZezkAvff7Q
HmO1q22578Y6bLOcstuea7zmRdv+a9xgO0d7bE5vNLG6qr5JMIj6dMMF2v/V
GNqviRt5rYvEYvRLoibG8B7Lhxdcf4p43PS7+xrXH8Nxn2spiNd1tog3iA9x
DKtxBhm5/oqYjxiGq7TrEB8R7+Glzgj93KiEj/RTEcugJ2ItB+WSTucYBZEQ
ETiqtZJrOeSlXxGTaHttrO5nIn5SnYhDEEM7DfGc3437ZM/Us78jRqIvGiIX
KiAL3gfcOrXeTsTu2MH5bGn5KK/PPK6eqmsR+qFIiUaob+tXHW4Tj9vaVYPH
flfz/KgVcGvVmusFXA01T/OLogEqW27KMT2ecf9v1KXdHMMQjrle9/eU/obq
Rz+IKlY75dzS1nUNGWxftcaB6Io+AZen8m0RcGehv712PxtX2s7WIJtTGKmt
1qp5nN4L+u2MkfQXIg/t/cTReKL8cZ5xfq6Po70OKzADBbi2h7gx4OZoXAmu
rdJe6CzhMm5iDWpwfwqxrX5DYJvOKp5iHpIwtxiO0t6KN9iED9iLtXit+jLm
mOWinN5qH/AQR1Qv7lfnWdG0L2InCqnmWG9jdf934j7ljTDmrNbZw1Qbt8+e
qWdn4X5+vKB9B8lpxxFzEGdqr4Pu2cohg9/VTfX7G3NwWueNMcmCbq1a8zIk
Drp1ar1RthatSfXeQgwhJg26emme5sdaDgeQgn685fML8SzS0G5HXImJ6Bhw
n8n6HE6LQ/Q/Wp2OWO6HON9ZiRPoP9ba6YfSz4a8QZfnMttzvaZep6Dtv8a9
CrhzVMTmqKYLUJT2ZKtvDH7HtyiLP1EO7cltJbGi9gAbEY3vg+7vIv0tdJv2
V+hoczSuFWopH0zDE5RHAzRWzsxrRJyOrliMn1AbB/AdIlAa69FJNccM1Q9L
9JlMbGG5KKek+t8CcThOox8u4mtMQS+U5L3dkzjA7mnMTH0H4gEeojXqoyp+
s7Eb7Ll6/i1EYaH2CJsxAnNQz+++p/R9dRWROGU5Kbdx+DcO21q15kUoY+vU
etvaWqKt3l2wV+fA6lXb5q+yHGbjKLZaPhNwAgfRBI8xBNutLsMtpxOco0vE
yzo/+A/9+8QruGk5KTft788YjTu21xq3LujOTIzNWY4frYaqZR/tE685DR9o
hxBnoxWy6PsGEYjn3nziR2Iiu69rSYipUBPvtYfEBPrbCrH0n8NPu7w+f4kN
0AJ99D3MvTTEFPgS7VAX3+tvMZRGW8xEBqRHZlRENTTWewzDcUe/O+y62lWJ
ubEMTXGOM1WWGBd043Lb6+s54zEX89APddAek0PcerSuGsQfMR05MMyerRwW
el2NVKvmaIZw9Me7oFur1pwUvW2dWu/nOIvutiat7ZzNKUWMtLppfl90sNyU
YyVkwiD0QjqswCvmPgu6v6H1d/MQFEQnq1Oo5f7J9m6KrfON3t/EqZhjeSrf
+faaep0Ftv8a18bOzBKbsxRv/a7WqnkwxP1NM9T+ftPff+vp78AqxiVAS2yn
/yui9NtFvwOxi/5+1UjvD9Y/W98h9I/qfHCtAtYy7gj9xAlczTLb+fiIa7jN
e/MhguzNFfp/IK3+T+J19zTmOsrQv6b/p5LfDc3DbNqtMAo36d9STWjP9bl7
GnMPf5KDT98Z+p1D/26I+62o34e6pzG6rvsz7Hv/H/pPsSjg1qY1vqT/JMR9
z+u7Xfc05h3qcb8pKuEN/RDWO4r2mKC7pzFxqEl7BTLyrKv045FQZ1x/x2k/
mPchxL03/XYv3uqluun91Q2eBG6s5uj3sn43B+j/DxXiD8k=
       "]],
      Annotation[#, "Geometry"]& ], 
     TagBox[PolygonBox[CompressedData["
1:eJwt13d4VUUax/HbcpEWIRJACUgoBoUNrhRZkIAU6aAJ1VAkQoBAqKGEpqBU
8Qm9F0FAAtIkYChLQJYQEHEFIh2DBFd6CQKr7uL398z7x+d558ycM+Wdufee
G5kwJHawz+PxnEAQY5CDocjCclRHLvKQgkaIxdsoHvB4KuFFyoUQigpog7Yo
pXtQGfF4hcGqcf8syq+hFj61cTVOEkqiBUpgPiagA+piNlZiGNJRGz2wGPsQ
hlcDbhz1m4k6XCcSR3k9ngibi+ZUgBVohplIxgc4jE0a3+/x9CQuwGj0wRx8
gjTljP4u4heU4/prdLc23TMD8/AhCmOP5qb5WI6rYCmWoJrlPAYHsAxr8S4G
orHls43Vq32d5aEsMlAUOywvZa1NOdmL8UjAdDSwMWJsf7XP0TZXzS3b8qI8
9GBtM/CUckViL9yn/COHJYTy98oZsQxOUZeLepQDKIvSOEPdUe67hpvIx2nl
lLaSCLN+1N91nSPiWO058YnHnc13KN+2+Wj8v6lf4iXNBceUI+rC8SflOOJj
rYeYhN8pVyLGY4LX9ZeKVdSH6jmP67835SJoh1fRBFMxCM1DPJ4t3HMKb3Bd
DB3RHrHoxpmrjHzc0pmmLtLadE9bdEFTdMY4vIc/PC7HcTo/xBdwx+NyflLn
h+ue6IvWiMaLlreSVq/2RK9bbwxGIogUW3+MtWnt43GZfqO8rn/tqfZ2Erxe
N95Dj5ur5jbN6/KiPJRnba3xmPLPmgflydwzn3IC5SXEbJzT/mhM9v4RedtJ
eRHSsEHj6rxgDs7q80bMsf7V3z3tDW7iKzTTmaLtR+J+lKIciSeUaxD3EfP1
OaTcCPGMu1T5JvpQkroG2hedI+JarxtTY/fluiK+5fpZYoFyR2yJdTz7DPEB
dUVVx/0bqXvKdU2f++zrO+Aanud6PW2FiX7E+Nyz6mMr7fUpXyU+RyyBUJ/r
S32G27Xq06krQyyE0miITJ77p9flvg0icIHrbV63F4d1VqmrgCgUw33qrlie
le8oa69mefsMr1M+Qqzrc3lUndoa2fy1juvWv/Zae96UeMjG2+V1c9XcWlke
lbfT+lHh+/MDnRXtG4biJ9Y2mdgfnfAbLlJ3GfGUffSzkLgAedQNJ/ZBEm7T
1o94B2kYYP2ovx5YaeNqnE3ohS8wDN9hL+ZhvPYaZ7ENVzBWa8dJPMRR3MMs
xpxF/B8xmXgG05GNzVq32lRmrlnEL/ENOuCroPsu0HfCGpynj8U6A9hC2wGN
RV2Bzz2rPgYR72IVjmlvcNj6Up/H7Vr126mLI+7HCZ1RjMI4y/1A4intEYb4
3F5s1N4jV3nHCnyEjy2faVav9kuWn924he64afnabW3KVYGtYx3xX5hkY2y0
fdf+p/jcXDW3/1selbeRzPMgkpGJJXgZb/Kd0Q7DKBfF20jAUX7LZ6I8ZR+K
IQIt0QpheAOR6IriyOf+qsRotMVMvxtX4/TDs2iGUDyDsWiD2vgUFTEY69Ef
TTEAqbhH388TFwTcWOp7O84z9wtag81Fc3qP62XEepiGWmiMLGTo/BPnIgW9
sYu66cRZqON37yN6L0kjbiZuI060dt03FXMwHrOxA0vR0XJcCYuwEC9ZzhOx
G4uxGl3QEDGWz5ZWr/Y1+Jo5hRMPoDs26Pmgy0+G5oUAvrR8ZVjulKudGINe
mIJ/2NiJtu/a/7/7XY6Uk/22no42Xrit4aDtn/arI3n/ENUxGp2xlfqaxD90
DzESu/T+giDlQjipc0U8TywdcP3ouSrEHJ0J4i/E9sR6KIIHXLcmdkUNvI97
1JUlxiIFxXDY7/pV/3k6M/otpexBc0ShPiYgV3tFPE3sQKyld1W0xVtopbWR
3wrEJsTrGEo5gMr4leduUHeOOITrMvaMnm2GdmiAI7QPJ94i3ve7nF0hxhFL
IN/vcvi79ojYCT0Rrs8O/vS7vAWtXu29LA91MRg79Q5tealrbcrJCPyX58sT
m+KxjaGxOtu+3fC7uWpuEwMuX8pPST4zr+M/lKOJzyGN8hIcw2X05ZkK+jzR
9g3XK7Ac85CpvdY+kaPVxI3IRgj33g26/tXfFUzDBaxFAh5qL7FNZ4b71ijf
+q9D+WdiFq6iQPnFJRtP4+Zgi84s92ZQ9hK3Eh+hDuV9jD1f50XzIF5Uf3pX
4TqI7QF3LnQ+CnNdQFsU8TPtPXG9zqN+S4kvcf0k4J7T8x4UxWOdW+LLKIUT
AZfLldpz4nHi5wGX2zzUpC4M5fAD17uxx/KpvJaz9ggcYOxvtc+Uc4mRxINB
l59XKFfFXMpVQly+VPer5ao65QfEc3iqc2Njaw7aX+3z5oDLnXJV29ZzwsbT
uCttLdo/7Vc2sSsGYRZy0Ew5YE6NNT6/T1eJH+E3vaPxZzWHuIrrmcorHgUd
lYfjY0xWbqlrzz7EUu6Cd9AQ9TABE61/jdMZKdiDcXgLo3i2L/HdEDdPzWsR
mqAVeiifSMckDEAmOmGFnscSzMdSbLD+L2E5fXcjJvndeMeQjF3or+f1/UA8
xBrS9d2pfCFVc6Fur86ing9x/2/0P2e/ntV7LbGYx7Xrvp3IwibUx084iumW
+1s4jKmIt70Yhnwc0f5hBxbjE8vbBKtX+/eKzGkK8TbScFpjBF0e8nAOI3DW
8pJnOVJOruALjLZxc+wsXMNgm0cfW4PmfNPydcPmn217obGn2HpGM/YaxCIG
qSiBlfr/i7pohTPkNl3/zSjXxCF9HxEroWrQ9aPn2uIh/bbQd4++y9ELryFC
v6N699d7HabiBZ1fjMQi1Nb/BetX/RfBHf2XJFZDks4qeusc4zjeRzskojR+
0H90zAi63xT9trxJHIHv0Ac9sdCeVR8+Pi/ziDXQGmHwU1ecOBeNkIyBGGBj
aKwhdq36f6OAtScQh2EBxqKc5fhzjEI3hFrO22ApxmAS+qEyGlqeo61e7ZMt
b37WM4dYBbMtj6qLsxwutPU1t/5TbW+XIdLGK2Vz1dxWB11+lc+r2Ml7ayx6
632f60LkIYAWjHGHfb+r9yZ9r9L2F8nsbQs=
       "]],
      Annotation[#, "Geometry"]& ], 
     TagBox[PolygonBox[CompressedData["
1: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
Jn9Lcx9rYBCjmB1zFM+DGDPmM5yTKM6fwak9Ig==
       "]],
      Annotation[#, "Geometry"]& ], 
     TagBox[PolygonBox[CompressedData["
1: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
Yg==
       "]],
      Annotation[#, "Geometry"]& ], 
     TagBox[PolygonBox[CompressedData["
1:eJwV0D8o5nEcwPEvHiQ6SZ4MXCGLwXg3oBvU80hEyoPTpSzUlbuwsXluNSES
brgYbJ6SK5s/yeJhuZDI4t/iyiCPwcvw6v35/v7/vlWDP7pGskMIxRTwhR2y
+M5X+qmhgi7GaMgJIaq9xCmhjl36iHhAkrS5XlvJ5876mnLzZ37mhjCilVw4
/o9Hfll/ZJ+YD5zV/xSZD3SdP5xyxSUZ7nnhgRVSxN2T/X5ee5hiiWW+McMc
iyRIscoGawzQxiuF/nub376xSXvopYp2OskwEQnhSGu1jChn1nt8MNezyTDn
jhXrgd4waS5lgTTT/OWYE7a44JBR+3dLM/OkGCdBB0ly8+wFGXONDlFLNS18
4tl7G7WbGC+ujeuTHtm7hPkNaJ5GbQ==
       "]],
      Annotation[#, "Geometry"]& ]}], {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
       FormBox[
        StyleBox[
         GraphicsBox[{
           {GrayLevel[1], DiskBox[{0, 0}, Offset[{6., 6.}, {0., 0.}]]}, 
           {AbsoluteThickness[3.], Dashing[{}], 
            CircleBox[{0, 0}, Offset[{6., 6.}, {0., 0.}]]}}],
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}],
        TraditionalForm], {0., 0.}, Automatic, Scaled[19.5]], {{{
      4.909989843065351, 2.04255726281653}}, {{4.909989843065351, 
      2.04255726281653}}}]}, {{}, {}}}, {{}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["1",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{4.909989843065351, 
       2.04255726281653}}, {{4.909989843065351, 2.04255726281653}}}]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["2",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{7.515577362921716, 
       8.649391893313842}}, {{7.515577362921716, 8.649391893313842}}}]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["3",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{6.113172160681986, 
       1.868783771331484}}, {{6.113172160681986, 1.868783771331484}}}]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["4",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{3.0563220627291248`, 
       5.227567818162245}}, {{3.0563220627291248`, 5.227567818162245}}}]}, 
     {RGBColor[0.528488, 0.470624, 0.701351], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["5",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{5.788040423264993, 
       9.507633300059402}}, {{5.788040423264993, 9.507633300059402}}}]}, 
     {RGBColor[0.772079, 0.431554, 0.102387], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["6",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{1.0412609023220667`, 
       8.95252400974848}}, {{1.0412609023220667`, 8.95252400974848}}}]}, 
     {RGBColor[0.363898, 0.618501, 0.782349], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["7",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.363898, 0.618501, 0.782349], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{2.13898772851557, 
       0.9100309556664314}}, {{2.13898772851557, 0.9100309556664314}}}]}, 
     {RGBColor[1, 0.75, 0], PointSize[0.009166666666666668], 
      AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["8",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[1, 0.75, 0], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{2.027016432928226, 
       6.969156997581363}}, {{2.027016432928226, 6.969156997581363}}}]}, 
     {RGBColor[0.647624, 0.37816, 0.614037], PointSize[0.009166666666666668], 
      AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["9",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.647624, 0.37816, 0.614037], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{9.17887053763778, 
       1.0429593932032533`}}, {{9.17887053763778, 1.0429593932032533`}}}]}, 
     {RGBColor[0.571589, 0.586483, 0.], PointSize[0.009166666666666668], 
      AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["10",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.571589, 0.586483, 0.], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{7.131177767291845, 
       8.7891972011632}}, {{7.131177767291845, 8.7891972011632}}}]}, 
     {RGBColor[0.915, 0.3325, 0.2125], PointSize[0.009166666666666668], 
      AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["11",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.915, 0.3325, 0.2125], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{0.9191936596558516, 
       6.3632331166732}}, {{0.9191936596558516, 6.3632331166732}}}]}, 
     {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], PointSize[
      0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[InsetBox[
        StyleBox["12",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{8.959719916536557, 
       8.351503186000093}}, {{8.959719916536557, 8.351503186000093}}}]}, 
     {RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
      PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[InsetBox[
        StyleBox["13",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[
           0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{1.015684691887953, 
       0.12415408499127356`}}, {{1.015684691887953, 0.12415408499127356`}}}]}, 
     {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], PointSize[
      0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[InsetBox[
        StyleBox["14",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{2.292076559891268, 
       9.226547669982255}}, {{2.292076559891268, 9.226547669982255}}}]}, 
     {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], PointSize[
      0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[InsetBox[
        StyleBox["15",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{3.561928973730051, 
       0.4622299070764249}}, {{3.561928973730051, 0.4622299070764249}}}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["16",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{2.1794861847044777`, 
       0.8068357812791295}}, {{2.1794861847044777`, 0.8068357812791295}}}]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["17",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{5.022136682708016, 
       8.16869793579914}}, {{5.022136682708016, 8.16869793579914}}}]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["18",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{2.507229241431603, 
       2.587807769241845}}, {{2.507229241431603, 2.587807769241845}}}]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["19",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{8.705711086922342, 
       0.587179069228848}}, {{8.705711086922342, 0.587179069228848}}}]}, 
     {RGBColor[0.528488, 0.470624, 0.701351], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["20",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{4.20768582571142, 
       4.366820871042736}}, {{4.20768582571142, 4.366820871042736}}}]}, 
     {RGBColor[0.772079, 0.431554, 0.102387], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["21",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{1.6174084883700965`, 
       6.428849131925437}}, {{1.6174084883700965`, 6.428849131925437}}}]}, 
     {RGBColor[0.363898, 0.618501, 0.782349], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["22",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.363898, 0.618501, 0.782349], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{4.490765115437973, 
       0.5651849835880387}}, {{4.490765115437973, 0.5651849835880387}}}]}, 
     {RGBColor[1, 0.75, 0], PointSize[0.009166666666666668], 
      AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["23",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[1, 0.75, 0], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{5.104893046757143, 
       3.796503947142936}}, {{5.104893046757143, 3.796503947142936}}}]}, 
     {RGBColor[0.647624, 0.37816, 0.614037], PointSize[0.009166666666666668], 
      AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["24",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.647624, 0.37816, 0.614037], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{7.7288522384765255`, 
       3.2075545007022237`}}, {{7.7288522384765255`, 3.2075545007022237`}}}]}, 
     {RGBColor[0.571589, 0.586483, 0.], PointSize[0.009166666666666668], 
      AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["25",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.571589, 0.586483, 0.], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{6.976623642904862, 
       2.0329615720792016`}}, {{6.976623642904862, 2.0329615720792016`}}}]}, 
     {RGBColor[0.915, 0.3325, 0.2125], PointSize[0.009166666666666668], 
      AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["26",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.915, 0.3325, 0.2125], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{7.025710328430682, 
       4.584209223827731}}, {{7.025710328430682, 4.584209223827731}}}]}, 
     {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], PointSize[
      0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[InsetBox[
        StyleBox["27",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{8.826023940275284, 
       1.1592127940801038`}}, {{8.826023940275284, 1.1592127940801038`}}}]}, 
     {RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
      PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[InsetBox[
        StyleBox["28",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[
           0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{3.6651223722759436`, 
       2.481034241867564}}, {{3.6651223722759436`, 2.481034241867564}}}]}, 
     {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], PointSize[
      0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[InsetBox[
        StyleBox["29",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{6.471597281020156, 
       5.593724902132257}}, {{6.471597281020156, 5.593724902132257}}}]}, 
     {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], PointSize[
      0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[InsetBox[
        StyleBox["30",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{9.947888531813271, 
       7.6738784514668446`}}, {{9.947888531813271, 7.6738784514668446`}}}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["31",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{3.3069658042582786`, 
       8.192388970769274}}, {{3.3069658042582786`, 8.192388970769274}}}]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["32",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{6.1147600552665775`, 
       7.940214080175821}}, {{6.1147600552665775`, 7.940214080175821}}}]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["33",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{6.457372355404544, 
       5.419335973813326}}, {{6.457372355404544, 5.419335973813326}}}]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["34",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{7.680559182491385, 
       5.938922578748574}}, {{7.680559182491385, 5.938922578748574}}}]}, 
     {RGBColor[0.528488, 0.470624, 0.701351], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["35",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{0.06752484555807801, 
       1.089148752531587}}, {{0.06752484555807801, 1.089148752531587}}}]}, 
     {RGBColor[0.772079, 0.431554, 0.102387], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["36",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{8.420288166213556, 
       0.11350589908413966`}}, {{8.420288166213556, 0.11350589908413966`}}}]}, 
     {RGBColor[0.363898, 0.618501, 0.782349], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["37",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.363898, 0.618501, 0.782349], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{6.324470177087323, 
       6.6556605468188685`}}, {{6.324470177087323, 6.6556605468188685`}}}]}, 
     {RGBColor[1, 0.75, 0], PointSize[0.009166666666666668], 
      AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["38",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[1, 0.75, 0], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{5.637141218710164, 
       5.567916072422151}}, {{5.637141218710164, 5.567916072422151}}}]}, 
     {RGBColor[0.647624, 0.37816, 0.614037], PointSize[0.009166666666666668], 
      AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["39",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.647624, 0.37816, 0.614037], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{6.605362543576168, 
       1.5968366733934278`}}, {{6.605362543576168, 1.5968366733934278`}}}]}, 
     {RGBColor[0.571589, 0.586483, 0.], PointSize[0.009166666666666668], 
      AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["40",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.571589, 0.586483, 0.], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{4.489049310446785, 
       9.49612150054508}}, {{4.489049310446785, 9.49612150054508}}}]}, 
     {RGBColor[0.915, 0.3325, 0.2125], PointSize[0.009166666666666668], 
      AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["41",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.915, 0.3325, 0.2125], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{2.5069708550725385`, 
       9.42647360844713}}, {{2.5069708550725385`, 9.42647360844713}}}]}, 
     {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], PointSize[
      0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[InsetBox[
        StyleBox["42",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{0.9377577100151646, 
       3.100392253644339}}, {{0.9377577100151646, 3.100392253644339}}}]}, 
     {RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
      PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[InsetBox[
        StyleBox["43",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[
           0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{7.029052765855674, 
       4.551192764034374}}, {{7.029052765855674, 4.551192764034374}}}]}, 
     {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], PointSize[
      0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[InsetBox[
        StyleBox["44",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{1.9784534529687408`, 
       7.25879447786787}}, {{1.9784534529687408`, 7.25879447786787}}}]}, 
     {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], PointSize[
      0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[InsetBox[
        StyleBox["45",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{4.717607690536527, 
       7.518109302785167}}, {{4.717607690536527, 7.518109302785167}}}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["46",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{9.344209328727498, 
       5.478191428611684}}, {{9.344209328727498, 5.478191428611684}}}]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["47",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{0.8041564758432611, 
       2.701412163317622}}, {{0.8041564758432611, 2.701412163317622}}}]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["48",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{6.742036763129535, 
       5.1630330070678845`}}, {{6.742036763129535, 5.1630330070678845`}}}]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["49",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{8.74478432887632, 
       6.141194266842027}}, {{8.74478432887632, 6.141194266842027}}}]}, 
     {RGBColor[0.528488, 0.470624, 0.701351], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["50",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{0.6523148450044784, 
       6.513821397089937}}, {{0.6523148450044784, 6.513821397089937}}}]}, 
     {RGBColor[0.772079, 0.431554, 0.102387], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["51",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{2.868288042286774, 
       9.4888757966271}}, {{2.868288042286774, 9.4888757966271}}}]}, 
     {RGBColor[0.363898, 0.618501, 0.782349], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["52",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.363898, 0.618501, 0.782349], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{5.98071449956663, 
       0.22606967189489463`}}, {{5.98071449956663, 
       0.22606967189489463`}}}]}, 
     {RGBColor[1, 0.75, 0], PointSize[0.009166666666666668], 
      AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["53",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[1, 0.75, 0], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{2.253724951270782, 
       6.690586629904876}}, {{2.253724951270782, 6.690586629904876}}}]}, 
     {RGBColor[0.647624, 0.37816, 0.614037], PointSize[0.009166666666666668], 
      AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["54",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.647624, 0.37816, 0.614037], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{7.51373184092788, 
       5.004860444546779}}, {{7.51373184092788, 5.004860444546779}}}]}, 
     {RGBColor[0.571589, 0.586483, 0.], PointSize[0.009166666666666668], 
      AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["55",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.571589, 0.586483, 0.], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{9.210280163536623, 
       9.554989761713037}}, {{9.210280163536623, 9.554989761713037}}}]}, 
     {RGBColor[0.915, 0.3325, 0.2125], PointSize[0.009166666666666668], 
      AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["56",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.915, 0.3325, 0.2125], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{3.606850749137288, 
       3.0173101363792245`}}, {{3.606850749137288, 3.0173101363792245`}}}]}, 
     {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], PointSize[
      0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[InsetBox[
        StyleBox["57",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{6.495723664834351, 
       6.33448910458415}}, {{6.495723664834351, 6.33448910458415}}}]}, 
     {RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
      PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[InsetBox[
        StyleBox["58",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[
           0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{1.4616185570448215`, 
       7.333267928402777}}, {{1.4616185570448215`, 7.333267928402777}}}]}, 
     {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], PointSize[
      0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[InsetBox[
        StyleBox["59",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{8.877138602482844, 
       8.874108341124513}}, {{8.877138602482844, 8.874108341124513}}}]}, 
     {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], PointSize[
      0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[InsetBox[
        StyleBox["60",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{2.2063408657120576`, 
       3.0697221593751496`}}, {{2.2063408657120576`, 3.0697221593751496`}}}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["61",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{7.869780102117137, 
       9.235668706882581}}, {{7.869780102117137, 9.235668706882581}}}]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["62",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{7.782197549291556, 
       7.680829924667574}}, {{7.782197549291556, 7.680829924667574}}}]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["63",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{4.908223814528979, 
       3.3754825698259543`}}, {{4.908223814528979, 3.3754825698259543`}}}]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["64",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{5.728393858031068, 
       4.211774552521421}}, {{5.728393858031068, 4.211774552521421}}}]}, 
     {RGBColor[0.528488, 0.470624, 0.701351], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["65",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{9.4693112709217, 
       2.4248111693598533`}}, {{9.4693112709217, 2.4248111693598533`}}}]}, 
     {RGBColor[0.772079, 0.431554, 0.102387], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["66",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{9.608777821346283, 
       6.725659787425452}}, {{9.608777821346283, 6.725659787425452}}}]}, 
     {RGBColor[0.363898, 0.618501, 0.782349], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["67",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.363898, 0.618501, 0.782349], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{7.519098161278927, 
       4.610000395173506}}, {{7.519098161278927, 4.610000395173506}}}]}, 
     {RGBColor[1, 0.75, 0], PointSize[0.009166666666666668], 
      AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["68",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[1, 0.75, 0], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{4.979540450135796, 
       6.837141891873172}}, {{4.979540450135796, 6.837141891873172}}}]}, 
     {RGBColor[0.647624, 0.37816, 0.614037], PointSize[0.009166666666666668], 
      AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["69",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.647624, 0.37816, 0.614037], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{7.8345835657431095`, 
       4.380167198053462}}, {{7.8345835657431095`, 4.380167198053462}}}]}, 
     {RGBColor[0.571589, 0.586483, 0.], PointSize[0.009166666666666668], 
      AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["70",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.571589, 0.586483, 0.], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{9.145804073653995, 
       1.4797202597114327`}}, {{9.145804073653995, 1.4797202597114327`}}}]}, 
     {RGBColor[0.915, 0.3325, 0.2125], PointSize[0.009166666666666668], 
      AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["71",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.915, 0.3325, 0.2125], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{6.6635838570404, 
       0.7523603596560469}}, {{6.6635838570404, 0.7523603596560469}}}]}, 
     {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], PointSize[
      0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[InsetBox[
        StyleBox["72",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{8.979586490160264, 
       2.0742636791476197`}}, {{8.979586490160264, 2.0742636791476197`}}}]}, 
     {RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
      PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[InsetBox[
        StyleBox["73",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[
           0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{8.781247694445165, 
       3.3124193077960924`}}, {{8.781247694445165, 3.3124193077960924`}}}]}, 
     {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], PointSize[
      0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[InsetBox[
        StyleBox["74",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{5.585860559740107, 
       3.289642232126973}}, {{5.585860559740107, 3.289642232126973}}}]}, 
     {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], PointSize[
      0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[InsetBox[
        StyleBox["75",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{2.0480660326225264`, 
       2.807229312847592}}, {{2.0480660326225264`, 2.807229312847592}}}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["76",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{8.251622314044413, 
       5.3698462262446895`}}, {{8.251622314044413, 5.3698462262446895`}}}]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["77",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{2.7853268532359743`, 
       4.64629917481566}}, {{2.7853268532359743`, 4.64629917481566}}}]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["78",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{4.562386340964353, 
       7.108359954516025}}, {{4.562386340964353, 7.108359954516025}}}]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["79",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{5.973246777014384, 
       3.2673438811359135`}}, {{5.973246777014384, 3.2673438811359135`}}}]}, 
     {RGBColor[0.528488, 0.470624, 0.701351], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["80",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{6.139600580729915, 
       9.867710007032104}}, {{6.139600580729915, 9.867710007032104}}}]}, 
     {RGBColor[0.772079, 0.431554, 0.102387], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["81",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{6.358532163112411, 
       6.375647646409055}}, {{6.358532163112411, 6.375647646409055}}}]}, 
     {RGBColor[0.363898, 0.618501, 0.782349], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["82",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.363898, 0.618501, 0.782349], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{5.275004534234419, 
       7.271992910087029}}, {{5.275004534234419, 7.271992910087029}}}]}, 
     {RGBColor[1, 0.75, 0], PointSize[0.009166666666666668], 
      AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["83",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[1, 0.75, 0], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{5.427076471896334, 
       7.157117590188285}}, {{5.427076471896334, 7.157117590188285}}}]}, 
     {RGBColor[0.647624, 0.37816, 0.614037], PointSize[0.009166666666666668], 
      AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["84",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.647624, 0.37816, 0.614037], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{0.10022716732380117`, 
       0.6332248160599153}}, {{0.10022716732380117`, 
       0.6332248160599153}}}]}, 
     {RGBColor[0.571589, 0.586483, 0.], PointSize[0.009166666666666668], 
      AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["85",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.571589, 0.586483, 0.], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{7.000711470946878, 
       5.603043416627672}}, {{7.000711470946878, 5.603043416627672}}}]}, 
     {RGBColor[0.915, 0.3325, 0.2125], PointSize[0.009166666666666668], 
      AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["86",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.915, 0.3325, 0.2125], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{0.6662792233276422, 
       2.8996207982521693`}}, {{0.6662792233276422, 
       2.8996207982521693`}}}]}, 
     {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], PointSize[
      0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[InsetBox[
        StyleBox["87",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{0.02211966743965588, 
       7.285278328750733}}, {{0.02211966743965588, 7.285278328750733}}}]}, 
     {RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
      PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[InsetBox[
        StyleBox["88",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[
           0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{0.07444294199273677, 
       6.046429796233789}}, {{0.07444294199273677, 6.046429796233789}}}]}, 
     {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], PointSize[
      0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[InsetBox[
        StyleBox["89",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{4.89154926031525, 
       3.1940265218928996`}}, {{4.89154926031525, 3.1940265218928996`}}}]}, 
     {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], PointSize[
      0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[InsetBox[
        StyleBox["90",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{6.907763579219193, 
       6.36525624827534}}, {{6.907763579219193, 6.36525624827534}}}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["91",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{3.6844949519175545`, 
       0.12791376990131953`}}, {{3.6844949519175545`, 
       0.12791376990131953`}}}]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["92",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{7.429621020960788, 
       1.7102009470394322`}}, {{7.429621020960788, 1.7102009470394322`}}}]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["93",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{5.8399815615059145`, 
       2.567157978733717}}, {{5.8399815615059145`, 2.567157978733717}}}]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["94",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{8.28064280716453, 
       6.751656074511353}}, {{8.28064280716453, 6.751656074511353}}}]}, 
     {RGBColor[0.528488, 0.470624, 0.701351], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["95",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{6.223565772193947, 
       9.482643380007543}}, {{6.223565772193947, 9.482643380007543}}}]}, 
     {RGBColor[0.772079, 0.431554, 0.102387], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["96",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{4.12223743410019, 
       6.051185657940165}}, {{4.12223743410019, 6.051185657940165}}}]}, 
     {RGBColor[0.363898, 0.618501, 0.782349], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["97",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.363898, 0.618501, 0.782349], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{4.741307376141778, 
       2.4109575769619696`}}, {{4.741307376141778, 2.4109575769619696`}}}]}, 
     {RGBColor[1, 0.75, 0], PointSize[0.009166666666666668], 
      AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["98",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[1, 0.75, 0], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{1.8442240161804717`, 
       7.83920949800121}}, {{1.8442240161804717`, 7.83920949800121}}}]}, 
     {RGBColor[0.647624, 0.37816, 0.614037], PointSize[0.009166666666666668], 
      AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["99",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.647624, 0.37816, 0.614037], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{5.92316404008327, 
       3.6211629459411236`}}, {{5.92316404008327, 3.6211629459411236`}}}]}, 
     {RGBColor[0.571589, 0.586483, 0.], PointSize[0.009166666666666668], 
      AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["100",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.571589, 0.586483, 0.], 
           AbsoluteThickness[1.6]]}], {0., 0.}], {{{1.2626015206391203`, 
       5.43807803774211}}, {{1.2626015206391203`, 
       5.43807803774211}}}]}}, {{}, {}}}},
  Frame->True,
  ImageSize->{614.47265625, Automatic},
  PlotRange->{{0, 10}, {0, 10}}]], "Output",
 CellChangeTimes->{{3.913389256548586*^9, 3.913389276942061*^9}, 
   3.91339261905481*^9, 3.9133937518490953`*^9, 3.913394859166481*^9, {
   3.913400161740138*^9, 3.9134001904095287`*^9}, 3.913467470312899*^9, 
   3.913473517375904*^9, 3.913554351431139*^9, {3.913554447649437*^9, 
   3.913554460114872*^9}, {3.9135544920494957`*^9, 3.913554510567788*^9}, {
   3.913554577176299*^9, 3.91355461195508*^9}, {3.913554897180294*^9, 
   3.913554956658031*^9}, {3.913554993156229*^9, 3.913555004856683*^9}, 
   3.9135563852631197`*^9, 3.913558359040283*^9, 3.913558458179389*^9, 
   3.9135586363080177`*^9, 3.913559216154945*^9, 3.913560136911294*^9, {
   3.913724805835904*^9, 3.913724875599822*^9}, {3.91372497583512*^9, 
   3.913725020936162*^9}, {3.913725101059161*^9, 3.913725107298311*^9}, {
   3.9137252027885447`*^9, 3.913725219231175*^9}, {3.9137265737533817`*^9, 
   3.9137265891498327`*^9}, 3.913726738674016*^9, 3.913727213816017*^9, 
   3.913727267064411*^9, 3.9137274221320887`*^9, 3.913742186690436*^9, 
   3.915807113912904*^9, 3.9158071669144087`*^9, 3.915807677606806*^9, 
   3.915809506122904*^9, {3.915809559475716*^9, 3.91580961876797*^9}},
 CellLabel->"Out[52]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
R8L40k/NnCCrZz/+mDlBzvz96acrYh3du7cBjEzMBx/k9e5Ix8sCzKZNW9BN
Q3jb3oieF+BggP9VKZ+9j2QYP1CE8q9i8AIrPzlFsUqVWGfwFE7J7Ihecply
vAGSQAbQBCQRlqQVqpf1Zz8sOGy+/+/k/aqdlgi7c0q8RJAi8aKLuOgFuxX8
cfHFngmgpp3Pkrr/m6SGWCgR4e133vGfdenCj8P6XWKkefOYkNYZY1+bN8fM
dezShZE/ofmmTeN4P8tcgNatbS1nkpU+0sWLoNbkyUw6mTzUtu3ZkE76tV9/
PdYZ3HIfZoSsipk0iVPmflqcR0Ymb6Ap8w+rTp9lGnJh785dke9tA3LS4NFD
IS6NQ7KvFSxBIQ621UKcPTRgZZToalTGBXtiVjKTR7bXKSqyhmFFdXDtNrWo
3WdqwXMfqgUtP1Kr3h+mQkUWE4YKi9Wyzl+a7xa27qHS//v9hXQ1mclz/DhT
FQlS9HGbNkxV2kK33eapKkeJffzx83QonCA2GuofW1CgOlEASp4ifVi5gwfj
SqEx55xAIlGlr3NcxjqN20ZDOcik2Hbt3PiGBNuU0mslMvmNtQFWSkjwew00
tv0i43hRgKAcgfk421ffHPEiHWcTPcz1LNUqGwoteP4jta7XGHVsd47KXbpJ
U7GPWvG29WCu7PqVSn2ptzr6236Vl75DLWzzidry1bRqdEnyVGtxwOpDpqM/
+ijfJSH2Bg3iqAoA+HH8CyPw0ifi33h1NDuf75y0FI7Zn77PvGPbS27LiRNb
0s/AjIlutIVUS5fYw3yH0giv28ktd0aKJ9jm7V7jxjqDiS01P5xvx497YmNa
Ln13771cvQTBil+Q02Yhy12DsKflcXZamX++jh35FniX4jiizvnnk/smd9km
NV/vQr+6iWrn5AVqYSvjcVa/Z+WqUEERrzy+W2C/8/EoWTN9111Md+QL04M1
bsx0p6yMq67iDO/J7ceqeb1mqEO/5ep39l8q9P1TussK+S1buAgVz4tcvjJl
/LqgPsVl/HC5sZReEyacDd3lcK6ZM2OdcQOdJ13iWPytW/2ML+xm2gNen5vN
a38hKJ1TUoyjiCfnSqX4zTecZy4hav36lsznqkgobMiW1neCKs7JU4fXZqhF
Hfqqtd2/MXdckleglr4xQM1/XgvrVh+rtD7jDVuES0KezNJCbtOGySwjyzfe
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
oeJY+9brMNr41zqzR45U49aGfPiwhatWadPVQtfmo49qLdDPGINoQH29ybFs
2TKv/k9xl156KWp6WTw3U4ZQhOJn7fsd1aB1y6ZnSpD8tublP6ZwJasJlmui
yzPO0FVo3pAN+95882Fy2MaVzz5bc+0//FASfBLm8J1ot3PJj0OSjYXuq6/G
CGETt3jycC/VfpdJrrHX7JJhzsfXZaqX50it3dcDrlbMWTz5rQxzquZOST3X
cHhapatjtiNeEy8NKBOjj7o+nDusx38/TEBJaiOdWOQeOIOGD9eooRWgw4er
t1fssa22St2ciSfIm5ZnUbfEiqStbujDfZo8HM+H3RxY+NKl2rGz0AF66qk6
nONnXE9rvDmDJn2NN3+vv/56N3q06GzNsnZMXFo79FhX55Fm7QeXecRp7uqW
BN2v5rV9vCq0m6tb8Imrm/asR6YWnjXdI86UzC0J97W7CpOMUFdcyneSUVwK
l7qos6rvAgmOH3CXXfKWHyFOv4uaN1wkmVv6R9bVVGda0Bf3HeNqli9wP37y
kser7d3Yq1tnL5bhmP//ReNf92x3pvvsjrbgnGaTkDBqc8HwitbWltoVQh97
7JFkIDI2BnMPltvgRrFeS+hu4kTVB+zY6RNPVGwSe2TXXVOveJubceqpOpwe
e0TcUFtscbo8F1lsKYHy2LlzK+RnRAA+FfkZ87Ku7mdwSdJf634cE35eNl2Z
zRpvca2d0CPgS9+Wbu24m5RM1wz8g6t9I/BprdFCt7UtYEHpm29WXrTvvvp0
DWTbguZXXtFUCEhMDuNI9qSe8z4Qo2zRIiERZEiymNfItT2rrXSJieOSsrD4
izcDk5k3Nb5REzelz9mZys3fR1fu4CY9dIpXp9r481pl4s2Lv4j2FUFZsUln
mHPV1RWyRMAACuy2W8Ii3j462VRrh3fZ26DtzZvXWjYHMhBgb7GFYpE4ONq2
TZli5JgIusTIv86so+GQPGHPPf8mD8e1aikBXJk6tVzuaPMxo6PzN/8XHjXL
VJuM7ww+yptcXyC8Msu9buG47Pw1L+2eWfN1P4x2a6c8lv229uNu4d0a5fEB
DkC0gKyGbbdNMi34rbMrNHb7/zg7DziriuuPL26h2I3YFRQlJho1iV0jJiaW
2KKJRhM7ijEI2BDsGisWUKPRv72BvUNARapIlSIdqcuCS6/rui7r/Od7Z86Z
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
6G3tnhk6y13y4ig3cMZit6zGT+Kw2e5Cz6cqlwdI2hq/qW79YKLnYyOzxh/a
N+HFF/NhzFifQK0NG2rl1iB28C5qV7YKCqXkHwuSGTFCQ1IwfvDOBx2UrH54
Eb4zZyw4CWJWVCSgATpcqE6Vh7ZH3vij5FXqrnt4pnv09fm5fcbpr/ZbLD9x
j7+5wF33yCzlW7YgwoABSlnsejl85JFCWTXVy92nF/7LLRo5eT3KYicPvuL+
TL0SylLzEEYEoMVSVuMo/ebNSyg4eLQtw8UxoI/RAtZsZOvVhfq8FX2mDB2m
hNrGk5lCIKVxKT76KLWOQKVN+0cKS97138naGI33qLnLorJY4cZVLneXvzw6
Y1draiP7u+QSHSzsItYF1W2FyM+5IKKHTsLS6IdAerCT6+pimdlondpqBCjx
tbXauJOviSbttVeaUy5LSGfZshJFBks7aT/3aiAjAAphQDhsYvRYPDAbYGUv
9q52V3pWNmTcKrdiVb3r2bc6O71qca2ysqUr6zL5yTFlZbb55/Dhkqe7bsKD
ru7lXV3d89v5/+/i1o29O4XJ5/Z23/Xa23/3E1f3wvau/j3PnWuXbSFXtPjW
3XaTbsnz+g53Ay+6yw1sey80WRoPr61a7D49/19u2FUPQ6Ia5cemZ2ibbZZm
E9sft8FXX2miROYnKXQtIPujdqEYMTiB1SwRr7Nna9gP3oOqu/POiQXi+kEl
9zSgLfJQ78RLy4ZZtChK1aZuwvyVGXm+Proy4303vPOluzQ07nMrPF+ctXit
TiGtIZG4NETKXgE/qU/wu9/pOqsXkj0WNNP1sZCEERk+KmVNjRr31oMB0tIL
3L/K5XgSIi2FWVA4BPx5WrXYosTWrdOS4cS0bN4Bu/6++yQ5twihSij7wZfm
Z9qavtu1U9Pv3ucq3b0vBCe/ZgUzF3KX8eNDjGAr1/BVr4w41426xT9ytVv3
5aMZQTZ89SrE6L57fnv3Xb8/uYalE1zDrDc8wbZyde8crlBLqZvoLWiJJY++
/dnMxICLyojmvj80Owb31NAGqCy0YWtTCQRt0qRUaBLGU1gkAIYUi+DsL3OJ
Nm77vCHsVq3SCAnxYGA/RxyRaBNVDIY6c2bC89ni+HfcIWT5dCaeU7e3LzzH
hEwhyd5fLvCiemRJaRzJje996W5490s9N+NLximMohFXNQy+Wb5+JW+cRsQy
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
wUqpjWtMJpks7caNaiTgn6U2+bLaWsWl2w0T339fqW2Ru7fe2kJOhj8imVOx
ONXVWuSzc4a++MITvEEWakAfHEaJ/k7M+sqV2l/N/ohFfUR5NBUGhMqUDaxH
jPByn+4Frc2peBl2Yhk1x8GD2wjZZQaFJTuSG7DkinLDF6c5A4VZr56SHZcM
150af3W1bviISreGA79vyxbtgbGzuIcPV7JzL/LxmWfqFlisQzuVAoIuWaLD
oGyfzYUXapoukj3Y9QrvUbPysX3UXLlr8g9Oweh8qpxeokZK1dBNLBtt2ykV
5CWqqnbJYZmyAoCn9ViYNDtp0jVyx2hD789GVnh5TX+hlX8aGFATxC2GFWxI
hMYGNLBli6avEDXLCjRJTY0OQrUNN2++qf17AtBGcmpr1Ve2Mw5RhWPHxlnW
uK3ydI0aKR8i1LvQWPiADNIwBPaKZA05NKR506bCNXIpFpvdYeDii3O1ujG1
/IEmO/30SL9zztFfNso5Wi0hnp6lEiXWRYuulYcgni/eCw/yU9dPTKxFrhDh
2m+/2P6JfsZTBKxeV6flB4YT2CsS6G7erJ2S1mIOHKh8sZPTZszQubVIlk0J
Pf54HA1lkwODB/tsWMP4cyIJdCyKE9VEwIWubtQo8ovf8hi4EKhMwkR81FWr
Yg9UcS/S0KGFvMUQjXaigFs78+fll0PvZvawXYVsFgjCC6do3brrhQHwn7io
GFBOfi9JYncwd4u5aNIkMgr3GhcfS1RX11yuCO7LMookyObN2ipu3dX+/ZVR
1p977jmZ0J9e12rjtm3jyMlsUkGHZtjMW6tWPhip8FoBkeJpYTH2ECNYv37k
GwYKfcfNoO+IdYK+076ZnP6lPAYEvmk92W6kiKpduzZ3gcmpUueqOM1LhgyG
JYL0L/GPVJytAMsUSkTargo8DbD8HnvkBsUK9kO12JVBK0R1tUamNB/IV88/
r9yDUPJx+/Y6+RxMo23FO+UU3XshLxuhlTrrhXTvrrIMBIE6L8EGrg7sKivb
SkuisZEypjPQmea0pCLEcrqedoR7mFQLMHIPksc9jcmw/jZNBkUffbSTMAP/
zifXItMIBWCmFQLCJxbsLrtsHWsjh/Pn61aZqCPLNw6rqlIGxQ0nIaF+bKfR
nXSSNlbDG0slgoqaGh1mZJMZDz+sXLNY6bfe2ltOxsNurSwzupIUN7oStY+u
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
Z1MfVZF58d8/Tl769090Nw6bkD/5ZL04JCIjaW0F6vfLdExhHMIJSkAOf+AB
BYyRUSje+RnyUhOxC9Vsy2y6HEpiC7az9HoCJJN1+tVXMVEW7HgqD23aqDwA
BJTbWr36YiEfK13UY1kKbIzhsHSwkb8wQoGnzUPSgV9bq8hOtI/1p9Bbffro
5DFUBToAz6NBg4yqwAbOmVPIWOWwGZ0+KT5y8B90rcrIDfe7Q+V5sNwWxnH3
3doqPmHS3clzLx2eqgcjDmiPp/rt7oRwQvLpZw+7QLGeu5uBWp8ozpW7la6h
L46ynwQQFwI5MnBizopoDIPjFBMzgraqXr0++ejmXsnIy+9KXx91fiypWrZG
ItdPuz+fvHeF+8q9Prmtd1JTVR1bvxGT0KNVYq9MCsy5qCoNIVBLpWHduuCR
CDjWunswnx/Nmxd1ZBiLnx68777qiyAXQpHGjVW12DzqlVfubn9NNIxWNT15
JEzIUvteDBlRmEZ7dk50SerNtJDHxg0iAXDkkVGjyM4YTqOoaPC+OGhDBaON
Nm/W/fHs/JxmwnDMpBXi8eO9RqkfpcanFfq//NPksd4+rTBqTPu4y5LNhD/0
0MFWzflEXzYtDBm0mBhSWRLphFSW10K7JmOueygZfd2Dyapp85INi5cl4278
ZzLm+odTPTbnlZFOVu5Mvh03LalcsiL97sMb/xkDMIqWxXtP4vNAlKqqyPYA
R0/Z/u9/B5nROybQwYtduDA+sDMbmsWaP1/z20R2QodjjlFBsWnKL77QPS9Y
9niPaHPTTkgyiwIzKcq6Ot3OALVr99Dmtj7++EyrblgjZJkrKkrtzVMDmTs3
LmK/h9rWbAmeiTaX2iCgslLFxbaJ4vY5L0FwH84JSZYt+zR9p7GEHT3WrJnO
8WeZcCqr3jHtATHRVA7PTuH2ctEwmdbrtWTdgjTVk/6tX7wiea/lnUnVirXu
tRp5UM+icumq5L3L70zWfLUoO9Q/NHvo5THVpIs2bYo2IbRdp9y++GLRJyU+
YuP+lyyJ21394x9RLNq1U7Gwszk6dNDt/+zgn1//Wmf9EzURZBR1mXKzxC0k
VevqfipiQQXBAvORtTlzzpXHxEhxsh//OOoPssYoKKc/ZLRuulQ9zCuSg2UR
jL2O1rYrfdYslQm8QwvEPuaYgPjLT1TL2Ng0jV68nw2ACnJLzp5oC6hNVe27
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
30151ea+d5K3x8/Nc0+UXdkxJ83kroiZKQVaWBBFAWpV7r1UanaWXVTo5WrH
Hqvssj7S8cdLheHrgaOSz//5SvJBm/tgm/ih9MmBmB/X6Z9wS80b+Qc7wQd7
M2eOtj3YnXBHjlRm2ee/7TZllt8cWX6tzJI2iLKygm5dg4tpfdju3QuK57Je
KZrKaSnPrF2SJ16bklz7wAihUbqD7ltj56Q+Cn+DRs1KfZWr7x8O1xQ4mjOk
5GC5PRK7uEIW60N9nRk+SaL1zp3iWshYCPgujJfUHUjs9h2dOgnr5r4+Ohl3
U88UcOpYJy7l/DfGph+xyErlGpzdbo1emirEPeUCdhPG775Tvtmms65dlW92
hNAHHyjfJMXmYhxNxVqnFLU/YUJBiUxlRgwQ9zNtWiDyLsn6qmpnxIYmvV79
NPUtH37pk6S1M2pV1enc9mTw6K+SWx4blSpPx7cj8pZ///7aJ0ilFCkpL4/u
JBacB/nss4IACnaQZZqAtcN/+/RRblmPe/z40AbrGCSwB/qKxOevLwwq3jYG
wowapeNURfb33Tfmqmx+69xzlTsWqzp6tHInAtwLuu+a3S4ej7SyMuosuyPN
zTdLr/isRatSzQfh2977TvL+pAVeyOpn+GCd6RNO0FY9ityUSyzohgeFbY77
As7ZWT7YhPQJJygfZECub6cS+1S1cm2ybt6S9J1GXFDfDmRGOAYOzHTZyldn
nqk1PDrUbU6DGt6XX+oWJTb2/fDDM+RjO01i7VpdKWhWC4k94YTgqpVlw3Gc
qHXrFHW7cm1VsmBJitaLKytn0Iai9AHNQO9i0Ax+6qxZCnXbKR6UeRLJJUtT
56CgEskl48wifWKLS/BLKDb8WpzlX/6ixVxSjAHDpzcPzsDP9YvAC2uHPvpI
SW83X54+XZcBikiAod57j43txa1Wr7xSuExOZ/2i7t1/IDdJdQ/NYoEupJ5Y
3l9/HQ7fYQrnbhTx7LNKXEup3/xGDaZtDA4Gs4kcYocO9O2r1Twe1eoUMosp
3MQ/AsjaMGFNgUdxFABppjPyLvDee7r9psUJIA/vvRdnUNgwCYSAM+JK5+wk
CO0fQBhgtMVQYKzh8oIFOmJ6Z+kMMFWudtJJSmcqgfKxVAbC0rRg6c6d4xwk
XO9oCM6VBWMrKNR+eA4Sy3bTRyachBtTQJ7vlfCviROV2HYZvfCC4u5sAhNX
ZuXKODOKq8lNI5kzZxb+IN/lDFJQKwSyiLuwFOfcuEPffFOQ7b53iuJBXUlg
FXSHKlHbl7V8ucbJxXvRtm5d0OZ3u9OfTPsv23pEhZM+jU9s/gWF6b5TGbex
1uTJSvYISwEGp2RnEdkRxc2bx9ZMi4y7/fY/ycfZ/eW0uQStxJlsuR83ADu1
dKmO3d9BYmvVrY2pGr/0kiKkYLsgFxs1UjqTbLGd4uedV1A9J7mmpk0LSuTi
Pfv++teYMbUKjEu5NaqybZfKlClKZJtT6dKlhZwJjK/dXqpt24KOPLQ+K5Kw
YUNBKW2BdPvso90dAFcAmFlKE9iyhJz4t/4PKW3LC6eeqpS2NaSjjtLsHQgE
G3KedpriZFdcdU6y7tG/y+2m/6578t5keatfmoVU6juq5Pjf/vZsOTXRDLBR
+er002PYUbytS1VV4Xo5nd0sfOpUZYrFIbVte4aciSSDrV8NHBjSwwEMY8O3
QYNCA1RptlF/+nTdioRwNWwWmEG7gMLRjXt3kinhTqSAHlqx1GugiV/upF07
nxMv9+IBWEG+YhnX1u40c6z+6dLlLDk7C89GZj57pPyBpXZLICfqyh+LaZg2
Tflja60XX/xLORMmRT7myRcv1uayTBkIm+6sr/In21av+waRTvPZ+8gf7p3c
4dq1hTY7xx+tsNoOqgEDlDU2UhkxIjP5SAqgsuCrq4UNK2/4fbLskpN4uXf8
Wy5s0b/AqoZ5F3rxRS0KA3SWjzFRs2dH88WQHVsw7tu3cJ2czuJWv/xSWWSH
S5911i/lcUg7WYOHq1tb+0O5EMpVzLZPvAQrUFrc3q4jUan9+Zxo5BKyTFl0
/frC1f8hl6wnd/rpyiXZ8JybrK39mTwW/WlW/xAnrF/v7UJFsq7XHW4ROWVV
XZWaz+VXnpWs7XF7mgHZ7oKybSaffaaVZrrjrR564YVYCrVAeSK3CRPi5mU2
BzlzprLKNsmdeKJehWSznQ1/8cVxmp2duHvnna3l42yLuSQM03Sdp05kEUEe
M+lcQN7uP2FRiCclO1ueyla0tsThIiz77KN8wk7YIgOHL18uqmjl1b9J1vo6
vyg9Lcrm8kcsdEmagVE9hBNp1elVV8V9E2zIDHhh2bLw/EV24quvlD92yOsR
R+iCJRtnY3O3KHUOpY2NwItt3BhsfINsqO0L1p6wRAWHHaYJPxQNHuCmTWGt
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
m/79vbYqFOr9P2S2bpQ=\
\>", "ImageResolution" -> \
96.],ExpressionUUID->"0ada1aec-f9f2-42e9-a388-df17c6e7f283"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "The", " ", "neighbor", " ", "of", " ", "cell", " ", "1", " ", "from", " ", 
   "the", " ", "original", " ", "cellGPU", " ", "code", " ", "is", " ", "the",
    " ", "same", " ", "as", " ", "Mathematica"}], "*)"}]], "Input",
 CellChangeTimes->{{3.915809639043662*^9, 
  3.915809732507019*^9}},ExpressionUUID->"adb9bb65-ccf3-4658-8199-\
39f05eac8412"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Normal", "[", 
    RowBox[{"data", "[", 
     RowBox[{"[", 
      RowBox[{"6", ",", "1"}], "]"}], "]"}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"1", ";;", "9"}], "]"}], "]"}], "+", "1"}]], "Input",
 CellChangeTimes->{{3.915807139077901*^9, 3.9158071427188473`*^9}, {
  3.915809629988434*^9, 3.915809635258741*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"f2dd71f0-5c5e-41d6-abc6-9f573b84736e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "93", ",", "97", ",", "28", ",", "22", ",", "3", ",", "0", ",", "0", ",", 
   "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.915807139697921*^9, 3.915807143007114*^9}, 
   3.915807677677897*^9, 3.915809636323595*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"ea390e9c-a86d-483f-9f87-8f0bd577cd06"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{960, 720},
WindowMargins->{{0, Automatic}, {0, Automatic}},
DockedCells->{},
FrontEndVersion->"13.1 for Linux x86 (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"3df13c3c-03a9-455f-ac08-6a5116348bd4"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 955, 15, 104, "Text",ExpressionUUID->"8d0fc270-cc72-4f23-9ef9-6642b4198300"],
Cell[CellGroupData[{
Cell[1538, 39, 165, 3, 68, "Section",ExpressionUUID->"55216139-4dd1-47d1-b3e7-3efeeb28d2c0"],
Cell[1706, 44, 169, 2, 30, "Input",ExpressionUUID->"60971f4b-0750-4d2f-9e72-24ba65137fb2"],
Cell[1878, 48, 3666, 91, 367, "Input",ExpressionUUID->"4df5e789-61f6-4abc-b9ca-476070b47347"],
Cell[5547, 141, 2991, 81, 94, "Input",ExpressionUUID->"97592e27-686d-40d1-af7f-e41f521bb520"],
Cell[8541, 224, 5451, 148, 292, "Input",ExpressionUUID->"3ff30ab7-2c15-4798-8fd6-e2fed1e9b966"],
Cell[13995, 374, 81805, 2129, 3639, "Input",ExpressionUUID->"b317a457-21a4-44d5-b47a-f4da402f9fd1"],
Cell[95803, 2505, 8205, 215, 294, "Input",ExpressionUUID->"8fb65a32-ade6-47fc-90e0-ec83862c1d3d"],
Cell[104011, 2722, 6733, 152, 199, "Input",ExpressionUUID->"084a8052-a8ea-415c-ba1f-e49291980e5e"],
Cell[110747, 2876, 2871, 69, 115, "Input",ExpressionUUID->"1075be55-173e-4441-a5ff-043fd0bf882f"],
Cell[113621, 2947, 607, 12, 30, "Input",ExpressionUUID->"f198c114-d3d9-456f-92dd-4f1160169939"],
Cell[114231, 2961, 5563, 137, 346, "Input",ExpressionUUID->"7a8148f7-b39b-403d-a384-94edf263cde6"],
Cell[119797, 3100, 7477, 185, 291, "Input",ExpressionUUID->"b8302214-8022-48c4-9cbc-ff24758ebba7"],
Cell[127277, 3287, 6737, 174, 262, "Input",ExpressionUUID->"e0864ef4-a0c2-4055-9af3-189c094808d0"]
}, Closed]],
Cell[CellGroupData[{
Cell[134051, 3466, 164, 3, 54, "Section",ExpressionUUID->"d94f9a14-62f1-49f6-8b5a-e9ec9ecfdf7e"],
Cell[134218, 3471, 447, 9, 38, "Input",ExpressionUUID->"7eba5210-dcce-495b-bdf7-67c18d8ab094"],
Cell[134668, 3482, 16695, 429, 661, "Input",ExpressionUUID->"967a39b9-849d-4c27-bc3a-d4d20cb8f69b"]
}, Closed]],
Cell[CellGroupData[{
Cell[151400, 3916, 183, 3, 54, "Section",ExpressionUUID->"7c3b2c47-fe19-4dde-81f5-bec6171cb843"],
Cell[CellGroupData[{
Cell[151608, 3923, 814, 14, 92, "Input",ExpressionUUID->"c09bc8d5-b04c-4b76-9ae8-e7bd10cd5372"],
Cell[152425, 3939, 134048, 2469, 394, "Output",ExpressionUUID->"0d6d08bb-769a-47c3-9904-2d1267246837"]
}, Open  ]],
Cell[286488, 6411, 303, 6, 29, "Input",ExpressionUUID->"41b3d4fb-9436-46a8-ad75-2bbbead72d04"],
Cell[CellGroupData[{
Cell[286816, 6421, 468, 11, 29, "Input",ExpressionUUID->"ce6226ac-3155-49e6-909b-f738ca08cc93"],
Cell[287287, 6434, 4025, 69, 220, "Output",ExpressionUUID->"ad7fcc75-93b6-4fad-a634-feb5ad6f0cf4"]
}, Open  ]],
Cell[291327, 6506, 303, 6, 32, "Input",ExpressionUUID->"d3573edb-c5d5-44d9-8a10-fd10f3d67305"],
Cell[CellGroupData[{
Cell[291655, 6516, 439, 10, 29, "Input",ExpressionUUID->"702822dd-a7fa-4f72-ad3b-0b6bf390baec"],
Cell[292097, 6528, 3954, 68, 220, "Output",ExpressionUUID->"7ef1caa8-57f5-4dee-9703-c27accbf421d"]
}, Open  ]],
Cell[296066, 6599, 1134, 28, 29, "Input",ExpressionUUID->"731b91b0-0a28-42a9-9a13-4600e5c0ba50"],
Cell[297203, 6629, 598, 12, 52, "Input",ExpressionUUID->"71f9168c-b3b7-44c7-9337-5f3e93dbdc60"],
Cell[297804, 6643, 391, 10, 29, "Input",ExpressionUUID->"5f8f28a4-63c5-41cb-94db-65be9938c066"],
Cell[CellGroupData[{
Cell[298220, 6657, 434, 11, 29, "Input",ExpressionUUID->"45ea11a2-3460-4acb-bcdb-80fc99ca19bb"],
Cell[298657, 6670, 4351, 76, 240, "Output",ExpressionUUID->"c771e1b6-eee4-4def-aedc-a1a7a0c55d52"]
}, Open  ]],
Cell[CellGroupData[{
Cell[303045, 6751, 429, 11, 29, "Input",ExpressionUUID->"66e4c77b-cc43-4adb-864a-40b762d722d7"],
Cell[303477, 6764, 4068, 70, 220, "Output",ExpressionUUID->"d846c400-69d0-4820-b782-104dc202e47e"]
}, Open  ]],
Cell[307560, 6837, 147, 2, 29, "Input",ExpressionUUID->"917ccdbc-12c0-4464-8d48-1641d74ddfa6"],
Cell[307710, 6841, 490, 9, 53, "Input",ExpressionUUID->"2328c990-5d90-4764-b4cd-581861b9444b"],
Cell[308203, 6852, 580, 15, 29, "Input",ExpressionUUID->"ea8e49db-24ef-4907-9936-eff1c6921323"],
Cell[CellGroupData[{
Cell[308808, 6871, 508, 12, 29, "Input",ExpressionUUID->"bdf915a4-cc71-45bc-9aab-b9e3e7a0d7dc"],
Cell[309319, 6885, 4035, 72, 240, "Output",ExpressionUUID->"d078b938-168d-4bd2-8dd6-b35bcb028433"]
}, Open  ]],
Cell[CellGroupData[{
Cell[313391, 6962, 457, 12, 29, "Input",ExpressionUUID->"d4c52d0c-904a-4f28-95a2-4f68ec0ccf19"],
Cell[313851, 6976, 3781, 66, 220, "Output",ExpressionUUID->"da9c7a02-0b41-44e9-88da-5264fd43b5ab"]
}, Open  ]],
Cell[317647, 7045, 332, 7, 32, "Input",ExpressionUUID->"7a855fc2-c3ad-423f-9dd4-0a421f7519e0"],
Cell[317982, 7054, 542, 13, 53, "Input",ExpressionUUID->"3615a804-a658-49e1-8e40-4f63fdb2855a"],
Cell[CellGroupData[{
Cell[318549, 7071, 747, 20, 29, "Input",ExpressionUUID->"658fadc1-ef3f-47c9-94a1-c6049e7586e9"],
Cell[319299, 7093, 4129, 72, 220, "Output",ExpressionUUID->"79f9d402-ca81-4fda-adc0-5ecd3180f4fb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[323465, 7170, 673, 19, 29, "Input",ExpressionUUID->"59dd638c-1905-443a-ab64-1e9cfeb64885"],
Cell[324141, 7191, 4526, 83, 326, "Output",ExpressionUUID->"bfa6947a-bbfc-481b-95e7-1d473fe4fd45"]
}, Open  ]],
Cell[328682, 7277, 406, 9, 32, "Input",ExpressionUUID->"41e73afe-407d-4c99-b901-35867e32aea7"],
Cell[329091, 7288, 3359, 105, 195, "Input",ExpressionUUID->"42c14c50-27b1-4f6c-a646-bb73eba559dd"],
Cell[332453, 7395, 1185, 32, 51, "Input",ExpressionUUID->"9153ada1-7504-407c-8d70-54d1aa83ecf8"],
Cell[CellGroupData[{
Cell[333663, 7431, 167, 3, 29, "Input",ExpressionUUID->"3fb6401b-75c1-4579-aa87-6564f20a17b1"],
Cell[333833, 7436, 227, 4, 33, "Output",ExpressionUUID->"f8036965-7d45-470f-96c3-b06cfe8f2185"]
}, Open  ]],
Cell[CellGroupData[{
Cell[334097, 7445, 1685, 34, 51, "Input",ExpressionUUID->"926e6a21-0f55-4035-83a2-c3298f5965ba"],
Cell[335785, 7481, 282284, 4740, 634, 89038, 1574, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"0ada1aec-f9f2-42e9-a388-df17c6e7f283"]
}, Open  ]],
Cell[618084, 12224, 392, 8, 32, "Input",ExpressionUUID->"adb9bb65-ccf3-4658-8199-39f05eac8412"],
Cell[CellGroupData[{
Cell[618501, 12236, 443, 11, 29, "Input",ExpressionUUID->"f2dd71f0-5c5e-41d6-abc6-9f573b84736e"],
Cell[618947, 12249, 347, 7, 33, "Output",ExpressionUUID->"ea390e9c-a86d-483f-9f87-8f0bd577cd06"]
}, Open  ]]
}, Open  ]]
}
]
*)

